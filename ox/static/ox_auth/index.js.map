{"version":3,"file":"index.js","sources":["../../../assets/@ox/auth/src/components/OxGroupEdit.vue","../../../assets/@ox/auth/src/components/OxGroupUsers.vue","../../../assets/@ox/auth/src/components/OxGroupPanel.vue","../../../assets/@ox/auth/src/app.ts","../../../assets/@ox/auth/src/index.ts"],"sourcesContent":["<template>\n    <ox-model-edit v-bind=\"props\" :repo=\"repos.groups\">\n        <template #default=\"{editor}\">\n            <v-expansion-panels mandatory multiple :model-value=\"['info']\">\n                <v-expansion-panel :title=\"t('views.edit.informations')\" value=\"info\">\n                    <template #text>\n                        <v-form ref=\"form\" v-model=\"editor.valid\">\n                            <v-text-field variant=\"underlined\" label=\"Group name\"\n                                v-model=\"editor.value.name\">\n                                <template #details>\n                                    <ox-field-details :errors=\"editor.errors?.name\"/>\n                                </template>\n                            </v-text-field>\n                        </v-form>\n                    </template>\n                </v-expansion-panel>\n                <v-expansion-panel :title=\"t('models.permissions', 2)\" value='permissions' v-if=\"editor.value.id\">\n                    <template #text>\n                        <v-expansion-panel-text>\n                            <ox-permissions-edit :group=\"editor.value\"\n                                v-model=\"editor.value.permissions_id\"/>\n                        </v-expansion-panel-text>\n                    </template>\n                </v-expansion-panel>\n            </v-expansion-panels>\n        </template>\n    </ox-model-edit>\n</template>\n<script setup>\nimport {defineProps, defineEmits, inject, toRefs, useTemplateRef} from 'vue'\n\nimport {t} from 'ox'\nimport {OxFieldDetails} from 'ox/components'\nimport OxPermissionsEdit from './OxPermissionsEdit.vue'\n\n\nconst emits = defineEmits(['saved',])\nconst repos = inject('repos')\n\nconst props = defineProps({\n    initial: Object,\n})\nconst {initial} = toRefs(props)\nconst form = useTemplateRef('form')\n\nconst panels = inject(\"panels\")\nconst editor = inject(\"editor\")\n</script>\n","<template>\n    <v-table>\n        <thead>\n            <tr>\n                <th>{{ t('fields.username') }}</th>\n                <th>{{ t('fields.first_name') }}</th>\n                <th>{{ t('fields.last_name') }}</th>\n                <th>{{ t('fields.actions') }}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <template v-for=\"user in users\">\n                <tr>\n                    <td>{{ user.username }}</td>\n                    <td>{{ user.first_name }}</td>\n                    <td>{{ user.last_name }}</td>\n                    <td>\n                        <ox-action button name=\"edit\" :value=\"user\"/>\n                    </td>\n                </tr>\n            </template>\n        </tbody>\n\n    </v-table>\n</template>\n<script setup>\nimport {computed, inject, defineProps} from 'vue'\n\nimport {t, query} from 'ox'\nimport {OxAction} from 'ox/components'\n\nconst repos = inject('repos')\nconst props = defineProps({\n    group: Object,\n})\n\nconst users = computed(() => repos.users.where('groups_id', (k) => k?.includes(props.group?.id)).get())\n\n</script>\n","<template>\n    <ox-model-panel :name=\"props.name\"\n            icon=\"mdi-account-multiple\" :repo=\"repos.groups\"\n            :headers=\"props.headers\"\n            :relations=\"props.relations\"\n            search=\"search\">\n        <template v-for=\"(_, name) in slots\" :key=\"name\" #[name]=\"bind\">\n            <slot :name=\"name\" v-bind=\"bind\"></slot>\n        </template>\n\n        <template #views.detail.edit.default=\"{value, saved}\">\n            <ox-group-edit :initial=\"value\" :saved=\"saved\"/>\n        </template>\n\n        <!--\n        <template #views.detail.edit.tab.users=\"{value}\">\n            <v-tab v-if=\"value?.id\" text=\"Members\" value=\"users\"/>\n        </template>\n        <template #views.detail.edit.window.users=\"{value}\">\n            <ox-group-users :group=\"value\"/>\n        </template> -->\n    </ox-model-panel>\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject, useSlots, withDefaults } from 'vue'\n\nimport type {IModelPanelProps} from 'ox'\n\nimport { OxModelPanel } from 'ox/components'\nimport { useAuthModels } from '../composables'\nimport OxGroupEdit from './OxGroupEdit.vue'\n// import OxGroupUsers from './OxGroupUsers.vue'\n\nconst context = inject('context')\nconst slots = useSlots()\n\nconst repos = useAuthModels()\nconst props = withDefaults(defineProps<IModelPanelProps>(), {\n    name: 'groups',\n    headers: ['id', 'name'],\n})\n</script>\n","import {App} from 'ox/components'\nimport * as components from './components'\n\nexport default {\n    extends: App,\n    components,\n}\n","import {init, createPinia} from 'ox'\nimport App from './app'\n\nconst pinia = createPinia()\ninit({App, plugins: [pinia] })\n"],"names":["repos","inject","props","__props","initial","toRefs","form","useTemplateRef","users","computed","k","_a","slots","useSlots","useAuthModels","App","components","pinia","createPinia","init"],"mappings":"y2BAqCA,MAAMA,EAAQC,EAAO,OAAO,EAEtBC,EAAQC,EAGR,CAAC,QAAAC,CAAO,EAAIC,EAAOH,CAAK,EACxBI,EAAOC,EAAe,MAAM,EAEnB,OAAAN,EAAO,QAAQ,EACfA,EAAO,QAAQ,6jCCf9B,MAAMD,EAAQC,EAAO,OAAO,EACtBC,EAAQC,EAIRK,EAAQC,EAAS,IAAMT,EAAM,MAAM,MAAM,YAAcU,GAAC,OAAK,OAAAA,GAAA,YAAAA,EAAG,UAASC,EAAAT,EAAM,QAAN,YAAAS,EAAa,IAAG,EAAE,IAAK,CAAA,0sBCHtFV,EAAO,SAAS,EAChC,MAAMW,EAAQC,EAAS,EAEjBb,EAAQc,EAAc,EACtBZ,EAAQC,mhBClCCY,GAAA,CACX,QAASA,EACT,WAAAC,EACJ,ECHMC,GAAQC,EAAY,EAC1BC,EAAK,CAAC,IAAAJ,GAAK,QAAS,CAACE,EAAK,EAAG"}
