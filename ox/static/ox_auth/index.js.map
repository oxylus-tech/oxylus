{"version":3,"file":"index.js","sources":["../../../assets/ox_auth/src/components/OxGroupEdit.vue","../../../assets/ox_auth/src/components/OxGroupUsers.vue","../../../assets/ox_auth/src/components/OxGroupPanel.vue","../../../assets/ox_auth/src/app.js","../../../assets/ox_auth/src/index.js"],"sourcesContent":["<template>\n    <v-container>\n        <ox-state-alert :state=\"editor.state\"/>\n        <div class=\"mb-3\">\n            <ox-validation-btn v-if=\"editor.edited\"\n                @validate=\"editor.save()\" @reset=\"editor.reset()\" :state=\"editor.state\" :validate-disabled=\"!form.isValid\"/>\n        </div>\n        <v-expansion-panels mandatory multiple :model-value=\"['info']\">\n            <v-expansion-panel title=\"Information\" value=\"info\">\n                <template #text>\n                    <v-form ref=\"form\" v-model=\"editor.valid\">\n                        <v-text-field variant=\"underlined\" label=\"Group name\"\n                            v-model=\"editor.value.name\">\n                            <template #details>\n                                <ox-field-details :errors=\"editor.errors?.name\"/>\n                            </template>\n                        </v-text-field>\n                    </v-form>\n                </template>\n            </v-expansion-panel>\n            <v-expansion-panel title=\"Permissions\" value='permissions' v-if=\"editor.value.id\">\n                <template #text>\n                    <v-expansion-panel-text>\n                        <ox-permissions-edit :group=\"editor.value\"\n                            v-model=\"editor.value.permissions_id\"/>\n                    </v-expansion-panel-text>\n                </template>\n            </v-expansion-panel>\n        </v-expansion-panels>\n    </v-container>\n</template>\n<script setup>\nimport {defineProps, defineEmits, inject, toRefs, reactive, useTemplateRef} from 'vue'\n\nimport {OxFieldDetails, OxStateAlert, OxValidationBtn} from 'ox/components'\nimport { modelEditor } from \"ox\"\n\nimport OxPermissionsEdit from './OxPermissionsEdit.vue'\n\n\nconst emits = defineEmits(['saved',])\nconst repos = inject('repos')\n\nconst props = defineProps({\n    initial: Object,\n})\nconst {initial} = toRefs(props)\nconst form = useTemplateRef('form')\n\nconst panel = inject(\"panel\")\nconst editor = modelEditor({\n    name: \"group-editor\",\n    panel, initial, emits,\n    repo: repos.groups,\n})\n</script>\n","<template>\n    <v-table>\n        <thead>\n            <tr>\n                <th>Username</th>\n                <th>First Name</th>\n                <th>Last Name</th>\n                <th>Actions</th>\n            </tr>\n        </thead>\n        <tbody>\n            <template v-for=\"user in users\">\n                <tr>\n                    <td>{{ user.username }}</td>\n                    <td>{{ user.first_name }}</td>\n                    <td>{{ user.last_name }}</td>\n                    <td>\n                        <ox-action button name=\"edit\" :value=\"user\"/>\n                    </td>\n                </tr>\n            </template>\n        </tbody>\n\n    </v-table>\n</template>\n<script setup>\nimport {computed, inject, defineProps} from 'vue'\n\nimport {OxAction} from 'ox/components'\n\nconst repos = inject('repos')\nconst props = defineProps({\n    group: Object,\n})\n\nconst users = computed(() => repos.users.where('groups_id', (k) => k?.includes(props.group?.id)).get())\n\n</script>\n","<template>\n    <ox-model-panel :name=\"props.name\"\n            icon=\"mdi-account-multiple\" :repo=\"repos.groups\"\n            :headers=\"props.headers\"\n            :relations=\"props.relations\"\n            search=\"search\">\n        <template v-for=\"(_, name) in slots\" :key=\"name\" #[name]=\"bind\">\n            <slot :name=\"name\" v-bind=\"bind\"></slot>\n        </template>\n\n        <template #views.detail.add=\"{panel,value,saved}\"\n                v-if=\"!slots['views.detail.add'] && context.user.can('auth.add_group')\">\n            <ox-group-edit :initial=\"value\" @saved=\"saved\"/>\n        </template>\n\n        <template #views.detail.edit.window.default=\"{value}\"\n                v-if=\"context.user.can('auth.change_group')\">\n            <ox-group-edit :initial=\"value\"/>\n        </template>\n\n        <template #views.detail.edit.tab.users=\"{value}\">\n            <v-tab v-if=\"value?.id\" text=\"Members\" value=\"users\"/>\n        </template>\n        <template #views.detail.edit.window.users=\"{value}\">\n            <ox-group-users :group=\"value\"/>\n        </template>\n    </ox-model-panel>\n</template>\n<script setup>\nimport { defineProps, inject, useSlots } from 'vue'\n\nimport { useModels, useModelPanelProps} from 'ox'\nimport { OxModelPanel } from 'ox/components'\nimport { useAuthModels } from '../composables'\nimport OxGroupEdit from './OxGroupEdit.vue'\nimport OxGroupUsers from './OxGroupUsers.vue'\n\nconst context = inject('context')\nconst slots = useSlots()\n\nconst {repos, models} = useAuthModels()\nconst props = defineProps(\n    useModelPanelProps({\n        name: \"group-panel\",\n        relations: [],\n        headers: [\"id\", \"name\"],\n    })\n)\n</script>\n","import {App} from 'ox/components'\nimport * as components from './components'\n\nexport default {\n    extends: App,\n    components,\n}\n","import {init, createPinia} from 'ox'\nimport App from './app'\n\nconst pinia = createPinia()\ninit({App, plugins: [pinia] })\n"],"names":["emits","__emit","repos","inject","props","__props","initial","toRefs","form","useTemplateRef","panel","editor","modelEditor","users","computed","k","_a","context","slots","useSlots","models","useAuthModels","App","components","pinia","createPinia","init"],"mappings":"ozBAwCA,MAAMA,EAAQC,EACRC,EAAQC,EAAO,OAAO,EAEtBC,EAAQC,EAGR,CAAC,QAAAC,CAAO,EAAIC,EAAOH,CAAK,EACxBI,EAAOC,EAAe,MAAM,EAE5BC,EAAQP,EAAO,OAAO,EACtBQ,EAASC,EAAY,CACvB,KAAM,eACN,MAAAF,EAAO,QAAAJ,EAAS,MAAAN,EAChB,KAAME,EAAM,MAChB,CAAC,krCCxBD,MAAMA,EAAQC,EAAO,OAAO,EACtBC,EAAQC,EAIRQ,EAAQC,EAAS,IAAMZ,EAAM,MAAM,MAAM,YAAca,GAAM,OAAA,OAAAA,GAAA,YAAAA,EAAG,UAASC,EAAAZ,EAAM,QAAN,YAAAY,EAAa,IAAG,EAAE,KAAK,6hBCEtG,MAAMC,EAAUd,EAAO,SAAS,EAC1Be,EAAQC,EAAU,EAElB,CAAC,MAAAjB,EAAO,OAAAkB,CAAM,EAAIC,EAAe,EACjCjB,EAAQC,08BCtCCiB,GAAA,CACX,QAASA,EACT,WAAAC,EACJ,ECHMC,GAAQC,EAAa,EAC3BC,EAAK,CAAC,IAAAJ,GAAK,QAAS,CAACE,EAAK,CAAG,CAAA"}
