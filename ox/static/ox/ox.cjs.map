{"version":3,"file":"ox.cjs","sources":["../../../assets/ox/src/models/enum.ts","../../../assets/node_modules/.pnpm/@pinia-orm+axios@1.10.2_axios@1.9.0_pinia-orm@1.10.2_pinia@2.3.1_typescript@5.8.3_vue@3_70c1ef7562696e8f15c0d4d019f256b8/node_modules/@pinia-orm/axios/dist/index.mjs","../../../assets/ox/src/models/repository.ts","../../../assets/ox/src/models/index.ts","../../../assets/ox/src/composables/models.ts","../../../assets/ox/src/composables/app.ts","../../../assets/ox/src/composables/actions.ts","../../../assets/node_modules/.pnpm/vuetify@3.8.9_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.16_typescript@5.8.3_/node_modules/vuetify/lib/composables/date/adapters/vuetify.js","../../../assets/node_modules/.pnpm/vuetify@3.8.9_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.16_typescript@5.8.3_/node_modules/vuetify/lib/composables/date/date.js","../../../assets/node_modules/.pnpm/vuetify@3.8.9_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.16_typescript@5.8.3_/node_modules/vuetify/lib/framework.js","../../../assets/node_modules/.pnpm/vuetify@3.8.9_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.16_typescript@5.8.3_/node_modules/vuetify/lib/blueprints/md3.js","../../../assets/node_modules/.pnpm/vuetify@3.8.9_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.16_typescript@5.8.3_/node_modules/vuetify/lib/util/colors.js","../../../assets/ox/src/composables/init.ts","../../../assets/ox/src/controllers/query.ts","../../../assets/ox/src/controllers/editor.ts","../../../assets/ox/src/controllers/panel.ts","../../../assets/ox/src/controllers/panels.ts","../../../assets/ox/src/controllers/modelController.ts","../../../assets/ox/src/controllers/modelList.ts","../../../assets/ox/src/controllers/modelEditor.ts","../../../assets/ox/src/controllers/modelPanel.ts","../../../assets/ox/src/composables/controllers.ts","../../../assets/ox/src/composables/rules.ts","../../../assets/ox/src/composables/index.ts"],"sourcesContent":["import { t } from '../composables/i18n'\n\nfunction toString(prefix: string, prop: string) {\n    let key = `enums.${prefix}.${prop}`\n    let val = t(key)\n    if(val != key)\n        return val\n\n    return t(`enums.${prefix}._.${prop}`)\n}\n\n/**\n * Provide an enum and utilities for rendering enum in a list.\n */\nexport const enumProxy = {\n    get(target: Record<string, any>, prop: string, receiver) {\n        if(prop == \"items\")\n            return Object.keys(target).filter(k => k[0] != '_').map(k => ({\n                value: target[k],\n                title: toString(target.__prefix, k)\n            }))\n        if(prop == \"toString\")\n            return (k) => toString(receiver.__prefix, k)\n        return Reflect.get(...arguments)\n    },\n\n}\n\n/**\n * Create a new enum using provided field values.\n *\n * This returns a Proxy that provides the following:\n *\n * - `toString(field: string)`: return translated string for the provided field name\n * - `items`: a list of enumerated values to be used by `v-select` (with `title` and `value`).\n *\n * @param prefix - prefix used in translation, as `enums.{prefix}.{props}`.\n * @param fields - enum fields and values\n */\nexport function Enum(prefix: string, fields: Record<string, any>) {\n    fields.__prefix = prefix\n    return new Proxy(fields, enumProxy)\n}\n","import { Repository, config, useRepo, definePiniaOrmPlugin } from 'pinia-orm';\nimport { getActivePinia } from 'pinia';\n\nclass Response {\n  /**\n   * The repository that called the request.\n   */\n  repository;\n  /**\n   * The request configuration.\n   */\n  config;\n  /**\n   * The axios response instance.\n   */\n  response;\n  /**\n   * Entities created by Pinia ORM.\n   */\n  entities = null;\n  /**\n   * Whether if response data is saved to the store or not.\n   */\n  isSaved = false;\n  /**\n   * Create a new response instance.\n   */\n  constructor(repository, config, response) {\n    this.repository = repository;\n    this.config = config;\n    this.response = response;\n  }\n  /**\n   * Save response data to the store.\n   */\n  async save() {\n    const data = this.getDataFromResponse();\n    if (!this.validateData(data)) {\n      console.warn(\n        \"[Pinia ORM Axios] The response data could not be saved to the store because it is not an object or an array. You might want to use `dataTransformer` option to handle non-array/object response before saving it to the store.\"\n      );\n      return;\n    }\n    let method = this.config.persistBy || \"save\";\n    if (!this.validatePersistAction(method)) {\n      console.warn(\n        '[Pinia ORM Axios] The \"persistBy\" option configured is not a recognized value. Response data will be persisted by the default `save` method.'\n      );\n      method = \"save\";\n    }\n    const result = await this.repository[method](data);\n    this.entities = Array.isArray(result) ? result : [result];\n    this.isSaved = true;\n  }\n  /**\n   * Delete the entity record where the `delete` option is configured.\n   */\n  async delete() {\n    if (this.config.delete === void 0) {\n      throw new Error(\n        \"[Pinia ORM Axios] Could not delete records because the `delete` option is not set.\"\n      );\n    }\n    await this.repository.query().destroy(this.config.delete);\n  }\n  /**\n   * Get the response data from the axios response object. If a `dataTransformer`\n   * option is configured, it will be applied to the response object. If the\n   * `dataKey` option is configured, it will return the data from the given\n   * property within the response body.\n   */\n  getDataFromResponse() {\n    if (this.config.dataTransformer) {\n      return this.config.dataTransformer(this.response);\n    }\n    if (this.config.dataKey) {\n      return this.response.data[this.config.dataKey];\n    }\n    return this.response.data;\n  }\n  /**\n   * Get persist options if any set in config.\n   */\n  // protected getPersistOptions (): PersistOptions | undefined {\n  //   const persistOptions = this.config.persistOptions\n  //\n  //   if (!persistOptions || typeof persistOptions !== 'object') {\n  //     return\n  //   }\n  //\n  //   return Object.keys(persistOptions)\n  //     .filter(this.validatePersistAction) // Filter to avoid polluting the payload.\n  //     .reduce((carry, key) => {\n  //       carry[key] = persistOptions[key]\n  //       return carry\n  //     }, {} as PersistOptions)\n  // }\n  /**\n   * Validate the given data to ensure the Pinia ORM persist methods accept it.\n   */\n  validateData(data) {\n    return data !== null && typeof data === \"object\";\n  }\n  /**\n   * Validate the given string as to ensure it correlates with the available\n   * Pinia ORM persist methods.\n   */\n  validatePersistAction(action) {\n    return [\"save\", \"insert\"].includes(action);\n  }\n}\n\nclass Request {\n  /**\n   * The repository class.\n   */\n  repository;\n  /**\n   * The default config.\n   */\n  config = {\n    save: true\n  };\n  /**\n   * Create a new api instance.\n   */\n  constructor(repository) {\n    this.repository = repository;\n    this.registerActions();\n  }\n  /**\n   * Get the axios client.\n   */\n  get axios() {\n    this.repository.axios = this.repository.axios ?? this.repository.config.axiosApi.axios;\n    if (!this.repository.axios) {\n      throw new Error(\n        \"[Pinia ORM Axios] The axios instance is not registered. Please register the axios instance to the repository.\"\n      );\n    }\n    return this.repository.axios;\n  }\n  /**\n   * Register actions from the repository config.\n   */\n  registerActions() {\n    const actions = { ...this.repository.config.axiosApi?.actions, ...this.repository.getModel().$config()?.axiosApi?.actions };\n    if (!actions) {\n      return;\n    }\n    for (const name in actions) {\n      const action = actions[name];\n      typeof action === \"function\" ? this.registerFunctionAction(name, action) : this.registerObjectAction(name, action);\n    }\n  }\n  /**\n   * Register the given object action.\n   */\n  registerObjectAction(name, action) {\n    this[name] = (config) => {\n      return this.request({ ...action, ...config });\n    };\n  }\n  /**\n   * Register the given function action.\n   */\n  registerFunctionAction(name, action) {\n    this[name] = action.bind(this);\n  }\n  /**\n   * Perform a get request.\n   */\n  get(url, config = {}) {\n    return this.request({ method: \"get\", url, ...config });\n  }\n  /**\n   * Perform a post request.\n   */\n  post(url, data = {}, config = {}) {\n    return this.request({ method: \"post\", url, data, ...config });\n  }\n  /**\n   * Perform a put request.\n   */\n  put(url, data = {}, config = {}) {\n    return this.request({ method: \"put\", url, data, ...config });\n  }\n  /**\n   * Perform a patch request.\n   */\n  patch(url, data = {}, config = {}) {\n    return this.request({ method: \"patch\", url, data, ...config });\n  }\n  /**\n   * Perform a delete request.\n   */\n  delete(url, config = {}) {\n    return this.request({ method: \"delete\", url, ...config });\n  }\n  /**\n   * Perform an api request.\n   */\n  async request(config) {\n    const requestConfig = this.createConfig(config);\n    const axiosResponse = await this.axios.request(requestConfig);\n    return this.createResponse(axiosResponse, requestConfig);\n  }\n  /**\n   * Create a new config by merging the global config, the repository config,\n   * and the given config.\n   */\n  createConfig(config) {\n    return {\n      ...this.config,\n      ...this.repository.globalApiConfig,\n      ...this.repository.apiConfig,\n      ...config\n    };\n  }\n  /**\n   * Create a new response instance by applying a few initialization processes.\n   * For example, it saves response data if `save` option id set to `true`.\n   */\n  async createResponse(axiosResponse, config) {\n    const response = new Response(this.repository, config, axiosResponse);\n    if (config.delete !== void 0) {\n      await response.delete();\n      return response;\n    }\n    config.save && await response.save();\n    return response;\n  }\n}\n\nclass AxiosRepository extends Repository {\n  axios;\n  globalApiConfig;\n  apiConfig;\n  constructor(database, pinia) {\n    super(database, pinia);\n    this.axios = config?.axiosApi?.axios || null;\n    this.globalApiConfig = config?.axiosApi || {};\n    this.apiConfig = {};\n  }\n  api() {\n    return useAxiosApi(this);\n  }\n  setAxios(axios) {\n    this.axios = axios;\n    return this;\n  }\n}\n\nfunction useAxiosApi(repository) {\n  return new Request(repository);\n}\n\nfunction useAxiosRepo(model) {\n  const pinia = getActivePinia();\n  AxiosRepository.useModel = model;\n  return useRepo(AxiosRepository, pinia);\n}\n\nfunction createPiniaOrmAxios(axiosConfig) {\n  return definePiniaOrmPlugin((context) => {\n    context.config.axiosApi = axiosConfig;\n    return context;\n  });\n}\nconst piniaOrmPluginAxios = createPiniaOrmAxios();\n\nexport { AxiosRepository, Request, Response, createPiniaOrmAxios, piniaOrmPluginAxios, useAxiosApi, useAxiosRepo };\n","import type { Model, Database, Repository } from 'pinia-orm'\nimport type { Pinia } from 'pinia'\nimport type { ModelId } from './model'\n\nimport { difference, pull, union } from 'lodash'\nimport { AxiosRepository } from '@pinia-orm/axios'\n\n\nexport type RefKey = string|number\n\n\n/**\n * Provide reference count for items, by context key using acquire-release mechanism.\n *\n * This allows to keep memory low by keeping a registry of items being used.\n *\n * An object released with not more reference is destroyed from database.\n *\n * **Note**: once an object is tagged as acquired, it will be destroyed on release\n * no matter if there are other use outside of it.\n */\nexport class RefCounter<M extends Model> {\n    static _lastKey = 0\n\n    repo: Repository<M>\n    items: Record<RefId, RefKey[]>\n\n    constructor(repo: Repository<M>) {\n        this.repo = repo\n        this.items = {}\n    }\n\n    /** Acquire a unique context key */\n    acquireKey(): number {\n        return this.constructor._lastKey++\n    }\n\n    /** Acquire provided ids for this key */\n    acquire(key: RefKey, ids: RefId[]) {\n        if(ids?.length)\n            for(var id of ids) {\n                if(id in this.items) {\n                    const tags = this.items[id]\n                    !tags.includes(key) && tags.push(key)\n                }\n                else\n                    this.items[id] = [key]\n            }\n    }\n\n    /** Release provided ids for this key */\n    release(key: RefKey, ids: RefId[]) {\n        if(!ids?.length)\n            return\n\n        const drop = []\n        for(var id of ids) {\n            const tags = this.items[id]\n            pull(tags, key)\n            if(!tags?.length) {\n                drop.push(id)\n                delete this.items[id]\n            }\n        }\n\n        if(drop.length)\n            this.repo.destroy(drop)\n    }\n\n    /**\n     * Release and acquire for this key.\n     *\n     * This optimizes out ids\n     */\n    releaseAcquire(key: RefKey, releaseIds: RefId[], acquireIds: RefId[]) {\n        this.release(key, difference(releaseIds, acquireIds))\n        this.acquire(key, difference(acquireIds, releaseIds))\n    }\n\n    /** Release all reference for the provided context key. */\n    flush(key: RefKey) {\n        const drop = []\n        for(var id in this.refs) {\n            const tags = this.refs[id]\n            const idx = tags.indexOf(key)\n            if(idx != -1) {\n                tags.splice(idx,1)\n                if(!tags.length) {\n                    drop.push(id)\n                    delete this.items[id]\n                }\n            }\n        }\n\n        if(drop.length)\n            this.repo.destroy(drop)\n    }\n\n    /** Clear reference counter without destroying items. **/\n    clear() {\n        this.refs = {}\n    }\n\n}\n\n\n/**\n * Base repository used by Oxylus application.\n *\n * It:\n * - provides a `counter` property: used for object reference tracking\n * - AxiosRepository: used to fetch items from api.\n */\nexport class Repository<M extends Model> extends AxiosRepository<M> {\n    refs: RefCounter<M>\n\n    constructor(database: Database, pinia?: Pinia) {\n        super(database, pinia)\n        this.refs = new RefCounter(this)\n    }\n\n    flush() {\n        this.refs.clear()\n        super.flush()\n    }\n}\n","import {Relation, BelongsTo, HasMany, HasManyBy, HasOne} from 'pinia-orm'\nimport type {Repository, PrimaryKey, Model as $Model} from 'pinia-orm'\n\nimport type { ClassType } from '../utils'\n\nexport * from './enum'\nexport * from './model'\nexport * from './auth'\nexport * from './repository'\n\nimport type { Model } from './model'\n\n/** Shortcut to an object of repositories by model entity. */\nexport type Repos={[s: string]: Repository<Model>}\n\n/** Generic type for typing model classes. **/\nexport type ModelType<T extends Model> = ClassType<T>\n\n/** Return relation based on field name or Relation field. */\nexport function asRelation<M extends $Model>(repo: Repository<M>, relation: string|Relation): Relation|null {\n    if(typeof relation == \"string\") {\n        const fields = repo.use?.fields()\n        const field = fields && fields[relation] || null\n        relation = field instanceof Relation ? field : null\n    }\n    return relation\n}\n\n/**\n * For the provided relation, return the field name providing ids of related\n * models.\n */\nexport function getSourceKey(field: Relation): PrimaryKey|null  {\n    if(field instanceof HasMany || field instanceof HasManyBy || field instanceof HasOne || field instanceof BelongsTo)\n        return field.foreignKey\n    return null\n}\n","import type {Constructor, Model as $Model} from 'pinia-orm'\nimport { inject, provide } from 'vue'\nimport { getActivePinia } from 'pinia'\nimport { useRepo as $useRepo } from 'pinia-orm'\n\nimport type {Repos} from '../models'\nimport { Model, User, Repository } from '../models'\n\n\nexport type Models = (typeof Model)[] | {[name: string]: (typeof Model)}\n\n/**\n * {@link useModels} options.\n */\nexport interface IUseModelOpts {\n    /** Use injected repository if already present. */\n    useInject?: boolean\n    /** Use default models */\n    useDefaults?: boolean\n    /** Store subkey (see {@link useModel}) **/\n}\n\n\n/**\n * Use repository for the provided model.\n */\nexport function useRepo<M extends Model>(model: Constructor<M>): Repository<M> {\n    $useRepo(model)\n    const pinia = getActivePinia()\n    Repository.useModel = model as unknown as typeof $Model\n    return $useRepo(Repository<Model>, pinia)\n}\n\n/**\n * Use provided pinia-orm models, returning an object with:\n * - repos: pinia-orm api repositories as dict by entity\n * - models: pinia-orm models\n *\n * It uses injected repos by default if already provided. You\n * can disable it through options.\n *\n * `provide()` those values if not already provided.\n */\nexport function useModels(models: Models, {useInject=true, useDefaults=true, key=null}: IUseModelOpts = {}): Record<str, Repository<Model>>\n{\n    var repos : Repos = useInject && (inject('repos') || {}) as Repos\n    const injected = (useInject && !!Object.keys(repos).length)\n\n    if(!Array.isArray(models))\n       models = Object.values(models)\n\n    if(useDefaults)\n       models.push(User)\n\n    for(const model of models)\n        if(model && model.entity) {\n            if(model.entity in repos)\n                continue\n\n            // there might be a bug here, without useRepo, axios is null on repositories\n            repos[model.entity] = useRepo(model)\n        }\n\n    !injected && provide(\"repos\", repos)\n    return repos\n}\n","import {computed, reactive, provide} from 'vue'\nimport type {ComputedRef, Reactive} from 'vue'\n\nimport {User, Model} from '../models'\nimport type {Repos} from '../models'\nimport { useModels } from './models'\nimport { State } from '../utils'\nimport type {IObject} from '../utils'\n\n\n/**\n * Interface describing application data.\n *\n * Application data is initial data passed down to application from\n * Django generated page.\n */\nexport interface IAppData extends IObject {\n    //! User's data.\n    user?: IObject\n}\n\n/**\n * This provide configuration to {@link AppContext}.\n */\nexport interface IApp {\n    /**\n     * Root API url\n     */\n    apiUrl?: string\n    /**\n     * Id of `<script>` element containing initial application data.\n     */\n    dataEl?: string\n    /**\n     * Models used by application.\n     */\n    models?: (typeof Model)[]\n    /**\n     * Extra application data.\n     */\n    data?: IAppData\n}\n\n\n/**\n * This class provides context for Oxylus application.\n *\n * Which is:\n * - initial data: this is loaded from `<script>` HTML object.\n * - models: it will create adequate `pinia-orm/axios` repositories for them.\n *\n * The context is provided to Vue components in order to allow them\n * to access global information, such as current user or Panel.\n */\nexport class AppContext {\n    static reactive(opts: IApp) : IRAppContext {\n        const obj = reactive(new this(opts)) as IRAppContext\n        obj.user = computed(() => new User(obj.data?.user || {}))\n        return obj\n    }\n\n    constructor(opts: IApp = {}) {\n        Object.assign(this, opts)\n        this.state = State.none()\n        this.showState = false\n    }\n\n    /**\n     * Load data into AppData. If no `value` is provided, read it from\n     * source element.\n     */\n    load(value: any = undefined) {\n        if(this.dataEl !== undefined) {\n            if(value === undefined)\n                value = this.readData(this.dataEl)\n            value.dataEl = this.dataEl\n            this.data = value\n        }\n\n        if(this.models !== undefined) {\n            this.repos = useModels(this.models)\n        }\n    }\n\n    /**\n     * Read data from the context of provided source element.\n     * @param {String} el - id of the DOM element.\n     * @return {Object} read data\n     */\n    readData(dataEl: string): any {\n        const el = document.getElementById(dataEl)\n        if(!el)\n            throw `Element {elementId} not found`;\n        return el.innerText ? JSON.parse(el.innerText) : {};\n    }\n}\nexport interface AppContext extends IApp {\n    /** Models' repositories */\n    repos?: Repos\n    /**\n     * Application level state. This can be displayed to user using\n     * {@link AppContext.showState}.\n     *\n     * This element can display errors to users.\n     */\n    state: State\n    /**\n     * Show application state to user.\n     */\n    showState: boolean\n}\nexport interface IRAppContext extends Reactive<AppContext> {\n    user: ComputedRef<User>\n}\n\n\n/**\n * Create a new {@link AppContext} and provide the following values:\n * - `context`: {@link AppContext} object;\n * - `user`: current {@link models.User};\n */\nexport function useAppContext(opts: IApp, load: boolean = true): AppContext {\n    const obj = AppContext.reactive(opts)\n    load && obj.dataEl && obj.load()\n\n    provide('context', obj)\n    provide('user', obj.user)\n    // provide('repos')\n    return obj\n}\n","import { computed, ref } from 'vue'\n\nimport type { ComputedRef, Ref } from 'vue'\nimport type { Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\n\nimport { User, Model } from '../models'\nimport type { IPermissionGetCodename } from '../models'\n\n\nexport type ActionRun<M extends Model, R> = (user: User, item: M, ...args: any[]) => Promise<R>\nexport type ActionCompleted<M extends Model, R> = (user: User, item: Model, result: R) => void\n\n\nexport interface IActionProps<M extends Model, R>\n{\n    /**\n     * Value or model instance.\n     */\n    item: M\n    /**\n     * Label text displayed to user.\n     */\n    title: string\n    /**\n     * Displayed icon\n     */\n    icon: string\n    /**\n     * Displayed color\n     */\n    color?: string\n    /**\n     * Display action as a small button\n     */\n    button?: boolean\n    /**\n     * If provided, ask user for a confirmation before executing the action.\n     */\n    confirm?: string\n    /**\n     * Required permission to run the action\n     */\n    permission: IPermissionGetCodename\n    /**\n     * The function to call when action is executed\n     */\n    run: ActionRun<M,R>\n\n    /** If provided, open this link */\n    href?: string\n}\n\n\nexport interface IAction<M extends Model, R> {\n    /**\n     * Wether the action is running.\n     */\n    processing: Ref<boolean>\n    /**\n     * Action properties\n     */\n    props: ActionProps<M, R>\n}\n\n/**\n * Action's parameters, `user` MUST be provided.\n */\nexport interface IAction<M extends Model, R> {\n    /** Action components properties */\n    props: IActionProps<M, R>\n    /** The user running the action. */\n    user: User\n    /** If provided, emits `completed` once the action has been executed. */\n    emits?: (event: string, ...opts: any[]) => void\n}\n\n\n/**\n * Create a new action, returning:\n * - processing: ref to boolean indicating wether the action is processing\n * - allowed: computed ref indicating wether the action is allowed\n * - run: async function to call in order to run the method\n */\nexport function useAction<M extends Model,R>({props, user, emits=null}: IAction<M,R>) {\n    const processing = ref(false)\n    const allowed = computed(() => !props.permission || user.can(props.permission, props.item))\n\n    /** Execute the action. */\n    const run = async (...args: any[]): Promise<R> => {\n        if(props.confirm && !confirm(props.confirm))\n            return\n\n        if(props.href)\n            return window.open(props.href, '_blank')\n\n        processing.value = true\n\n        let result : R = props.run(user, props.item, ...args)\n        if(result instanceof Promise)\n            result = await result\n\n        processing.value = false\n        if(emits)\n            emits('completed', props.item, ...args)\n        return result\n    }\n    return {processing, run, allowed}\n}\n","// Utilities\nimport { createRange, padStart } from \"../../../util/index.js\"; // Types\nfunction weekInfo(locale) {\n  // https://simplelocalize.io/data/locales/\n  // then `new Intl.Locale(...).getWeekInfo()`\n  const code = locale.slice(-2).toUpperCase();\n  switch (true) {\n    case locale === 'GB-alt-variant':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n    case locale === '001':\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n    case `AG AS BD BR BS BT BW BZ CA CO DM DO ET GT GU HK HN ID IL IN JM JP KE\n    KH KR LA MH MM MO MT MX MZ NI NP PA PE PH PK PR PY SA SG SV TH TT TW UM US\n    VE VI WS YE ZA ZW`.includes(code):\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 1\n        };\n      }\n    case `AI AL AM AR AU AZ BA BM BN BY CL CM CN CR CY EC GE HR KG KZ LB LK LV\n    MD ME MK MN MY NZ RO RS SI TJ TM TR UA UY UZ VN XK`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n    case `AD AN AT AX BE BG CH CZ DE DK EE ES FI FJ FO FR GB GF GP GR HU IE IS\n    IT LI LT LU MC MQ NL NO PL RE RU SE SK SM VA`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 4\n        };\n      }\n    case `AE AF BH DJ DZ EG IQ IR JO KW LY OM QA SD SY`.includes(code):\n      {\n        return {\n          firstDay: 6,\n          firstWeekSize: 1\n        };\n      }\n    case code === 'MV':\n      {\n        return {\n          firstDay: 5,\n          firstWeekSize: 1\n        };\n      }\n    case code === 'PT':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n    default:\n      return null;\n  }\n}\nfunction getWeekArray(date, locale, firstDayOfWeek) {\n  const weeks = [];\n  let currentWeek = [];\n  const firstDayOfMonth = startOfMonth(date);\n  const lastDayOfMonth = endOfMonth(date);\n  const first = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const firstDayWeekIndex = (firstDayOfMonth.getDay() - first + 7) % 7;\n  const lastDayWeekIndex = (lastDayOfMonth.getDay() - first + 7) % 7;\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i));\n    currentWeek.push(adjacentDay);\n  }\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i);\n\n    // Add the day to the current week\n    currentWeek.push(day);\n\n    // If the current week has 7 days, add it to the weeks array and start a new week\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n  }\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() + i);\n    currentWeek.push(adjacentDay);\n  }\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek);\n  }\n  return weeks;\n}\nfunction startOfWeek(date, locale, firstDayOfWeek) {\n  const day = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const d = new Date(date);\n  while (d.getDay() !== day) {\n    d.setDate(d.getDate() - 1);\n  }\n  return d;\n}\nfunction endOfWeek(date, locale) {\n  const d = new Date(date);\n  const lastDay = ((weekInfo(locale)?.firstDay ?? 0) + 6) % 7;\n  while (d.getDay() !== lastDay) {\n    d.setDate(d.getDate() + 1);\n  }\n  return d;\n}\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\nfunction parseLocalDate(value) {\n  const parts = value.split('-').map(Number);\n\n  // new Date() uses local time zone when passing individual date component values\n  return new Date(parts[0], parts[1] - 1, parts[2]);\n}\nconst _YYYMMDD = /^([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))$/;\nfunction date(value) {\n  if (value == null) return new Date();\n  if (value instanceof Date) return value;\n  if (typeof value === 'string') {\n    let parsed;\n    if (_YYYMMDD.test(value)) {\n      return parseLocalDate(value);\n    } else {\n      parsed = Date.parse(value);\n    }\n    if (!isNaN(parsed)) return new Date(parsed);\n  }\n  return null;\n}\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2);\nfunction getWeekdays(locale, firstDayOfWeek) {\n  const daysFromSunday = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000);\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i);\n    return new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    }).format(weekday);\n  });\n}\nfunction format(value, formatString, locale, formats) {\n  const newDate = date(value) ?? new Date();\n  const customFormat = formats?.[formatString];\n  if (typeof customFormat === 'function') {\n    return customFormat(newDate, formatString, locale);\n  }\n  let options = {};\n  switch (formatString) {\n    case 'fullDate':\n      options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'fullDateWithWeekday':\n      options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'normalDate':\n      const day = newDate.getDate();\n      const month = new Intl.DateTimeFormat(locale, {\n        month: 'long'\n      }).format(newDate);\n      return `${day} ${month}`;\n    case 'normalDateWithWeekday':\n      options = {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'short'\n      };\n      break;\n    case 'shortDate':\n      options = {\n        month: 'short',\n        day: 'numeric'\n      };\n      break;\n    case 'year':\n      options = {\n        year: 'numeric'\n      };\n      break;\n    case 'month':\n      options = {\n        month: 'long'\n      };\n      break;\n    case 'monthShort':\n      options = {\n        month: 'short'\n      };\n      break;\n    case 'monthAndYear':\n      options = {\n        month: 'long',\n        year: 'numeric'\n      };\n      break;\n    case 'monthAndDate':\n      options = {\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'weekday':\n      options = {\n        weekday: 'long'\n      };\n      break;\n    case 'weekdayShort':\n      options = {\n        weekday: 'short'\n      };\n      break;\n    case 'dayOfMonth':\n      return new Intl.NumberFormat(locale).format(newDate.getDate());\n    case 'hours12h':\n      options = {\n        hour: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'hours24h':\n      options = {\n        hour: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'minutes':\n      options = {\n        minute: 'numeric'\n      };\n      break;\n    case 'seconds':\n      options = {\n        second: 'numeric'\n      };\n      break;\n    case 'fullTime':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n    case 'fullTime12h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'fullTime24h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'fullDateTime':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n    case 'fullDateTime12h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'fullDateTime24h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'keyboardDate':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      break;\n    case 'keyboardDateTime':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    case 'keyboardDateTime12h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    case 'keyboardDateTime24h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    default:\n      options = customFormat ?? {\n        timeZone: 'UTC',\n        timeZoneName: 'short'\n      };\n  }\n  return new Intl.DateTimeFormat(locale, options).format(newDate);\n}\nfunction toISO(adapter, value) {\n  const date = adapter.toJsDate(value);\n  const year = date.getFullYear();\n  const month = padStart(String(date.getMonth() + 1), 2, '0');\n  const day = padStart(String(date.getDate()), 2, '0');\n  return `${year}-${month}-${day}`;\n}\nfunction parseISO(value) {\n  const [year, month, day] = value.split('-').map(Number);\n  return new Date(year, month - 1, day);\n}\nfunction addMinutes(date, amount) {\n  const d = new Date(date);\n  d.setMinutes(d.getMinutes() + amount);\n  return d;\n}\nfunction addHours(date, amount) {\n  const d = new Date(date);\n  d.setHours(d.getHours() + amount);\n  return d;\n}\nfunction addDays(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount);\n  return d;\n}\nfunction addWeeks(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount * 7);\n  return d;\n}\nfunction addMonths(date, amount) {\n  const d = new Date(date);\n  d.setDate(1);\n  d.setMonth(d.getMonth() + amount);\n  return d;\n}\nfunction getYear(date) {\n  return date.getFullYear();\n}\nfunction getMonth(date) {\n  return date.getMonth();\n}\nfunction getWeek(date, locale, firstDayOfWeek, firstWeekMinSize) {\n  const weekInfoFromLocale = weekInfo(locale);\n  const weekStart = firstDayOfWeek ?? weekInfoFromLocale?.firstDay ?? 0;\n  const minWeekSize = firstWeekMinSize ?? weekInfoFromLocale?.firstWeekSize ?? 1;\n  function firstWeekSize(year) {\n    const yearStart = new Date(year, 0, 1);\n    return 7 - getDiff(yearStart, startOfWeek(yearStart, locale, weekStart), 'days');\n  }\n  let year = getYear(date);\n  const currentWeekEnd = addDays(startOfWeek(date, locale, weekStart), 6);\n  if (year < getYear(currentWeekEnd) && firstWeekSize(year + 1) >= minWeekSize) {\n    year++;\n  }\n  const yearStart = new Date(year, 0, 1);\n  const size = firstWeekSize(year);\n  const d1w1 = size >= minWeekSize ? addDays(yearStart, size - 7) : addDays(yearStart, size);\n  return 1 + getDiff(endOfDay(date), startOfDay(d1w1), 'weeks');\n}\nfunction getDate(date) {\n  return date.getDate();\n}\nfunction getNextMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n}\nfunction getPreviousMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() - 1, 1);\n}\nfunction getHours(date) {\n  return date.getHours();\n}\nfunction getMinutes(date) {\n  return date.getMinutes();\n}\nfunction startOfYear(date) {\n  return new Date(date.getFullYear(), 0, 1);\n}\nfunction endOfYear(date) {\n  return new Date(date.getFullYear(), 11, 31);\n}\nfunction isWithinRange(date, range) {\n  return isAfter(date, range[0]) && isBefore(date, range[1]);\n}\nfunction isValid(date) {\n  const d = new Date(date);\n  return d instanceof Date && !isNaN(d.getTime());\n}\nfunction isAfter(date, comparing) {\n  return date.getTime() > comparing.getTime();\n}\nfunction isAfterDay(date, comparing) {\n  return isAfter(startOfDay(date), startOfDay(comparing));\n}\nfunction isBefore(date, comparing) {\n  return date.getTime() < comparing.getTime();\n}\nfunction isEqual(date, comparing) {\n  return date.getTime() === comparing.getTime();\n}\nfunction isSameDay(date, comparing) {\n  return date.getDate() === comparing.getDate() && date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction isSameMonth(date, comparing) {\n  return date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction isSameYear(date, comparing) {\n  return date.getFullYear() === comparing.getFullYear();\n}\nfunction getDiff(date, comparing, unit) {\n  const d = new Date(date);\n  const c = new Date(comparing);\n  switch (unit) {\n    case 'years':\n      return d.getFullYear() - c.getFullYear();\n    case 'quarters':\n      return Math.floor((d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12) / 4);\n    case 'months':\n      return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12;\n    case 'weeks':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24 * 7));\n    case 'days':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24));\n    case 'hours':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60));\n    case 'minutes':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60));\n    case 'seconds':\n      return Math.floor((d.getTime() - c.getTime()) / 1000);\n    default:\n      {\n        return d.getTime() - c.getTime();\n      }\n  }\n}\nfunction setHours(date, count) {\n  const d = new Date(date);\n  d.setHours(count);\n  return d;\n}\nfunction setMinutes(date, count) {\n  const d = new Date(date);\n  d.setMinutes(count);\n  return d;\n}\nfunction setMonth(date, count) {\n  const d = new Date(date);\n  d.setMonth(count);\n  return d;\n}\nfunction setDate(date, day) {\n  const d = new Date(date);\n  d.setDate(day);\n  return d;\n}\nfunction setYear(date, year) {\n  const d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\nfunction startOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n}\nfunction endOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n}\nexport class VuetifyDateAdapter {\n  constructor(options) {\n    this.locale = options.locale;\n    this.formats = options.formats;\n  }\n  date(value) {\n    return date(value);\n  }\n  toJsDate(date) {\n    return date;\n  }\n  toISO(date) {\n    return toISO(this, date);\n  }\n  parseISO(date) {\n    return parseISO(date);\n  }\n  addMinutes(date, amount) {\n    return addMinutes(date, amount);\n  }\n  addHours(date, amount) {\n    return addHours(date, amount);\n  }\n  addDays(date, amount) {\n    return addDays(date, amount);\n  }\n  addWeeks(date, amount) {\n    return addWeeks(date, amount);\n  }\n  addMonths(date, amount) {\n    return addMonths(date, amount);\n  }\n  getWeekArray(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekArray(date, this.locale, firstDay);\n  }\n  startOfWeek(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return startOfWeek(date, this.locale, firstDay);\n  }\n  endOfWeek(date) {\n    return endOfWeek(date, this.locale);\n  }\n  startOfMonth(date) {\n    return startOfMonth(date);\n  }\n  endOfMonth(date) {\n    return endOfMonth(date);\n  }\n  format(date, formatString) {\n    return format(date, formatString, this.locale, this.formats);\n  }\n  isEqual(date, comparing) {\n    return isEqual(date, comparing);\n  }\n  isValid(date) {\n    return isValid(date);\n  }\n  isWithinRange(date, range) {\n    return isWithinRange(date, range);\n  }\n  isAfter(date, comparing) {\n    return isAfter(date, comparing);\n  }\n  isAfterDay(date, comparing) {\n    return isAfterDay(date, comparing);\n  }\n  isBefore(date, comparing) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing);\n  }\n  isSameDay(date, comparing) {\n    return isSameDay(date, comparing);\n  }\n  isSameMonth(date, comparing) {\n    return isSameMonth(date, comparing);\n  }\n  isSameYear(date, comparing) {\n    return isSameYear(date, comparing);\n  }\n  setMinutes(date, count) {\n    return setMinutes(date, count);\n  }\n  setHours(date, count) {\n    return setHours(date, count);\n  }\n  setMonth(date, count) {\n    return setMonth(date, count);\n  }\n  setDate(date, day) {\n    return setDate(date, day);\n  }\n  setYear(date, year) {\n    return setYear(date, year);\n  }\n  getDiff(date, comparing, unit) {\n    return getDiff(date, comparing, unit);\n  }\n  getWeekdays(firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekdays(this.locale, firstDay);\n  }\n  getYear(date) {\n    return getYear(date);\n  }\n  getMonth(date) {\n    return getMonth(date);\n  }\n  getWeek(date, firstDayOfWeek, firstWeekMinSize) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeek(date, this.locale, firstDay, firstWeekMinSize);\n  }\n  getDate(date) {\n    return getDate(date);\n  }\n  getNextMonth(date) {\n    return getNextMonth(date);\n  }\n  getPreviousMonth(date) {\n    return getPreviousMonth(date);\n  }\n  getHours(date) {\n    return getHours(date);\n  }\n  getMinutes(date) {\n    return getMinutes(date);\n  }\n  startOfDay(date) {\n    return startOfDay(date);\n  }\n  endOfDay(date) {\n    return endOfDay(date);\n  }\n  startOfYear(date) {\n    return startOfYear(date);\n  }\n  endOfYear(date) {\n    return endOfYear(date);\n  }\n}\n//# sourceMappingURL=vuetify.js.map","// Composables\nimport { useLocale } from \"../locale.js\"; // Utilities\nimport { inject, reactive, watch } from 'vue';\nimport { mergeDeep } from \"../../util/index.js\"; // Types\n// Adapters\nimport { VuetifyDateAdapter } from \"./adapters/vuetify.js\";\n/** Supports module augmentation to specify date adapter types */\nexport let DateModule;\nexport const DateOptionsSymbol = Symbol.for('vuetify:date-options');\nexport const DateAdapterSymbol = Symbol.for('vuetify:date-adapter');\nexport function createDate(options, locale) {\n  const _options = mergeDeep({\n    adapter: VuetifyDateAdapter,\n    locale: {\n      af: 'af-ZA',\n      // ar: '', # not the same value for all variants\n      bg: 'bg-BG',\n      ca: 'ca-ES',\n      ckb: '',\n      cs: 'cs-CZ',\n      de: 'de-DE',\n      el: 'el-GR',\n      en: 'en-US',\n      // es: '', # not the same value for all variants\n      et: 'et-EE',\n      fa: 'fa-IR',\n      fi: 'fi-FI',\n      // fr: '', #not the same value for all variants\n      hr: 'hr-HR',\n      hu: 'hu-HU',\n      he: 'he-IL',\n      id: 'id-ID',\n      it: 'it-IT',\n      ja: 'ja-JP',\n      ko: 'ko-KR',\n      lv: 'lv-LV',\n      lt: 'lt-LT',\n      nl: 'nl-NL',\n      no: 'no-NO',\n      pl: 'pl-PL',\n      pt: 'pt-PT',\n      ro: 'ro-RO',\n      ru: 'ru-RU',\n      sk: 'sk-SK',\n      sl: 'sl-SI',\n      srCyrl: 'sr-SP',\n      srLatn: 'sr-SP',\n      sv: 'sv-SE',\n      th: 'th-TH',\n      tr: 'tr-TR',\n      az: 'az-AZ',\n      uk: 'uk-UA',\n      vi: 'vi-VN',\n      zhHans: 'zh-CN',\n      zhHant: 'zh-TW'\n    }\n  }, options);\n  return {\n    options: _options,\n    instance: createInstance(_options, locale)\n  };\n}\nexport function createDateRange(adapter, start, stop) {\n  const diff = adapter.getDiff(adapter.endOfDay(stop ?? start), adapter.startOfDay(start), 'days');\n  const datesInRange = [start];\n  for (let i = 1; i < diff; i++) {\n    const nextDate = adapter.addDays(start, i);\n    datesInRange.push(nextDate);\n  }\n  if (stop) {\n    datesInRange.push(adapter.endOfDay(stop));\n  }\n  return datesInRange;\n}\nfunction createInstance(options, locale) {\n  const instance = reactive(typeof options.adapter === 'function'\n  // eslint-disable-next-line new-cap\n  ? new options.adapter({\n    locale: options.locale[locale.current.value] ?? locale.current.value,\n    formats: options.formats\n  }) : options.adapter);\n  watch(locale.current, value => {\n    instance.locale = options.locale[value] ?? value ?? instance.locale;\n  });\n  return instance;\n}\nexport function useDate() {\n  const options = inject(DateOptionsSymbol);\n  if (!options) throw new Error('[Vuetify] Could not find injected date options');\n  const locale = useLocale();\n  return createInstance(options, locale);\n}\n//# sourceMappingURL=date.js.map","// Composables\nimport { createDate, DateAdapterSymbol, DateOptionsSymbol } from \"./composables/date/date.js\";\nimport { createDefaults, DefaultsSymbol } from \"./composables/defaults.js\";\nimport { createDisplay, DisplaySymbol } from \"./composables/display.js\";\nimport { createGoTo, GoToSymbol } from \"./composables/goto.js\";\nimport { createIcons, IconSymbol } from \"./composables/icons.js\";\nimport { createLocale, LocaleSymbol } from \"./composables/locale.js\";\nimport { createTheme, ThemeSymbol } from \"./composables/theme.js\"; // Utilities\nimport { effectScope, nextTick, reactive } from 'vue';\nimport { defineComponent, IN_BROWSER, mergeDeep } from \"./util/index.js\"; // Types\n// Exports\nexport * from \"./composables/index.js\";\nexport * from \"./types.js\";\nexport function createVuetify() {\n  let vuetify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    blueprint,\n    ...rest\n  } = vuetify;\n  const options = mergeDeep(blueprint, rest);\n  const {\n    aliases = {},\n    components = {},\n    directives = {}\n  } = options;\n  const scope = effectScope();\n  return scope.run(() => {\n    const defaults = createDefaults(options.defaults);\n    const display = createDisplay(options.display, options.ssr);\n    const theme = createTheme(options.theme);\n    const icons = createIcons(options.icons);\n    const locale = createLocale(options.locale);\n    const date = createDate(options.date, locale);\n    const goTo = createGoTo(options.goTo, locale);\n    function install(app) {\n      for (const key in directives) {\n        app.directive(key, directives[key]);\n      }\n      for (const key in components) {\n        app.component(key, components[key]);\n      }\n      for (const key in aliases) {\n        app.component(key, defineComponent({\n          ...aliases[key],\n          name: key,\n          aliasName: aliases[key].name\n        }));\n      }\n      const appScope = effectScope();\n      appScope.run(() => {\n        theme.install(app);\n      });\n      app.onUnmount(() => appScope.stop());\n      app.provide(DefaultsSymbol, defaults);\n      app.provide(DisplaySymbol, display);\n      app.provide(ThemeSymbol, theme);\n      app.provide(IconSymbol, icons);\n      app.provide(LocaleSymbol, locale);\n      app.provide(DateOptionsSymbol, date.options);\n      app.provide(DateAdapterSymbol, date.instance);\n      app.provide(GoToSymbol, goTo);\n      if (IN_BROWSER && options.ssr) {\n        if (app.$nuxt) {\n          app.$nuxt.hook('app:suspense:resolve', () => {\n            display.update();\n          });\n        } else {\n          const {\n            mount\n          } = app;\n          app.mount = function () {\n            const vm = mount(...arguments);\n            nextTick(() => display.update());\n            app.mount = mount;\n            return vm;\n          };\n        }\n      }\n      if (typeof __VUE_OPTIONS_API__ !== 'boolean' || __VUE_OPTIONS_API__) {\n        app.mixin({\n          computed: {\n            $vuetify() {\n              return reactive({\n                defaults: inject.call(this, DefaultsSymbol),\n                display: inject.call(this, DisplaySymbol),\n                theme: inject.call(this, ThemeSymbol),\n                icons: inject.call(this, IconSymbol),\n                locale: inject.call(this, LocaleSymbol),\n                date: inject.call(this, DateAdapterSymbol)\n              });\n            }\n          }\n        });\n      }\n    }\n    function unmount() {\n      scope.stop();\n    }\n    return {\n      install,\n      unmount,\n      defaults,\n      display,\n      theme,\n      icons,\n      locale,\n      date,\n      goTo\n    };\n  });\n}\nexport const version = \"3.8.9\";\ncreateVuetify.version = version;\n\n// Vue's inject() can only be used in setup\nfunction inject(key) {\n  const vm = this.$;\n  const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides;\n  if (provides && key in provides) {\n    return provides[key];\n  }\n}\n//# sourceMappingURL=framework.js.map","// Icons\nimport { mdi } from \"../iconsets/mdi.js\"; // Types\nexport const md3 = {\n  defaults: {\n    VAppBar: {\n      flat: true\n    },\n    VAutocomplete: {\n      variant: 'outlined'\n    },\n    VBanner: {\n      color: 'primary'\n    },\n    VBottomSheet: {\n      contentClass: 'rounded-t-xl overflow-hidden'\n    },\n    VBtn: {\n      color: 'primary',\n      rounded: 'xl'\n    },\n    VBtnGroup: {\n      rounded: 'xl',\n      VBtn: {\n        rounded: null\n      }\n    },\n    VCard: {\n      rounded: 'lg'\n    },\n    VCheckbox: {\n      color: 'secondary',\n      inset: true\n    },\n    VChip: {\n      rounded: 'sm'\n    },\n    VCombobox: {\n      variant: 'outlined'\n    },\n    VDateInput: {\n      variant: 'outlined'\n    },\n    VDatePicker: {\n      controlHeight: 48,\n      color: 'primary',\n      divided: true,\n      headerColor: '',\n      elevation: 3,\n      rounded: 'xl',\n      VBtn: {\n        color: 'high-emphasis',\n        rounded: 'circle'\n      }\n    },\n    VFileInput: {\n      variant: 'outlined'\n    },\n    VNavigationDrawer: {\n      // VList: {\n      //   nav: true,\n      //   VListItem: {\n      //     rounded: 'xl',\n      //   },\n      // },\n    },\n    VNumberInput: {\n      variant: 'outlined',\n      VBtn: {\n        color: undefined,\n        rounded: undefined\n      }\n    },\n    VSelect: {\n      variant: 'outlined'\n    },\n    VSlider: {\n      color: 'primary'\n    },\n    VTabs: {\n      color: 'primary'\n    },\n    VTextarea: {\n      variant: 'outlined'\n    },\n    VTextField: {\n      variant: 'outlined'\n    },\n    VToolbar: {\n      VBtn: {\n        color: null\n      }\n    }\n  },\n  icons: {\n    defaultSet: 'mdi',\n    sets: {\n      mdi\n    }\n  },\n  theme: {\n    themes: {\n      light: {\n        colors: {\n          primary: '#6750a4',\n          secondary: '#b4b0bb',\n          tertiary: '#7d5260',\n          error: '#b3261e',\n          surface: '#fffbfe'\n        }\n      }\n    }\n  }\n};\n//# sourceMappingURL=md3.js.map","export const red = {\n  base: '#f44336',\n  lighten5: '#ffebee',\n  lighten4: '#ffcdd2',\n  lighten3: '#ef9a9a',\n  lighten2: '#e57373',\n  lighten1: '#ef5350',\n  darken1: '#e53935',\n  darken2: '#d32f2f',\n  darken3: '#c62828',\n  darken4: '#b71c1c',\n  accent1: '#ff8a80',\n  accent2: '#ff5252',\n  accent3: '#ff1744',\n  accent4: '#d50000'\n};\nexport const pink = {\n  base: '#e91e63',\n  lighten5: '#fce4ec',\n  lighten4: '#f8bbd0',\n  lighten3: '#f48fb1',\n  lighten2: '#f06292',\n  lighten1: '#ec407a',\n  darken1: '#d81b60',\n  darken2: '#c2185b',\n  darken3: '#ad1457',\n  darken4: '#880e4f',\n  accent1: '#ff80ab',\n  accent2: '#ff4081',\n  accent3: '#f50057',\n  accent4: '#c51162'\n};\nexport const purple = {\n  base: '#9c27b0',\n  lighten5: '#f3e5f5',\n  lighten4: '#e1bee7',\n  lighten3: '#ce93d8',\n  lighten2: '#ba68c8',\n  lighten1: '#ab47bc',\n  darken1: '#8e24aa',\n  darken2: '#7b1fa2',\n  darken3: '#6a1b9a',\n  darken4: '#4a148c',\n  accent1: '#ea80fc',\n  accent2: '#e040fb',\n  accent3: '#d500f9',\n  accent4: '#aa00ff'\n};\nexport const deepPurple = {\n  base: '#673ab7',\n  lighten5: '#ede7f6',\n  lighten4: '#d1c4e9',\n  lighten3: '#b39ddb',\n  lighten2: '#9575cd',\n  lighten1: '#7e57c2',\n  darken1: '#5e35b1',\n  darken2: '#512da8',\n  darken3: '#4527a0',\n  darken4: '#311b92',\n  accent1: '#b388ff',\n  accent2: '#7c4dff',\n  accent3: '#651fff',\n  accent4: '#6200ea'\n};\nexport const indigo = {\n  base: '#3f51b5',\n  lighten5: '#e8eaf6',\n  lighten4: '#c5cae9',\n  lighten3: '#9fa8da',\n  lighten2: '#7986cb',\n  lighten1: '#5c6bc0',\n  darken1: '#3949ab',\n  darken2: '#303f9f',\n  darken3: '#283593',\n  darken4: '#1a237e',\n  accent1: '#8c9eff',\n  accent2: '#536dfe',\n  accent3: '#3d5afe',\n  accent4: '#304ffe'\n};\nexport const blue = {\n  base: '#2196f3',\n  lighten5: '#e3f2fd',\n  lighten4: '#bbdefb',\n  lighten3: '#90caf9',\n  lighten2: '#64b5f6',\n  lighten1: '#42a5f5',\n  darken1: '#1e88e5',\n  darken2: '#1976d2',\n  darken3: '#1565c0',\n  darken4: '#0d47a1',\n  accent1: '#82b1ff',\n  accent2: '#448aff',\n  accent3: '#2979ff',\n  accent4: '#2962ff'\n};\nexport const lightBlue = {\n  base: '#03a9f4',\n  lighten5: '#e1f5fe',\n  lighten4: '#b3e5fc',\n  lighten3: '#81d4fa',\n  lighten2: '#4fc3f7',\n  lighten1: '#29b6f6',\n  darken1: '#039be5',\n  darken2: '#0288d1',\n  darken3: '#0277bd',\n  darken4: '#01579b',\n  accent1: '#80d8ff',\n  accent2: '#40c4ff',\n  accent3: '#00b0ff',\n  accent4: '#0091ea'\n};\nexport const cyan = {\n  base: '#00bcd4',\n  lighten5: '#e0f7fa',\n  lighten4: '#b2ebf2',\n  lighten3: '#80deea',\n  lighten2: '#4dd0e1',\n  lighten1: '#26c6da',\n  darken1: '#00acc1',\n  darken2: '#0097a7',\n  darken3: '#00838f',\n  darken4: '#006064',\n  accent1: '#84ffff',\n  accent2: '#18ffff',\n  accent3: '#00e5ff',\n  accent4: '#00b8d4'\n};\nexport const teal = {\n  base: '#009688',\n  lighten5: '#e0f2f1',\n  lighten4: '#b2dfdb',\n  lighten3: '#80cbc4',\n  lighten2: '#4db6ac',\n  lighten1: '#26a69a',\n  darken1: '#00897b',\n  darken2: '#00796b',\n  darken3: '#00695c',\n  darken4: '#004d40',\n  accent1: '#a7ffeb',\n  accent2: '#64ffda',\n  accent3: '#1de9b6',\n  accent4: '#00bfa5'\n};\nexport const green = {\n  base: '#4caf50',\n  lighten5: '#e8f5e9',\n  lighten4: '#c8e6c9',\n  lighten3: '#a5d6a7',\n  lighten2: '#81c784',\n  lighten1: '#66bb6a',\n  darken1: '#43a047',\n  darken2: '#388e3c',\n  darken3: '#2e7d32',\n  darken4: '#1b5e20',\n  accent1: '#b9f6ca',\n  accent2: '#69f0ae',\n  accent3: '#00e676',\n  accent4: '#00c853'\n};\nexport const lightGreen = {\n  base: '#8bc34a',\n  lighten5: '#f1f8e9',\n  lighten4: '#dcedc8',\n  lighten3: '#c5e1a5',\n  lighten2: '#aed581',\n  lighten1: '#9ccc65',\n  darken1: '#7cb342',\n  darken2: '#689f38',\n  darken3: '#558b2f',\n  darken4: '#33691e',\n  accent1: '#ccff90',\n  accent2: '#b2ff59',\n  accent3: '#76ff03',\n  accent4: '#64dd17'\n};\nexport const lime = {\n  base: '#cddc39',\n  lighten5: '#f9fbe7',\n  lighten4: '#f0f4c3',\n  lighten3: '#e6ee9c',\n  lighten2: '#dce775',\n  lighten1: '#d4e157',\n  darken1: '#c0ca33',\n  darken2: '#afb42b',\n  darken3: '#9e9d24',\n  darken4: '#827717',\n  accent1: '#f4ff81',\n  accent2: '#eeff41',\n  accent3: '#c6ff00',\n  accent4: '#aeea00'\n};\nexport const yellow = {\n  base: '#ffeb3b',\n  lighten5: '#fffde7',\n  lighten4: '#fff9c4',\n  lighten3: '#fff59d',\n  lighten2: '#fff176',\n  lighten1: '#ffee58',\n  darken1: '#fdd835',\n  darken2: '#fbc02d',\n  darken3: '#f9a825',\n  darken4: '#f57f17',\n  accent1: '#ffff8d',\n  accent2: '#ffff00',\n  accent3: '#ffea00',\n  accent4: '#ffd600'\n};\nexport const amber = {\n  base: '#ffc107',\n  lighten5: '#fff8e1',\n  lighten4: '#ffecb3',\n  lighten3: '#ffe082',\n  lighten2: '#ffd54f',\n  lighten1: '#ffca28',\n  darken1: '#ffb300',\n  darken2: '#ffa000',\n  darken3: '#ff8f00',\n  darken4: '#ff6f00',\n  accent1: '#ffe57f',\n  accent2: '#ffd740',\n  accent3: '#ffc400',\n  accent4: '#ffab00'\n};\nexport const orange = {\n  base: '#ff9800',\n  lighten5: '#fff3e0',\n  lighten4: '#ffe0b2',\n  lighten3: '#ffcc80',\n  lighten2: '#ffb74d',\n  lighten1: '#ffa726',\n  darken1: '#fb8c00',\n  darken2: '#f57c00',\n  darken3: '#ef6c00',\n  darken4: '#e65100',\n  accent1: '#ffd180',\n  accent2: '#ffab40',\n  accent3: '#ff9100',\n  accent4: '#ff6d00'\n};\nexport const deepOrange = {\n  base: '#ff5722',\n  lighten5: '#fbe9e7',\n  lighten4: '#ffccbc',\n  lighten3: '#ffab91',\n  lighten2: '#ff8a65',\n  lighten1: '#ff7043',\n  darken1: '#f4511e',\n  darken2: '#e64a19',\n  darken3: '#d84315',\n  darken4: '#bf360c',\n  accent1: '#ff9e80',\n  accent2: '#ff6e40',\n  accent3: '#ff3d00',\n  accent4: '#dd2c00'\n};\nexport const brown = {\n  base: '#795548',\n  lighten5: '#efebe9',\n  lighten4: '#d7ccc8',\n  lighten3: '#bcaaa4',\n  lighten2: '#a1887f',\n  lighten1: '#8d6e63',\n  darken1: '#6d4c41',\n  darken2: '#5d4037',\n  darken3: '#4e342e',\n  darken4: '#3e2723'\n};\nexport const blueGrey = {\n  base: '#607d8b',\n  lighten5: '#eceff1',\n  lighten4: '#cfd8dc',\n  lighten3: '#b0bec5',\n  lighten2: '#90a4ae',\n  lighten1: '#78909c',\n  darken1: '#546e7a',\n  darken2: '#455a64',\n  darken3: '#37474f',\n  darken4: '#263238'\n};\nexport const grey = {\n  base: '#9e9e9e',\n  lighten5: '#fafafa',\n  lighten4: '#f5f5f5',\n  lighten3: '#eeeeee',\n  lighten2: '#e0e0e0',\n  lighten1: '#bdbdbd',\n  darken1: '#757575',\n  darken2: '#616161',\n  darken3: '#424242',\n  darken4: '#212121'\n};\nexport const shades = {\n  black: '#000000',\n  white: '#ffffff',\n  transparent: '#ffffff00'\n};\nexport default {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  blueGrey,\n  grey,\n  shades\n};\n//# sourceMappingURL=colors.js.map","import { createApp as $createApp, reactive, watch } from 'vue'\nimport { createVuetify as $createVuetify } from 'vuetify'\nimport { md3 } from 'vuetify/blueprints'\nimport colors from 'vuetify/util/colors'\n\nimport { createPinia as $createPinia, setActivePinia } from 'pinia'\nimport { createORM } from 'pinia-orm'\nimport { createPiniaOrmAxios } from '@pinia-orm/axios'\nimport axios from 'axios'\n\nimport '../styles/index.scss'\nimport * as vendorComponents from 'ox/vendor'\nimport config from '../config'\nimport {i18n, useI18n} from './i18n'\n\n\n\n/**\n * {@link createVuetify} parameters. Theses are passed down to Vuetify's\n * plugin initialization.\n */\nexport interface ICreateVuetifyOpts extends Record<string, any> {\n    components?: Record<string,any>\n}\n\n\n/**\n * Options passed to {@link createApp}.\n */\nexport interface ICreateAppOpts {\n    /**\n     * Vue's `createApp` `props` arguments\n     */\n    props?: Record<string, any>\n    /**\n     *  Vuetify plugin's parameters (passed to {@link createVuetify})\n     */\n    vuetify?: ICreateVuetifyOpts\n    /**\n     * Plugins to add to Vue application.\n     */\n    plugins?: Record<string, any>[]\n}\n\nexport interface IInitOpts extends ICreateAppOpts {\n    /** Vue's App config. */\n    App?: any\n    /** Element selector to mount application on. */\n    el?: string\n    /**\n     * If True (default), defer application creation after page has been\n     * loaded (on `window.load` event)\n     */\n    onLoad?: boolean\n}\n\n\n/**\n * Main entry point to initialize and mount an application.\n *\n * The base `App` config is provided by `ox/components` modules.\n */\nexport function init({App=null, el='#app', onLoad=true, ...options}: IInitOpts={}) {\n    function initApp() {\n        const app = createApp(App, options)\n        const vm = el ? app.mount(el) : null\n        document.body.classList.remove('loading')\n        return {app, el, vm}\n    }\n\n    return new Promise((resolve) => {\n        if(onLoad)\n            return window.addEventListener(\n                'load', () => resolve(initApp())\n            )\n        resolve(initApp())\n    })\n}\n\n\n/**\n * Create Oxerp application (including Vuetify).\n * It also provide app's global property `window` in order to allow components\n * access to this object.\n */\nexport function createApp(app: Record<string, any>, {props={}, vuetify={}, plugins=null}: ICreateAppOpts={}) {\n    app = $createApp(app, props)\n    app.config.globalProperties.window = window\n\n    app.use(createVuetify(vuetify))\n    app.use(i18n)\n    useI18n()\n\n    plugins && plugins.forEach(plugin => app.use(plugin))\n    return app\n}\n\n\n\n/**\n * Create and return vuetify plugin with default components set.\n * This is called by `createApp`.\n */\nexport function createVuetify({components={}, defaults={}, ...opts}: ICreateVuetifyOpts) {\n    opts.components = {\n        ...vendorComponents,\n        ...components\n    }\n    return $createVuetify({\n        blueprint: md3,\n        theme: {\n            themes: {\n                light: {\n                    dark: false,\n                    colors: {\n                        primary: colors.green.darken1,\n                        secondary: colors.green.lighten4\n                    }\n                }\n            }\n        },\n        defaults: {\n            ...defaults,\n            VTextField: { variant: 'underlined', },\n            VSelect: { variant: 'underlined', },\n            VTextarea: { variant: 'outlined', },\n            VCombobox: { variant: 'underlined', },\n            VAutocomplete: { variant: 'underlined', },\n        },\n        ...opts\n    })\n}\n\n\n\n/**\n * Create Pinia and PiniaOrm plugins instances.\n * If no `baseURL` is provided, get it from `document.body.dataset.apiUrl`.\n */\nexport function createPinia({axiosConfig=null, baseURL=null}: Record<string, any>={}) {\n    if(!baseURL)\n        baseURL = document.body.dataset.apiUrl\n\n    const pinia = $createPinia()\n    const piniaOrm = createORM({\n        plugins: [\n            createPiniaOrmAxios({\n                axios,\n                ...(axiosConfig || config.axiosConfig),\n                baseURL,\n            })\n        ]\n    })\n    setActivePinia(pinia)\n    return pinia.use(piniaOrm)\n}\n","import {Repository, Relation} from 'pinia-orm'\nimport type {Model} from 'pinia-orm'\nimport type {Response} from '@pinia-orm/axios'\n\nimport {collectAttr} from '../utils'\nimport type {IObject} from '../utils'\nimport {asRelation, getSourceKey} from '../models'\nimport type {Repos} from '../models'\n\n\n/** Interface of {@link Query} class. */\nexport interface IQuery<M extends Model> {\n    /** Model repository used to store results. */\n    repo: Repository<M>\n    /**\n     * Repositories used to store relations.\n     *\n     * This argument may be ignored if there is no need to fetch\n     * relations.\n     */\n    repos: Repos\n    /** Default options to set to all {@link Query.fetch} calls */\n    opts: IQueryFetch<M>\n}\n\n/** {@link Query.fetch} parameters. */\nexport interface IQueryFetch<M extends Model> extends Partial<object> {\n    /**\n     * Fetch from this url.\n     * Usage of this argument is exclusive from {@link IQueryFetch.id} and {@link IQueryFetch.path}.\n     */\n    url?: string\n    /**\n     * Fetch item of this id.\n     * Usage of this argument is exclusive from {@link IQueryFetch.ids}\n     */\n    id?: number,\n    /** Fetch items with this id. */\n    ids?: number[] | Set<number>\n    /** Extra path to append on url. */\n    path?: string,\n    /** Model repository (instead of `Query.repo`'s one). */\n    repo?: Repository<M>\n    /** Lookup field for ids (default: `id__in`). */\n    lookup?: string\n    /** Extra GET parameters. */\n    params?: IObject\n    /** Fetch items from thoses relations. */\n    relations?: string[]\n    /** If true (default value), save items in Pinia repository */\n    save: boolean\n}\n\n/**\n * {@link Query.all} parameters.\n */\nexport interface IQueryAll<M extends Model> extends IQueryFetch<M> {\n    /**\n     * Key of object returned by server that provide url to next items.\n     */\n    nextKey?: string\n    /**\n     * Provide a limit to the number of request to do consecutivelly.\n     * If `-1`, no limit (**use with caution!**).\n     */\n    limit?: number\n}\n\n\n/**\n * This class allows to fetch objects from api, and their relations.\n *\n * It is a utility class built around ``pinia-orm/axios``, using\n * repositories' ``api().get`` method.\n *\n * It allows:\n *\n * - to fetch a model list or all values (using `next` key);\n * - to fetch relations of objects based on fields names;\n *\n * When fetching relations, please ensure that {@link Query.repos} is provided.\n *\n * @example\n * const query = new Query(repos.users, repos)\n *\n * // this fetch User model objects from API, then the related groups.\n * const result = await query.fetch({url: '/users', relations: ['groups']})\n */\nexport default class Query<M extends Model> {\n    /**\n    * @param {Repos} [repos] all models repositories\n    * @param {Repository<M>} [repo] the main repository\n    */\n    constructor(repo: Repository<M>, repos: Repos|null=null, opts: IQueryFetch<M>) {\n        this.repo = repo\n        this.repos = repos\n        this.opts = opts\n    }\n\n    /**\n     * Fetch items from api.\n     *\n     * @param [options.ids] select by ids\n     * @param {Repository} [options.repo] use this repository instead of \\\n     * ``Query.repo``.\n     * @param [options.url] use this url instead of repository's one.\n     * @param [options.id] fetch element with this id.\n     * @param [options.ids] fetch elements with those ids\n     * @param [options.lookup] query GET parameters used to get ids.\n     * @param [options.params] extra GET parameters\n     * @param [options.opts] options passed down to ``repo.api.get``\n     */\n    async fetch(options: IQueryFetch<M> = {}) : Promise<Response> {\n        options = {...this.opts, ...options}\n        let {url, id, ids, repo, lookup, params, relations, path, ...opts} = options\n\n        lookup ??= \"id__in\"\n        repo ??= this.repo\n\n        if(ids?.length === 1) {\n            id = ids[0]\n            ids = null\n        }\n\n        if(!url)\n            url = repo.use?.meta?.getUrl({path, id})\n\n        if(!id) {\n            if(!(\"dataKey\" in opts))\n                opts.dataKey = repo.use?.config?.axiosApi?.dataKey\n        }\n        else\n            opts.dataKey = null\n\n        if(ids && lookup !== undefined) {\n            if(id)\n                throw Error(\"Both `ids` and `id` are provided while only one of those arguments is accepted.\")\n            params = {...(params || {})}\n            params[lookup] = [...ids]\n        }\n        const response = await repo.api().get(url, {...opts, params})\n        if(opts.save === false)\n            response.entities = this.getEntities(response)\n\n        if(relations)\n            response.relations = await this.relations(response.entities, relations, {...opts, params: {}})\n        return response\n    }\n\n    /** Get entities from response **/\n    getEntities(response) {\n        const data = response.getDataFromResponse()\n        if(Array.isArray(data))\n            return data.map((dat) => this.repo.make(dat))\n        else\n            return [this.repo.make(data)]\n    }\n\n    /**\n     * Fetch all items from api.\n     *\n     * @param [options.nextKey] response object key to get next url\n     * @param [options.limit] max count of consecutive requests\n     * @return Response of the first request, whoses ``entities`` has \\\n     * model instances of all requests.\n     */\n    async all({nextKey='next', limit=-1, flush=false, ...opts} : IQueryAll<M> ={}) : Promise<Response> {\n        const result = await this.fetch({flush, ...opts})\n\n        let url = result.response.data[nextKey]\n        while(url) {\n            const result2 = await this.fetch({...opts, url})\n            if(result2.entities)\n                result.entities = result.entities !== null ? result.entities.concat(result2.entities) : result2.entities\n            url = result2.response.data[nextKey]\n            if(limit>0) limit--\n            if(!limit) break\n        }\n        return result\n    }\n\n    /**\n     * Fetch all from API if repository is empty (see {@link Query.all}).\n     *\n     * For arguments see {@link Query.all}.\n     *\n     * Return null if no request has been made.\n     */\n    async allOnce(options: IQueryAll<M> = {}) : Promise<Reponse|null> {\n        const repo = options.repo ?? this.repo\n        if(!repo.first())\n            return await this.all(options)\n        return null\n    }\n\n    /**\n     * Fetch related objects for the provided list and field names.\n     *\n     * @param objs - the objects to get related ids from.\n     * @param options.fields - list of field names.\n     * @param options.opts - options to pass down to {@link Quey.relation}.\n     * @return the resulting entities.\n     */\n    async relations(objs: M[], fields: string[], opts = {}) : Promise<{[s: string]: Response}>\n    {\n        this._ensureRepos(\"relations\")\n        const entities: {[s: string]: Response} = {}\n        const relations = this.repo.use?.fields()\n        if(relations)\n            for(const field of fields) {\n                const relation = relations[field]\n                if(relation instanceof Relation)\n                    entities[field] = await this.relation(objs, relation, opts)\n                else\n                    throw Error(`Field ${field} is not a relation`)\n            }\n        return entities\n    }\n\n    protected _ensureRepos(funcName: string) {\n        if(!this.repos)\n            throw Error(`Query.repos is not provided although it is mandatory to call ${funcName}.`)\n    }\n\n    /**\n     * Fetch related objects for the provided object list and field name.\n     * It uses {@link Query.all} in order to fetch all items.\n     *\n     * @param objs - the objects to get ids from.\n     * @param relation - objects' field or field name.\n     * @param options - options to pass down to `all()`.\n     */\n    async relation(objs: Array<M>, relation: string | Relation, options: IQueryAll<M> ={}) : Promise<Response> {\n        this._ensureRepos(\"relations\")\n\n        const rel = asRelation(this.repo, relation)\n        if(!rel)\n            throw Error(`No Relation found for field ${relation}.`)\n\n        const key = (<typeof Model>rel.related.constructor).entity\n        const repo2 = this.repos[key]\n        if(!repo2)\n            throw Error(`No repository \"${key}\" found.`)\n\n        const fk = getSourceKey(rel)\n        if(!fk)\n            throw Error(`No source ids attributes for ${relation}.`)\n        const ids = [... new Set(collectAttr(objs, fk))]\n        const query = new Query(repo2, this.repos)\n        return query.all({...options, ids, repo: repo2})\n    }\n\n}\nexport default interface Query<M extends Model> extends IQuery<M> {}\n\n\n/** Return a new {@link Query} based on repo's entity. */\nexport function query<M extends Model>(repo: string|Repository<M>, repos?: Repos, opts?: IQueryFetch<M>=null): Query<M> {\n    if(typeof repo == \"string\") {\n        if(!(repo in repos))\n            throw Error(`Repository \"${repo}\" is not present in provided repositories.`)\n        return new Query(repos[repo] as unknown as Repository<M>, repos, opts)\n    }\n    return new Query(repo, repos, opts)\n}\n","import { cloneDeep, isEqual, pick } from 'lodash'\nimport type { Attribute, Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\n\nimport Config from '../config'\nimport { assignNonEmpty, reset, State } from '../utils'\n\n\nexport interface IEditorProps<T> {\n    /**\n     * @property initial - initial value provided to the editor\n     */\n    initial: T & {[k: string]: any}\n    /**\n     * @property name - editor name\n     */\n    name?: string\n    /**\n     * @property url - url to send value to\n     */\n    url?: string\n    /**\n     * @property saved - callback to run after object has been saved\n     */\n    saved?: (item: T, editor: IEditor<T,IEditorProps<T>>) => void\n}\n\n\n/**\n * Editor class interface.\n */\nexport interface IEditor<T,P extends IEditorProps<T>> extends IEditorProps<T> {\n    [index: string]: any\n\n    props: P\n    /**\n     * @property value - current edited value\n     */\n    value: T & Record<string, any>\n    /** Empty value, if not provided generated */\n    empty: T\n    /**\n    * @property state - current editor state. Set to `State.PROCESSING` when\n    * saving instance.\n    */\n    state: State\n}\n\n\n/**\n * An Editor handles data edition without changing original value.\n * It provides utilities in order to:\n * - detect if changes have been made;\n * - reset edited values to initial state;\n * - save data to server;\n *\n * Default implementation handles raw Object edition, but not saving data to the server.\n * Note: this might lead to errors due to reactivity when returned from composable.\n */\nexport default class Editor<T extends Record, P extends IEditorProps<T>> {\n    state = State.none()\n    value: T & Record<string, any> = {} as T\n\n    constructor(options: IEditor<T,P>)\n    {\n        options && assignNonEmpty(this, options)\n        if(!this.state)\n            this.state = new State()\n\n        this.value ??= {} as T\n        this.empty ??= {} as T\n        this.initial ??= this.props.initial || this.empty\n        this.valid = true\n        this.reset(this.initial)\n    }\n\n    get name(): string { return this.props.name }\n    get url(): string|null { return this.props.url }\n\n    get errors() : any {\n        return this.state.isError && this.state.data || null\n    }\n\n    error(field: string): string|string[] {\n        const data = this.state.isError && this.state.data?.[field]\n        if(data)\n            return this.initial[field] != this.value[field] && data.join('\\n') || ''\n        return ''\n    }\n\n    /** Discard changes, resetting to initial value. */\n    discard() {\n        this.reset(this.initial)\n    }\n\n    /**\n     * Reset editor data to provided value.\n     * When value is provided, reset initial to this value.\n     */\n    reset(value: T|null = null) {\n        reset(this.value, value ?? this.empty)\n        this.state.none()\n    }\n\n    /** Return wether value has been edited or not */\n    isEdited(): boolean {\n        return !isEqual(this.value, this.initial)\n    }\n\n    /**\n     * Save data. It will `serialize()` value then `send()` it.\n     *\n     * Note: default implementation does not provide `send()` method\n     * and thus will raise an error.\n     *\n     * @param [value] if provided use this instead of `this.value`. When a form is provided, it will get\n     * @return state.\n     */\n    async save(value: T|FormData|null = null, params:Record={}): Promise<State> {\n        this.state.processing()\n\n        if(this.valid === false)\n            return this.state.error({\n                \"_\": \"Some of the input values are invalid\"\n            })\n\n        value ??= this.value\n        if(value instanceof FormData)\n            params.headers = {\n                ...Config.axiosConfig.headers,\n                'Content-Type': 'multipart/form-data',\n                ...params.headers,\n            }\n        else\n            value = this.serialize(value)\n\n        const state = await this.send(value, params)\n        if(state.isOk) {\n            this.reset(state.data as T, true)\n            this.initial = cloneDeep(this.value)\n            this.saved?.(this.value)\n        }\n        else\n            this.state = state\n        return this.state\n    }\n\n    /**\n     * This method is called when editor successfully saved the\n     * edited item to the server.\n     *\n     * By default, it will call {@link Editor.props.saved} if provided.\n     */\n    saved(item: T) {\n        this.props.saved?.(item, this)\n    }\n\n    /** Serialize value before sending. */\n    serialize<R>(value: T): any { return value }\n\n    /** Send value (not implemented, MUST BE in subclasses). */\n    async send(_: Record|FormData, params: Record): State {\n        throw \"not implemented\"\n    }\n}\nexport default interface Editor<T,P extends IEditorProps<T>> extends IEditor<T,P> {\n    // Whether edited data are valid. Default to `true`.\n    valid: boolean\n}\n","import {computed, watch} from 'vue'\nimport type {WatchHandle, Reactive} from 'vue'\n\nimport {t} from '../composables'\nimport {assignNonEmpty, State} from '../utils'\nimport type Panels from './panels'\n\n\nexport interface IPanelInfo {\n    /** The view title displayed to user. */\n    title?: string\n    /** The view's icon displayed to user. */\n    icon?: string\n}\n\n\n/** Properties of OxPanel **/\nexport interface IPanelProps extends IPanelInfo {\n    /** Panel's name */\n    name: string\n    /** Index view name **/\n    index: string\n    /** Panel's view */\n    view: string\n    /** Current value */\n    value?: any\n    /** Optional state (used with `ox-state-alert`). */\n    state?: State\n    /** Url to related help page */\n    help?: string\n}\n\n/** Component properties used by OxPanelNav */\nexport type IPanelNavProps = IPanelInfo & {\n    /** Panel's name */\n    name: string\n    /** Panels page **/\n    url?: string\n    /** Required permission */\n    permissions?: string|string[]\n    /** Item type: subheader, divider, (item by default) */\n    type?: string,\n    /** Nested items */\n    items?: Record[]\n    /** Order */\n    order: number\n}\n\nexport interface IPanel<P> extends IPanelInfo {\n    /** Panel's name */\n    readonly name: string\n    /** Panel component properties. */\n    props: P\n    /**\n    * {@link Panels} used to specify current view and value.\n    *\n    * This element may be shared among multiple panels.\n    */\n    panels: Panels\n    /**\n     * Current unsaved changes. This can be updated by component in order\n     * to prevent data loss when changing panels.\n     */\n    editions: Set<string>\n}\n\n\n/**\n * This is the base class used by panels.\n */\nexport default class Panel<P extends IPanelProps = IPanelProps>\n{\n    index: string = 'list.table'\n    view: string = ''\n    value: any = null\n    item: any = null\n    editions: Set<string> = new Set()\n\n    /**\n     * Translation key for message displayed on `confirm()` to leave unsaved\n     * changes.\n     */\n    confirmTKey = \"panel.confirm\"\n\n    /** Panel name (based on props) **/\n    get name(): string { return this.props?.name || '' }\n\n    /** Wether there are still edited items on current view. */\n    get edited(): boolean { return !!this.editions?.size }\n\n    /** Return adequate icon based on props and model **/\n    get icon(): string { return this.props?.icon || null }\n\n    /** Return panel's title based on props. */\n    get title(): string { return this.props?.title }\n\n    constructor(options: IPanel<P>|null = null) {\n        options && assignNonEmpty(this, options)\n        this.view ??= this.index || ''\n    }\n\n    /** Return URL GET parameters for the current view */\n    getUrlParams(): IObject {\n        const params = {panel: this.name}\n        if(this.view != this.index)\n            params.view = this.view\n        if(this.view.startsWith('detail.') && this.value)\n            params.value = this.value\n        return params\n    }\n\n\n    /** Set or remove an edition by name. */\n    setEdition(name: string, edited: boolean) {\n        if(edited) this.editions.add(name)\n        else this.editions.delete(name)\n    }\n\n    /**\n     * Show a view, providing optional value.\n     * @return - true if view changed\n     */\n    show({view=null, value=null, silent=false, force=false}: {view?: string, value?: any, silent?: boolean, force?: boolean}={}) {\n        if((view != this.view || value != this.value) && (force || this.onLeave())) {\n            this.view = view || this.index\n            this.value = value\n            !silent && this.updateLocation()\n            return true\n        }\n        return false\n    }\n\n    /** Update current location using History api */\n    updateLocation() {\n        const params = this.getUrlParams()\n        if(params) {\n            const url = (new URLSearchParams(params)).toString()\n            history.pushState(params, \"\", `?${url}`)\n        }\n    }\n\n    /**\n     * Called when view or panel changes. It returns `true` if view/panel can be changed.\n     *\n     * Ask user for confirmation if there is unsaved changes (aka editions).\n     *\n     * @return true if we can proceed to view/panel change.\n     */\n    onLeave() {\n        if(!this.edited)\n            return true\n\n        const msg = t(this.confirmTKey)\n        return confirm(msg)\n    }\n}\nexport default interface Panel<P extends IPanelProps=IPanelProps> extends IPanel<P> {}\n","import {provide} from 'vue'\nimport {assignNonEmpty} from '../utils'\nimport type Panel from './panel'\n\n\nexport interface IPanels {\n    /** Current panel's name. **/\n    panel: string\n    /** Display/GET parameters for the current panel. */\n    params: Record\n    silent: boolean\n}\n\n\nexport interface IPanelShow extends IPanels {\n    force?: boolean\n    href?: string\n}\n\n/**\n * This class is used to panels a panel, providing extra information such\n * as value and view. It is shared among panels.\n *\n * Use it as this provides utilities to avoid data loss and allow current\n * panel to have control over leaving it.\n */\nexport default class Panels {\n    panel: string = \"\"\n    params: Record<string, any> = {}\n    paramsString: string = ''\n    children: {[k: string]: Panel} = {}\n    current: Panel|null\n\n    constructor(options: IPanels|null = null) {\n        options && assignNonEmpty(this, options)\n    }\n\n    /**\n     * Set {@link Panels.params based on current document location.\n     */\n    readDocumentLocation() {\n        this.paramsString = document.location.search.substring(1)\n        const search = new URLSearchParams(this.paramsString)\n        const {panel, ...params} = Object.fromEntries(search.entries())\n        this.panel = panel\n        this.params = params || {}\n    }\n\n    /** Read provided path and return current panel and view */\n    static readPath(path: string) : IPanels {\n        if(!path)\n            return {panel: \"\", view: \"\"}\n\n        const idx = path.indexOf('.')\n        if(idx < 0)\n            return {panel: path, view: ''}\n        return {panel: path.substring(0, idx), view: path.substring(idx+1)}\n    }\n\n    /** Register a panel */\n    register(name: string, child: Panel) {\n        if(!this.children[name]) {\n            this.children[name] = child\n\n            // Set current to child if required\n            if(this.panel == child.name) {\n                this.current = child\n                child.show(this.params)\n            }\n        }\n    }\n\n    /** Unregister a panel */\n    unregister(name: string) {\n        delete this.children[name]\n    }\n\n    /**\n     * Show a panel, loading page provided by href if required.\n     * When there is already a panel displayed, it will call {@link Panel.onLeave} in order to eventually prevent\n     * unwanted page change.\n     */\n    show({force=false, href=null, ...options}: IPanelShow) {\n        const proceed = force || !this.current || this.current.onLeave()\n        if(!proceed)\n            return\n\n        if(href && window.location.pathname != href) {\n            if(!options.panel)\n                throw Error(\"The attribute `href` requires`panel`.\")\n\n            href = `${href}?panel=${options.panel}`\n            if(options.view)\n                href = `${href}&view=${options.view || ''}`\n            window.location.href = href\n            return\n        }\n\n        this.reset(options)\n    }\n\n    reset({panel, silent=false, ...params}: IPanels) {\n        const panelChanged = (panel && panel != this.panel)\n        if(panelChanged && this.current) {\n            if(!this.current.onLeave())\n                return\n        }\n\n        this.panel = panel || this.panel\n        this.params = params\n\n        // Set current and if yet registered, show it.\n        this.current = this.children[this.panel]\n        this.current?.show({...this.params, silent})\n    }\n}\nexport default interface Panels extends IPanels {\n    /** Current panel (set by panels) **/\n    current: Panel|null\n}\n","import type {Repository, Query as $Query} from 'pinia-orm'\nimport type {Response} from '@pinia-orm/axios'\n\nimport {State, assignNonEmpty} from '../utils'\nimport type {Model} from '../models'\n\nimport Query from './query'\nimport type {IQueryFetch} from './query'\n\n\nexport interface IModelController<M extends Model> {\n    /** Response's key used to return data */\n    dataKey: string\n    /** {@link Query} used to fetch list items. */\n    query: Query<M>\n    /** Related fields to get from pinia orm's database and eventually fetch when items are retrieved from API.  */\n    relations?: string[]\n    /** Use this URL instead of model's defined one. */\n    url?: string\n    /** Fetch related fields from API when queried */\n    fetchRelations: boolean\n    /** If true (default value), save items in Pinia repository */\n    save: boolean\n}\n\nexport interface IModelFetch<M extends Model> extends IQueryFetch<M> {\n    /** Response's key used to return data */\n    dataKey?: string\n}\n\n\n/**\n * Base controller class that handles model fetching from the server in conjunction\n * with ORM framework.\n *\n * This provides:\n * - load items from the server and manage state accordingly (using {@link Query});\n * - items are retrieved from ORM store with specified relations;\n *\n * It does not:\n * - fetch items' related objects.\n *\n * This is used for {@link ModelDetail} and {@link ModelList}.\n */\nexport default class ModelController<M extends Model, O=IModelController<M>> {\n    state = State.none()\n    save = true\n\n    /** The repository of contained items. */\n    get repo(): Repository<M> { return this.query.repo }\n\n    /** Current model. */\n    get model(): typeof Model { return (this.repo.use as typeof Model) }\n\n    constructor(options: IModelController<M>|null = null) {\n        options && assignNonEmpty(this, options)\n    }\n\n    /** Return orm's query to object. This will includes declared {@link List.relations}.\n     *\n     *   @param ids - optional id lookup\n     *   @param first - if true, return the first item\n     *   @return orm's query\n     */\n    queryset(ids: number|number[]|null=null, first=false) : $Query<M> {\n        let query = this.repo.query()\n        if(this.relations)\n            for(const relation of this.relations)\n                query = query.with(relation)\n\n        if(ids !== null)\n            query = query.whereId(ids)\n\n        return first ? query.first() : query\n    }\n\n    /**\n     * Fetch model instance from the server and select them.\n     *\n     * Calling this method updates state to:\n     * - `PROCESSING`: request is being made;\n     * - `NONE`: request has been done without error;\n     * - `ERROR`: if an error happened;\n     *\n     * Flowchart:\n     * - {@link ModelController.fetch}\n     * - {@link ModelController.handleResponse}\n     */\n    async load(options: IModelFetch<M> = {}): Promise<Response|null> {\n        this.state.processing()\n        let response = null\n        try {\n            response = await this.fetch(options)\n            response = await this.handleResponse(options, response)\n        }\n        catch(error) {\n            console.log(error)\n            this.state.error(error)\n        }\n        if(!this.state.isError)\n            this.state.none()\n        return response\n    }\n\n    /** Fetch model instance from the server.\n     *\n     * Flowchart:\n     * - {@link ModelController.getQueryParams}\n     * - {@link Query.fetch}\n     */\n    async fetch(options: IModelFetch<M> = {}) : Promise<Response> {\n        const opts = this.getQueryOptions(options)\n        return await this.query.fetch(opts)\n    }\n\n    /** Handle response from the {@link ModelContainer.fetch}'s request. */\n    async handleResponse(options: IModelFetch<M>, response: Response): Promise<Response> {\n        // TODO: handle status code\n        return response\n    }\n\n    /** Get {@link Query.fetch} options. */\n    protected getQueryOptions(options: IModelFetch<M>): IQueryFetch<M> {\n        if(!options.relations && this.relations && this.fetchRelations)\n            options.relations = this.relations\n        // if(!(\"dataKey\" in options))\n        //    options.dataKey = this.dataKey\n        if(!options.url)\n            options.url = this.url\n        if(!(\"save\" in options))\n            options.save = this.save\n        return options\n    }\n}\nexport default interface ModelController<M extends Model, O> extends IModelController<M> {\n    /** Current request's state. */\n    state: State\n}\n","import type {Response} from '@pinia-orm/axios'\nimport {union, map} from 'lodash'\n\nimport type {Model, ModelId} from '../models'\n\nimport type {IQueryFetch} from './query'\nimport type {IModelController, IModelFetch} from './modelController'\nimport ModelController from './modelController'\n\n\nexport type FilterValue = number | string\nexport type Filters = Record<string,FilterValue>\n\n\n/** Base interface of a ModelList */\nexport interface IModelList<M extends Model> extends IModelController<M> {\n    /** Provide extra GET parameters. */\n    filters?: Filters\n    /** Response's key used to return URL to previous paginated items. */\n    prevKey: string\n    /** Response's key used to return URL to next paginated items.  */\n    nextKey: string\n    /** Response's key used to return total items count. */\n    countKey: string\n}\n\n/**\n * Arguments of {@link ModelList.fetch}. It is passed down to {@link Query.fetch}.\n */\nexport interface IModelListFetch<M extends Model> extends IModelFetch<M> {\n    /** Query's GET parameters used to filter the list. */\n    filters?: Filters\n    /**\n     * Append items to list. If `false` (default), fetch results will replace\n     * current list items.\n     */\n    append?: boolean | number\n}\n\n\n/**\n * Handle a list of model instances fetched using Rest Api. It is\n * used in model's panels.\n *\n * It uses {@link Query} object in order to fetch items and relations.\n *\n * Items references are tracked using repo's {@link RefCounter}.\n *\n *\n * @example\n * const value = ref(null)\n * const list = new ModelList.reactive({\n *     query: new Query(repos.users, repos),\n *     relations: ['groups'],\n *     value,\n * })\n *\n * await list.load({url: '/users'})\n */\nexport default class ModelList<M extends Model> extends ModelController<M, IModelList<M>> {\n    // /** Reference counter key **/\n    // $id: number\n\n    ids: ModelId[] = []\n    filters: Filters = {}\n    nextUrl: string|null = null\n    prevUrl: string|null = null\n    count: number|null = null\n    page_size: number|null = null\n\n    dataKey = \"results\"\n    nextKey = \"next\"\n    prevKey = \"previous\"\n    countKey = \"count\"\n\n    get length() { return this.ids.length }\n\n    constructor(...args) {\n        super(...args)\n        // this.$id = this.refs.acquireKey()\n    }\n\n    /** Return index for id */\n    indexOf(id: number) { return this.ids.indexOf(id) }\n\n    /** Destroy list, ensuring cleaning behind the scenes */\n    drop() {\n        // this.refs.flush(this.$id)\n        this.ids = []\n    }\n\n    /** Reset list */\n    reset(ids: ModelId[] = []) {\n        // this.refs.releaseAcquire(this.$id, this.ids, ids)\n        this.ids = ids\n        this.nextUrl = null\n        this.prevUrl = null\n        this.count = this.ids.length\n    }\n\n    /** Get item index by id */\n    //findIndex(id: number): number { return this.items.findIndex((v) => v.id == id) }\n\n    /** Add item if not present in list.\n    *\n    * @param id - item id to insert\n    * @param index - if provided insert at this position\n    * @return item index if already in the list, else insertion one\n    */\n    add(id: ModelId, index?: number = null): number {\n        const idx = this.ids.indexOf(id)\n        if(idx != -1)\n            return idx\n\n        // this.refs.acquire(this.$id, id)\n        if(index !== null) {\n            this.ids.splice(index, 0 , id)\n            return index\n        }\n        this.ids.push(id)\n        return this.ids.length-1\n    }\n\n    /** Remove item by id from list if present. */\n    remove(id: ModelId) {\n        const idx = this.ids.indexOf(id)\n        if(idx != -1) {\n            this.ids.splice(index, 1)\n            // this.refs.release(this.$id, id)\n        }\n    }\n\n    /**\n     * Get item id next to provided one at the specified direction.\n     *\n     * @param item - reference item\n     * @param step - increment or decrement item index by this value.\n     * @return the target item id or null if not found.\n     */\n    getSiblingIndex(item: M|null, step: number): number {\n        if(item === null)\n            return -1\n\n        const index = this.ids.indexOf(item.id)\n        const sibling = index >= 0 ? index+step : -1\n        return sibling >= 0 && sibling < this.ids.length ? sibling : -1\n    }\n\n    /**\n     * Fetch next items from API, override `url` using {@link ModelList.nextUrl}.\n     */\n    async loadNext(options: IModelListFetch<M>): Promise<Response> {\n        return await this.load({...options, url: this.nextUrl})\n    }\n\n    /**\n     * Fetch previous items from API, override `url` using {@link ModelList.prevUrl}.\n     */\n    async loadPrev(options: IModelListFetch<M>): Promise<Response> {\n        return await this.load({...options, url: this.prevUrl})\n    }\n\n    protected getQueryOptions(options: IModelFetch<M>): IQueryFetch<M> {\n        if(!(\"filters\" in options) && this.filters)\n            options.params = {...this.filters, ...(options.params ?? [])}\n        if(this.page_size)\n            options.params = {...options.params, page_size: this.page_size}\n        return super.getQueryOptions(options)\n    }\n\n    /**\n     * Handle response from API: update owned items list and related information (next/prev url, total count).\n     *\n     * Theses informations will not be set if `options.save == false`. You\n     * can however call this method later if you need to defer persistence.\n     */\n    async handleResponse({append=false, ...options}: IModelListFetch<M>, response: Response): Promise<Response> {\n        response = await super.handleResponse(options, response)\n        if(!this.state.isError && options.save !== false) {\n            const ids = map(response.entities, 'id')\n            this.setIds(ids, append)\n            this.nextUrl = response.response.data[this.nextKey] || null\n            this.prevUrl = response.response.data[this.prevKey] || null\n            this.count = response.response.data[this.countKey] || this.ids.length\n        }\n        return response\n    }\n\n    /**\n     * Update ids with the provided ones.\n     */\n    setIds(ids?: ModelId[], append: boolean|number =false) {\n        if(typeof append == \"number\")\n            this.ids.splice(append, 0, ...ids)\n        else if(append && this.ids.length)\n            this.ids = union(this.ids, ids)\n        else\n            this.ids = ids\n    }\n}\n\nexport default interface ModelList<M extends Model> extends IModelList<M> {\n    ids: number[]\n    nextUrl: string|null\n    prevUrl: string|null\n    count: number|null\n}\n","import { cloneDeep, isEqual, pick } from 'lodash'\nimport type { Attribute, Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\nimport {toRaw} from 'vue'\n\nimport { State } from '../utils'\nimport Editor from './editor'\nimport type { IObject } from '../utils'\nimport type { Model } from '../models'\nimport type {IEditor, IEditorProps, IEditorSend} from './editor'\n\n\n/**\n * ModelEditor properties (as passed down to {@link OxModelEdit} component).\n */\nexport interface IModelEditorProps<T extends Model> extends IEditorProps<T> {\n    /** Related repository */\n    repo: Repository<T>\n}\n\nexport interface IModelEditorSend extends Record {\n    id: number\n}\n\n\n/**\n * Editor sub-class used to edit model instances.\n *\n * Regarding properties ({@link IModelEditorProps}):\n * - `name` defaults to `{model.entity}-edit`.\n * - `repo` is mandatory\n *\n */\nexport default class ModelEditor<T extends Model, P extends IModelEditorProps<T>> extends Editor<T,P> {\n    constructor(options : IEditor<T,P>) {\n        options.fields = Object.keys((options.props.repo.use as typeof Model).fields())\n        options.empty ??= new options.props.repo.use()\n        super(options)\n    }\n\n    get repo() { return this.props.repo }\n    get name() { return this.props.name || `${this.repo.use.entity}-edit` }\n    isEdited(): boolean {\n        return !isEqual(pick(this.value, this.fields), pick(this.initial, this.fields))\n    }\n\n    get url(): string {\n        const url = super.url || (this.repo.use as typeof Model)?.meta?.url\n        if(!url)\n            throw Error(\"No url specified as parameter or in Model.meta.\")\n        return url\n    }\n\n    reset(value: T|null): void {\n        if(!value || !Object.keys(value).length)\n            value = this.empty\n\n        const fields = this.fields.filter(k => k in value)\n        this.value = cloneDeep(pick(value, fields)) || {}\n        this.state.none()\n    }\n\n    serialize(value: T): {[k: string]: any} {\n        const cls = this.repo.use\n        const obj = new cls({...this.value})\n        return obj.$toJson(null, {relations: false})\n    }\n\n    async send(value: IModelEditorSend|FormData, params: Record = {}) : State {\n        let [func, url] = [\"post\", this.url]\n        if(this.value.id) {\n            url = `${url}${this.value.id}/`\n            func = \"put\"\n        }\n        return await this.repo.api()[func](url, value, params).then(\n            (result: Response) => State.ok(result.entities[0]),\n            (error: Response) => State.error(error.response.data)\n        )\n    }\n}\nexport default interface ModelEditor<T extends Model, P extends IModelEditorProps<T>> extends Editor<T,P> {\n    fields: string[]\n}\n","import {computed, reactive, toRefs} from 'vue'\nimport type {Reactive} from 'vue'\nimport type {Repository} from 'pinia-orm'\n\nimport {Model} from '../models'\nimport {mapToObject} from '../utils'\nimport {t, tKeys} from '../composables/i18n'\n\nimport type ModelList from './modelList'\nimport type Query from './query'\nimport type {Repos} from '../models'\n\nimport type {IPanel, IPanelProps} from './panel'\nimport type Panels from './panels'\n\nimport Panel from './panel'\nimport {query} from './query'\n\n\n/** Model panel component properties. */\nexport interface IModelPanelProps<M extends Model> extends IPanelProps {\n    /** Current repository */\n    repo: Repository<M>\n    // search: string\n    /** Current view */\n    view: string\n    /** List table headers */\n    headers?: string[]\n    /** Related fields to get from pinia orm's database and eventually fetch when items are retrieved from API.  */\n    relations?: string[]\n    /** Show filters */\n    showFilters?: boolean\n    /** Fetch related fields from API when queried */\n    fetchRelations: boolean\n    /** Search filter lookup */\n    search: string\n\n    /**\n     * Display this warning on the top of the panel.\n     */\n    warning?: string\n}\n\n/** Model panel interface. */\nexport interface IModelPanel<\n    M extends Model,\n    P extends IModelPanelProps<M> = IModelPanelProps<M>\n> extends IPanel<P>\n{\n    /** List controller used to load and handle multiple items from the server. */\n    list: ModelList<M>\n    /** Detail controller used to load and handle a single item from the server. */\n    //detail: ModelListDetail<M>\n}\n\n\n/** This class handles model panel (used by {@link OxModelPanel}. */\nexport default class ModelPanel<\n    M extends Model,\n    P extends IModelPanelProps<M> = IModelPanelProps<M>,\n> extends Panel<P>\n{\n    showFilters: boolean = false\n\n    constructor(options: IModelPanel<M,P>) {\n        super(options)\n        this.showFilters = this.props?.showFilters || false\n    }\n\n    /** Current model's repository. */\n    get repo(): Repository<M> { return this.props.repo }\n\n    /** Current model. */\n    get model(): typeof Model { return (this.repo.use as typeof Model) }\n\n    /** Query (shortcut to `this.list.query`). **/\n    get query(): Query<M> { return this.list.query }\n\n    /** Return icon based on props and model **/\n    get icon(): string { return super.icon || this.model.meta?.icon }\n\n    /** Return panel's title based on view and current item. */\n    get title(): string {\n        const {props, list} = this\n        const model = this.repo.use\n        if(model) {\n            // many items\n            if(this.view?.startsWith('list.'))\n                return t(tKeys.model(model), 3)\n\n            if(this.view?.startsWith('detail.')) {\n                if(this.value?.$title)\n                    return this.value.$title\n\n                const name = t(tKeys.model(model))\n                return this.value?.id\n                    ? t(`models._.title`, {model: name, id: this.value.id})\n                    : t(`models._.title.new`, {model: name})\n            }\n        }\n        return super.title\n    }\n\n    getUrlParams() {\n        const {value=null, ...params} = super.getUrlParams()\n        if(value?.id)\n            params.id = value.id\n        return params\n    }\n\n    /**\n     * Edit a new item.\n     *\n     * @param view - edit view.\n     */\n    create(view: string='detail.edit') {\n        this.show({view, value: null})\n    }\n\n    /** Called when an item has been created. By default, show edit view. */\n    created(value: M, view: string=\"detail.edit\") {\n        // this.list.load()\n        this.show({view, value})\n    }\n\n    show({id=null, ...params}: {view?: string, value?: M, id: number}) {\n        if(id) {\n            query(this.repo).fetch({id, relations: this.relations}).then(r => {\n                super.show({...params, value: r.entities[0]})\n                return r\n            })\n        }\n        else\n            return super.show(params)\n    }\n}\n\n\nexport default interface ModelPanel<M extends Model,P extends IModelPanelProps<M>=IModelPanelProps<M>,O=IModelPanel<M>> extends IModelPanel<M,P> {\n    showFilters: boolean\n}\n","import {\n    computed, inject, isRef, toRefs, unref, watch,\n    onMounted, onUnmounted, provide, reactive, toRaw\n} from 'vue'\nimport { isEqual } from 'lodash'\n\nimport type {ComputedRef, Reactive, Ref, WatchHandle} from 'vue'\nimport type {Repository} from 'pinia-orm'\n\nimport {State} from '../utils'\nimport type {Repos, Model} from '../models'\n\nimport {\n    Panels, Panel, ModelPanel,\n    Query, ModelList,\n    Editor, ModelEditor\n} from '../controllers'\n\nimport type {\n    IPanels, IPanel, IPanelProps,\n    IModelPanel, IModelPanelProps,\n    IModelList,\n    IEditor, IEditorProps, IModelEditorProps,\n    IQueryFetch\n} from '../controllers'\n\n\n//---- Panels\n/**\n * Create a new reactive {@link Panels} and provide it as `panels`.\n *\n * It also creates watchers in order to:\n * - update document title based on current panel's view\n * - keep track of current view's url: when a panels' getUrlParams changes, it will `History.pushState` storing those params;\n *\n * @return the reactive Panels.\n */\nexport function usePanels(options: IPanels) {\n    const panels = reactive(new Panels(options))\n    provide('panels', panels)\n\n    onMounted(() => {\n        panels.readDocumentLocation()\n        panels.panel && panels.show({\n            panel: panels.panel, silent: true,\n            ...panels.params\n        })\n    })\n\n    window.addEventListener(\"popstate\", (event) => {\n        if(event.state)\n            panels.show({...event.state, silent: true})\n    })\n\n    // we update title after history state\n    const initialTitle = document.title\n    watch(() => panels.current?.title, (val) => {\n        if(val)\n            document.title = `${val} | ${initialTitle}`\n        else\n            document.title = initialTitle\n    })\n\n    return panels\n}\n\n/** Create a new {@link Panel}.\n*\n* - (un)register the panel to object's `panels` on (un)mount.\n* - provide `panel`;\n* - watch on {@link Panel.view} calling {@link Panel.onViewChange}\n*/\nexport function usePanel<P extends IPanelProps>(options: IPanel<P>, cls: typeof Panel<P>) {\n    const panel = reactive(new cls(options))\n\n    provide('panel', panel)\n    onMounted(() => panel.panels.register(panel.name, panel))\n    onUnmounted(() => panel.panels.unregister(panel.name))\n\n    // watch(() => panel.view, (val, old) => val != old && panel.onViewChange(val))\n    return {panel}\n}\n\n/** Create a new {@link ModelPanel}. */\n// TODO: allow to pass list down\nexport function useModelPanel<M extends Model, P extends IModelPanelProps<M>>(\n    {query, repos, ...options}: IModelPanel<M,P>\n)\n{\n    repos ??= inject('repos')\n    query ??= new Query(options.props.repo, repos)\n    options.panels ??= inject('panels')\n\n    const {list, items} = useModelList({\n        query,\n        relations: options.props.relations,\n        fetchRelations: options.props.fetchRelations\n    })\n    const {panel} = usePanel({list, ...options}, ModelPanel)\n\n    const next = computed(() => {\n        const index = list.getSiblingIndex(unref(panel.value), 1)\n        return items.value[index] ?? null\n    })\n    const prev = computed(() => {\n        const index = list.getSiblingIndex(unref(panel.value), -1)\n        return items.value[index] ?? null\n    })\n\n    return {panels: panel.panels, panel, list, items, next, prev}\n}\n\n\n//---- Controllers\n/** Create a new {@link List} and provide it as `list`. */\nexport function useModelList<M extends Model>(options : IModelList<M>, cls: typeof ModelList = ModelList)\n{\n    const list = reactive(new cls(options))\n    const listId = list.repo.refs.acquireKey()\n\n    // FIXME:\n    // - we have items in order for them to be updated from repo\n    // - list stores items as items\n    // - we query items from db using list.ids (= maps of list.items)\n    // - this adds levels of indirections and extra layers\n    const items = computed(() => list.queryset(list.ids).orderBy(id => list.ids.indexOf(id)).get())\n\n    // release - acquire refs\n    watch(() => list.ids, (val, old) => {\n        if(!isEqual(toRaw(val), toRaw(old)))\n            list.repo.refs.releaseAcquire(listId, old, val)\n    })\n    onUnmounted(() => list.repo.refs.flush(listId))\n\n    provide('list', list)\n    provide('items', items)\n    return {list, items, listId}\n}\n\n/**\n * This composable return a new {@link Query}, {@link State} and a fetch\n * function that combines them.\n */\nexport function useQuery<M extends Model>(repo: Repository<M>, repos: Repos|null=null, opts: IQueryFetch<M>) {\n    const query = new Query(repo, repos, opts)\n    const state = State.none()\n\n    async function fetch(opts: IQueryFetch<M>) {\n        state.processing()\n        let resp = null\n        try {\n            resp = await query.fetch(opts)\n            state.none()\n        }\n        catch(error) {\n            state.error(error)\n        }\n        return resp\n    }\n    return {state, query, fetch}\n}\n\n\n/**\n * This composable create an new Editor and returns it as reactive object.\n *\n * - provide `editor`\n * - set default `saved` method if emits is provided\n * - watch on edition to update panel's editions\n */\nexport function useEditor<\n    T extends Record<string,any>,\n    P extends IEditorProps<T>,\n>(\n    options: IEditor<T,P>,\n    cls: typeof Editor<T,P>=Editor<T,P>\n)\n{\n    const initial = options.initial || options.props.initial\n    const editor = reactive(new cls(options))\n\n    provide('editor', editor)\n\n    const edited = computed(() => editor.isEdited())\n    watch(() => editor.props.initial, (val) => {\n        editor.initial = val || editor.empty\n        editor.reset(val || editor.empty)\n    })\n\n    const panel = inject('panel') as Panel\n    if(panel)\n        watch(() => editor.edited, (val: boolean) => panel.setEdition(editor.name, val))\n\n    return {editor, edited}\n}\n\n/** Return a new reactive {@link ModelEditor} */\nexport function useModelEditor<\n    T extends Model,\n    P extends IModelEditorProps<T>\n>(\n    options: IEditor<T,P>,\n    cls: typeof ModelEditor<T,P> = ModelEditor<T,P>\n)\n{\n    return useEditor(options, cls)\n}\n","import {t} from '../composables'\n\n/**\n * This object provide commonly used validation rules to use with form fields.\n */\nexport default {\n    /** Field is required */\n    required(value) {\n        return value ? true : t('fields._.required')\n    },\n\n    /**\n     * Validate field errors returned from the server.\n     */\n    errors(errorList) {\n        return () => (errorList?.length ? errorList.join('<br>') || false : true)\n    },\n\n    /**\n     * Return a rule whose validating value is optional.\n     *\n     * By default rules require value to be provided. This returns a new\n     * rule whose value can either be empty or must match provided rule.\n     */\n    optional(rule) {\n        return (value) => {\n            return !value || rule(value)\n        }\n    },\n\n    /** Rule validating email */\n    email(value) {\n        const allowed = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n        return allowed.test(value) || t(\"fields.email.rule\")\n    },\n\n    /** Rule validating username */\n    username(value) {\n        const allowed = /^[A-Za-z0-9@.+\\-_]+$/\n        return allowed.test(value) || \"Username must not be empty. It only can contain letters, numbers and @/+/./- special characters\"\n    },\n}\n","import { defineAsyncComponent as $defineAsyncComponent } from 'vue'\n\nexport * from './app'\nexport * from './actions'\nexport * from './init'\nexport * from './i18n'\nexport * from './models'\nexport * from './controllers'\nexport {default as rules} from './rules'\n\n\n/**\n * Similar to `defineAsyncComponent` allowing to load a component\n * by name from a provided module url.\n */\nexport function defineAsyncComponent(url: string, name: string) {\n    return $defineAsyncComponent(() => {\n        return import(url).then(mod => {\n            if(!name)\n                return mod\n            console.log(mod, mod.components, Object.keys(mod))\n            const obj = Object.values(mod).filter((y: {[k: string]: any}) => y.__name == name)[0]\n            return obj\n        })\n    })\n}\n\n\n/**\n * This exception is used in order to display the message to user\n * when it is raised.\n */\nclass UserError extends Error {}\n"],"names":["toString","prefix","prop","key","val","t","enumProxy","target","receiver","k","Enum","fields","Response","repository","config","response","__publicField","data","method","result","action","Request","actions","_a","_c","_b","name","url","requestConfig","axiosResponse","AxiosRepository","Repository","database","pinia","useAxiosApi","axios","createPiniaOrmAxios","axiosConfig","definePiniaOrmPlugin","context","RefCounter","repo","ids","id","tags","drop","pull","releaseIds","acquireIds","difference","idx","asRelation","relation","field","Relation","getSourceKey","HasMany","HasManyBy","HasOne","BelongsTo","useRepo","model","$useRepo","getActivePinia","useModels","models","useInject","useDefaults","repos","inject","injected","User","provide","AppContext","opts","obj","reactive","computed","State","value","dataEl","el","useAppContext","load","useAction","props","user","emits","processing","ref","allowed","args","weekInfo","locale","code","getWeekArray","date","firstDayOfWeek","weeks","currentWeek","firstDayOfMonth","startOfMonth","lastDayOfMonth","endOfMonth","first","firstDayWeekIndex","lastDayWeekIndex","i","adjacentDay","day","startOfWeek","d","endOfWeek","lastDay","parseLocalDate","parts","_YYYMMDD","parsed","sundayJanuarySecond2000","getWeekdays","daysFromSunday","createRange","weekday","format","formatString","formats","newDate","customFormat","options","month","toISO","adapter","year","padStart","parseISO","addMinutes","amount","addHours","addDays","addWeeks","addMonths","getYear","getMonth","getWeek","firstWeekMinSize","weekInfoFromLocale","weekStart","minWeekSize","firstWeekSize","yearStart","getDiff","currentWeekEnd","size","d1w1","endOfDay","startOfDay","getDate","getNextMonth","getPreviousMonth","getHours","getMinutes","startOfYear","endOfYear","isWithinRange","range","isAfter","isBefore","isValid","comparing","isAfterDay","isEqual","isSameDay","isSameMonth","isSameYear","unit","c","setHours","count","setMinutes","setMonth","setDate","setYear","VuetifyDateAdapter","firstDay","DateOptionsSymbol","DateAdapterSymbol","createDate","_options","mergeDeep","createInstance","instance","watch","createVuetify","vuetify","blueprint","rest","aliases","components","directives","scope","effectScope","defaults","createDefaults","display","createDisplay","theme","createTheme","icons","createIcons","createLocale","goTo","createGoTo","install","app","defineComponent","appScope","DefaultsSymbol","DisplaySymbol","ThemeSymbol","IconSymbol","LocaleSymbol","GoToSymbol","IN_BROWSER","mount","vm","nextTick","unmount","version","provides","md3","mdi","green","colors","init","App","onLoad","initApp","createApp","resolve","plugins","$createApp","i18n","useI18n","plugin","vendorComponents","$createVuetify","createPinia","baseURL","$createPinia","piniaOrm","createORM","setActivePinia","Query","lookup","params","relations","path","_e","_d","dat","nextKey","limit","flush","result2","objs","entities","funcName","rel","repo2","fk","collectAttr","query","Editor","assignNonEmpty","reset","Config","state","cloneDeep","item","_","Panel","edited","view","silent","force","msg","Panels","search","panel","child","href","ModelController","error","ModelList","index","step","sibling","append","map","union","ModelEditor","pick","cls","func","ModelPanel","list","tKeys","r","usePanels","panels","onMounted","event","initialTitle","usePanel","onUnmounted","useModelPanel","items","useModelList","next","unref","prev","listId","old","toRaw","useQuery","fetch","resp","useEditor","editor","useModelEditor","rules","errorList","rule","defineAsyncComponent","$defineAsyncComponent","mod","y"],"mappings":"6pBAEA,SAASA,EAASC,EAAgBC,EAAc,CAC5C,IAAIC,EAAM,SAASF,CAAM,IAAIC,CAAI,GAC7BE,EAAMC,IAAEF,CAAG,EACf,OAAGC,GAAOD,EACCC,EAEJC,EAAAA,EAAE,SAASJ,CAAM,MAAMC,CAAI,EAAE,CACxC,CAKO,MAAMI,EAAY,CACrB,IAAIC,EAA6BL,EAAcM,EAAU,CACrD,OAAGN,GAAQ,QACA,OAAO,KAAKK,CAAM,EAAE,OAAOE,GAAKA,EAAE,CAAC,GAAK,GAAG,EAAE,IAAUA,IAAA,CAC1D,MAAOF,EAAOE,CAAC,EACf,MAAOT,EAASO,EAAO,SAAUE,CAAC,CAAA,EACpC,EACHP,GAAQ,WACCO,GAAMT,EAASQ,EAAS,SAAUC,CAAC,EACxC,QAAQ,IAAI,GAAG,SAAS,CAAA,CAGvC,EAagB,SAAAC,GAAKT,EAAgBU,EAA6B,CAC9D,OAAAA,EAAO,SAAWV,EACX,IAAI,MAAMU,EAAQL,CAAS,CACtC,CCvCA,MAAMM,EAAS,CAwBb,YAAYC,EAAYC,EAAQC,EAAU,CApB1CC,EAAA,mBAIAA,EAAA,eAIAA,EAAA,iBAIAA,EAAA,gBAAW,MAIXA,EAAA,eAAU,IAKR,KAAK,WAAaH,EAClB,KAAK,OAASC,EACd,KAAK,SAAWC,CACpB,CAIE,MAAM,MAAO,CACX,MAAME,EAAO,KAAK,oBAAqB,EACvC,GAAI,CAAC,KAAK,aAAaA,CAAI,EAAG,CAC5B,QAAQ,KACN,gOACD,EACD,MACN,CACI,IAAIC,EAAS,KAAK,OAAO,WAAa,OACjC,KAAK,sBAAsBA,CAAM,IACpC,QAAQ,KACN,8IACD,EACDA,EAAS,QAEX,MAAMC,EAAS,MAAM,KAAK,WAAWD,CAAM,EAAED,CAAI,EACjD,KAAK,SAAW,MAAM,QAAQE,CAAM,EAAIA,EAAS,CAACA,CAAM,EACxD,KAAK,QAAU,EACnB,CAIE,MAAM,QAAS,CACb,GAAI,KAAK,OAAO,SAAW,OACzB,MAAM,IAAI,MACR,oFACD,EAEH,MAAM,KAAK,WAAW,MAAK,EAAG,QAAQ,KAAK,OAAO,MAAM,CAC5D,CAOE,qBAAsB,CACpB,OAAI,KAAK,OAAO,gBACP,KAAK,OAAO,gBAAgB,KAAK,QAAQ,EAE9C,KAAK,OAAO,QACP,KAAK,SAAS,KAAK,KAAK,OAAO,OAAO,EAExC,KAAK,SAAS,IACzB,CAqBE,aAAaF,EAAM,CACjB,OAAOA,IAAS,MAAQ,OAAOA,GAAS,QAC5C,CAKE,sBAAsBG,EAAQ,CAC5B,MAAO,CAAC,OAAQ,QAAQ,EAAE,SAASA,CAAM,CAC7C,CACA,CAEA,MAAMC,EAAQ,CAcZ,YAAYR,EAAY,CAVxBG,EAAA,mBAIAA,EAAA,cAAS,CACP,KAAM,EACP,GAKC,KAAK,WAAaH,EAClB,KAAK,gBAAiB,CAC1B,CAIE,IAAI,OAAQ,CAEV,GADA,KAAK,WAAW,MAAQ,KAAK,WAAW,OAAS,KAAK,WAAW,OAAO,SAAS,MAC7E,CAAC,KAAK,WAAW,MACnB,MAAM,IAAI,MACR,+GACD,EAEH,OAAO,KAAK,WAAW,KAC3B,CAIE,iBAAkB,WAChB,MAAMS,EAAU,CAAE,IAAGC,EAAA,KAAK,WAAW,OAAO,WAAvB,YAAAA,EAAiC,QAAS,IAAGC,GAAAC,EAAA,KAAK,WAAW,SAAQ,EAAG,QAAS,IAApC,YAAAA,EAAsC,WAAtC,YAAAD,EAAgD,OAAS,EAC3H,GAAKF,EAGL,UAAWI,KAAQJ,EAAS,CAC1B,MAAMF,EAASE,EAAQI,CAAI,EAC3B,OAAON,GAAW,WAAa,KAAK,uBAAuBM,EAAMN,CAAM,EAAI,KAAK,qBAAqBM,EAAMN,CAAM,CACvH,CACA,CAIE,qBAAqBM,EAAMN,EAAQ,CACjC,KAAKM,CAAI,EAAKZ,GACL,KAAK,QAAQ,CAAE,GAAGM,EAAQ,GAAGN,CAAM,CAAE,CAElD,CAIE,uBAAuBY,EAAMN,EAAQ,CACnC,KAAKM,CAAI,EAAIN,EAAO,KAAK,IAAI,CACjC,CAIE,IAAIO,EAAKb,EAAS,GAAI,CACpB,OAAO,KAAK,QAAQ,CAAE,OAAQ,MAAO,IAAAa,EAAK,GAAGb,EAAQ,CACzD,CAIE,KAAKa,EAAKV,EAAO,CAAA,EAAIH,EAAS,CAAA,EAAI,CAChC,OAAO,KAAK,QAAQ,CAAE,OAAQ,OAAQ,IAAAa,EAAK,KAAAV,EAAM,GAAGH,EAAQ,CAChE,CAIE,IAAIa,EAAKV,EAAO,CAAA,EAAIH,EAAS,CAAA,EAAI,CAC/B,OAAO,KAAK,QAAQ,CAAE,OAAQ,MAAO,IAAAa,EAAK,KAAAV,EAAM,GAAGH,EAAQ,CAC/D,CAIE,MAAMa,EAAKV,EAAO,CAAA,EAAIH,EAAS,CAAA,EAAI,CACjC,OAAO,KAAK,QAAQ,CAAE,OAAQ,QAAS,IAAAa,EAAK,KAAAV,EAAM,GAAGH,EAAQ,CACjE,CAIE,OAAOa,EAAKb,EAAS,GAAI,CACvB,OAAO,KAAK,QAAQ,CAAE,OAAQ,SAAU,IAAAa,EAAK,GAAGb,EAAQ,CAC5D,CAIE,MAAM,QAAQA,EAAQ,CACpB,MAAMc,EAAgB,KAAK,aAAad,CAAM,EACxCe,EAAgB,MAAM,KAAK,MAAM,QAAQD,CAAa,EAC5D,OAAO,KAAK,eAAeC,EAAeD,CAAa,CAC3D,CAKE,aAAad,EAAQ,CACnB,MAAO,CACL,GAAG,KAAK,OACR,GAAG,KAAK,WAAW,gBACnB,GAAG,KAAK,WAAW,UACnB,GAAGA,CACJ,CACL,CAKE,MAAM,eAAee,EAAef,EAAQ,CAC1C,MAAMC,EAAW,IAAIH,GAAS,KAAK,WAAYE,EAAQe,CAAa,EACpE,OAAIf,EAAO,SAAW,QACpB,MAAMC,EAAS,OAAQ,EAChBA,IAETD,EAAO,MAAQ,MAAMC,EAAS,KAAM,EAC7BA,EACX,CACA,CAEA,MAAMe,WAAwBC,EAAAA,UAAW,CAIvC,YAAYC,EAAUC,EAAO,WAC3B,MAAMD,EAAUC,CAAK,EAJvBjB,EAAA,cACAA,EAAA,wBACAA,EAAA,kBAGE,KAAK,QAAQF,GAAAA,EAAAA,EAAAA,SAAAA,YAAAA,EAAQ,WAARA,YAAAA,EAAkB,QAAS,KACxC,KAAK,kBAAkBA,EAAAA,WAAAA,YAAAA,EAAQ,WAAY,CAAE,EAC7C,KAAK,UAAY,CAAE,CACvB,CACE,KAAM,CACJ,OAAOoB,GAAY,IAAI,CAC3B,CACE,SAASC,EAAO,CACd,YAAK,MAAQA,EACN,IACX,CACA,CAEA,SAASD,GAAYrB,EAAY,CAC/B,OAAO,IAAIQ,GAAQR,CAAU,CAC/B,CAQA,SAASuB,GAAoBC,EAAa,CACxC,OAAOC,EAAAA,qBAAsBC,IAC3BA,EAAQ,OAAO,SAAWF,EACnBE,EACR,CACH,CCvPO,MAAMC,CAA4B,CAMrC,YAAYC,EAAqB,CAHjCzB,EAAA,aACAA,EAAA,cAGI,KAAK,KAAOyB,EACZ,KAAK,MAAQ,CAAC,CAAA,CAIlB,YAAqB,CACjB,OAAO,KAAK,YAAY,UAAA,CAI5B,QAAQtC,EAAauC,EAAc,CAC/B,GAAGA,GAAA,MAAAA,EAAK,OACJ,QAAQC,KAAMD,EACP,GAAAC,KAAM,KAAK,MAAO,CACX,MAAAC,EAAO,KAAK,MAAMD,CAAE,EAC1B,CAACC,EAAK,SAASzC,CAAG,GAAKyC,EAAK,KAAKzC,CAAG,CACxC,MAEI,KAAK,MAAMwC,CAAE,EAAI,CAACxC,CAAG,CAC7B,CAIR,QAAQA,EAAauC,EAAc,CAC/B,GAAG,EAACA,GAAA,MAAAA,EAAK,QACL,OAEJ,MAAMG,EAAO,CAAC,EACd,QAAQF,KAAMD,EAAK,CACT,MAAAE,EAAO,KAAK,MAAMD,CAAE,EAC1BG,EAAA,cAAA,KAAKF,EAAMzC,CAAG,EACVyC,GAAA,MAAAA,EAAM,SACNC,EAAK,KAAKF,CAAE,EACL,OAAA,KAAK,MAAMA,CAAE,EACxB,CAGDE,EAAK,QACC,KAAA,KAAK,QAAQA,CAAI,CAAA,CAQ9B,eAAe1C,EAAa4C,EAAqBC,EAAqB,CAClE,KAAK,QAAQ7C,EAAK8C,EAAW,cAAA,WAAAF,EAAYC,CAAU,CAAC,EACpD,KAAK,QAAQ7C,EAAK8C,EAAW,cAAA,WAAAD,EAAYD,CAAU,CAAC,CAAA,CAIxD,MAAM5C,EAAa,CACf,MAAM0C,EAAO,CAAC,EACN,QAAAF,KAAM,KAAK,KAAM,CACf,MAAAC,EAAO,KAAK,KAAKD,CAAE,EACnBO,EAAMN,EAAK,QAAQzC,CAAG,EACzB+C,GAAO,KACDN,EAAA,OAAOM,EAAI,CAAC,EACbN,EAAK,SACLC,EAAK,KAAKF,CAAE,EACL,OAAA,KAAK,MAAMA,CAAE,GAE5B,CAGDE,EAAK,QACC,KAAA,KAAK,QAAQA,CAAI,CAAA,CAI9B,OAAQ,CACJ,KAAK,KAAO,CAAC,CAAA,CAGrB,CAjFI7B,EADSwB,EACF,WAAW,GA2Ff,MAAMT,UAAoCD,EAAmB,CAGhE,YAAYE,EAAoBC,EAAe,CAC3C,MAAMD,EAAUC,CAAK,EAHzBjB,EAAA,aAIS,KAAA,KAAO,IAAIwB,EAAW,IAAI,CAAA,CAGnC,OAAQ,CACJ,KAAK,KAAK,MAAM,EAChB,MAAM,MAAM,CAAA,CAEpB,CC1GgB,SAAAW,EAA6BV,EAAqBW,EAA0C,OACrG,GAAA,OAAOA,GAAY,SAAU,CACtB,MAAAzC,GAASY,EAAAkB,EAAK,MAAL,YAAAlB,EAAU,SACnB8B,EAAQ1C,GAAUA,EAAOyC,CAAQ,GAAK,KACjCA,EAAAC,aAAiBC,WAAWD,EAAQ,IAAA,CAE5C,OAAAD,CACX,CAMO,SAASG,EAAaF,EAAmC,CAC5D,OAAGA,aAAiBG,EAAAA,SAAWH,aAAiBI,EAAa,WAAAJ,aAAiBK,EAAAA,QAAUL,aAAiBM,EAAA,UAC9FN,EAAM,WACV,IACX,qRCVO,SAASO,EAAyBC,EAAsC,CAC3EC,EAAAA,QAASD,CAAK,EACd,MAAM5B,EAAQ8B,EAAAA,eAAe,EAC7B,OAAAhC,EAAW,SAAW8B,EACfC,EAAA,QAAS/B,EAAmBE,CAAK,CAC5C,CAYgB,SAAA+B,EAAUC,EAAgB,CAAC,UAAAC,EAAU,GAAM,YAAAC,EAAY,GAAM,IAAAhE,EAAI,IAAuB,EAAA,GACxG,CACI,IAAIiE,EAAgBF,IAAcG,EAAO,OAAA,OAAO,GAAK,CAAA,GACrD,MAAMC,EAAYJ,GAAa,CAAC,CAAC,OAAO,KAAKE,CAAK,EAAE,OAEhD,MAAM,QAAQH,CAAM,IACZA,EAAA,OAAO,OAAOA,CAAM,GAE7BE,GACAF,EAAO,KAAKM,MAAI,EAEnB,UAAUV,KAASI,EACZ,GAAAJ,GAASA,EAAM,OAAQ,CACtB,GAAGA,EAAM,UAAUO,EACf,SAGJA,EAAMP,EAAM,MAAM,EAAID,EAAQC,CAAK,CAAA,CAG1C,OAAAS,GAAYE,EAAAA,QAAQ,QAASJ,CAAK,EAC5BA,CACX,CCXO,MAAMK,CAAW,CACpB,OAAO,SAASC,EAA2B,CACvC,MAAMC,EAAMC,EAAA,SAAS,IAAI,KAAKF,CAAI,CAAC,EAC/B,OAAAC,EAAA,KAAOE,EAAS,SAAA,WAAM,WAAIN,EAAAA,OAAKhD,EAAAoD,EAAI,OAAJ,YAAApD,EAAU,OAAQ,CAAA,CAAE,EAAC,EACjDoD,CAAA,CAGX,YAAYD,EAAa,GAAI,CAClB,OAAA,OAAO,KAAMA,CAAI,EACnB,KAAA,MAAQI,QAAM,KAAK,EACxB,KAAK,UAAY,EAAA,CAOrB,KAAKC,EAAa,OAAW,CACtB,KAAK,SAAW,SACZA,IAAU,SACDA,EAAA,KAAK,SAAS,KAAK,MAAM,GACrCA,EAAM,OAAS,KAAK,OACpB,KAAK,KAAOA,GAGb,KAAK,SAAW,SACV,KAAA,MAAQf,EAAU,KAAK,MAAM,EACtC,CAQJ,SAASgB,EAAqB,CACpB,MAAAC,EAAK,SAAS,eAAeD,CAAM,EACzC,GAAG,CAACC,EACM,KAAA,gCACV,OAAOA,EAAG,UAAY,KAAK,MAAMA,EAAG,SAAS,EAAI,CAAC,CAAA,CAE1D,CA0BgB,SAAAC,GAAcR,EAAYS,EAAgB,GAAkB,CAClE,MAAAR,EAAMF,EAAW,SAASC,CAAI,EAC5B,OAAAS,GAAAR,EAAI,QAAUA,EAAI,KAAK,EAE/BH,EAAA,QAAQ,UAAWG,CAAG,EACdH,UAAA,OAAQG,EAAI,IAAI,EAEjBA,CACX,CC7CO,SAASS,GAA6B,CAAC,MAAAC,EAAO,KAAAC,EAAM,MAAAC,EAAM,MAAqB,CAC5E,MAAAC,EAAaC,MAAI,EAAK,EACtBC,EAAUb,EAAAA,SAAS,IAAM,CAACQ,EAAM,YAAcC,EAAK,IAAID,EAAM,WAAYA,EAAM,IAAI,CAAC,EAqBnF,MAAA,CAAC,WAAAG,EAAY,IAlBR,SAAUG,IAA4B,CAC9C,GAAGN,EAAM,SAAW,CAAC,QAAQA,EAAM,OAAO,EACtC,OAEJ,GAAGA,EAAM,KACL,OAAO,OAAO,KAAKA,EAAM,KAAM,QAAQ,EAE3CG,EAAW,MAAQ,GAEnB,IAAIrE,EAAakE,EAAM,IAAIC,EAAMD,EAAM,KAAM,GAAGM,CAAI,EACpD,OAAGxE,aAAkB,UACjBA,EAAS,MAAMA,GAEnBqE,EAAW,MAAQ,GAChBD,GACCA,EAAM,YAAaF,EAAM,KAAM,GAAGM,CAAI,EACnCxE,CACX,EACyB,QAAAuE,CAAO,CACpC,CC1GA,SAASE,EAASC,EAAQ,CAGxB,MAAMC,EAAOD,EAAO,MAAM,EAAE,EAAE,YAAa,EAC3C,OAAQ,GAAI,CACV,KAAKA,IAAW,iBAEZ,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,KAAKA,IAAW,MAEZ,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,IAAK;AAAA;AAAA,uBAEc,SAASC,CAAI,EAE5B,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,IAAK;AAAA,wDAC+C,SAASA,CAAI,EAE7D,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,IAAK;AAAA,kDACyC,SAASA,CAAI,EAEvD,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,IAAK,+CAA+C,SAASA,CAAI,EAE7D,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,KAAKA,IAAS,KAEV,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,KAAKA,IAAS,KAEV,MAAO,CACL,SAAU,EACV,cAAe,CAChB,EAEL,QACE,OAAO,IACb,CACA,CACA,SAASC,GAAaC,EAAMH,EAAQI,EAAgB,OAClD,MAAMC,EAAQ,CAAE,EAChB,IAAIC,EAAc,CAAE,EACpB,MAAMC,EAAkBC,EAAaL,CAAI,EACnCM,EAAiBC,EAAWP,CAAI,EAChCQ,EAAQP,KAAkB1E,EAAAqE,EAASC,CAAM,IAAf,YAAAtE,EAAkB,WAAY,EACxDkF,GAAqBL,EAAgB,OAAM,EAAKI,EAAQ,GAAK,EAC7DE,GAAoBJ,EAAe,OAAM,EAAKE,EAAQ,GAAK,EACjE,QAASG,EAAI,EAAGA,EAAIF,EAAmBE,IAAK,CAC1C,MAAMC,EAAc,IAAI,KAAKR,CAAe,EAC5CQ,EAAY,QAAQA,EAAY,QAAO,GAAMH,EAAoBE,EAAE,EACnER,EAAY,KAAKS,CAAW,CAChC,CACE,QAASD,EAAI,EAAGA,GAAKL,EAAe,QAAO,EAAIK,IAAK,CAClD,MAAME,EAAM,IAAI,KAAKb,EAAK,YAAW,EAAIA,EAAK,SAAU,EAAEW,CAAC,EAG3DR,EAAY,KAAKU,CAAG,EAGhBV,EAAY,SAAW,IACzBD,EAAM,KAAKC,CAAW,EACtBA,EAAc,CAAE,EAEtB,CACE,QAASQ,EAAI,EAAGA,EAAI,EAAID,EAAkBC,IAAK,CAC7C,MAAMC,EAAc,IAAI,KAAKN,CAAc,EAC3CM,EAAY,QAAQA,EAAY,QAAO,EAAKD,CAAC,EAC7CR,EAAY,KAAKS,CAAW,CAChC,CACE,OAAIT,EAAY,OAAS,GACvBD,EAAM,KAAKC,CAAW,EAEjBD,CACT,CACA,SAASY,EAAYd,EAAMH,EAAQI,EAAgB,OACjD,MAAMY,EAAMZ,KAAkB1E,EAAAqE,EAASC,CAAM,IAAf,YAAAtE,EAAkB,WAAY,EACtDwF,EAAI,IAAI,KAAKf,CAAI,EACvB,KAAOe,EAAE,OAAQ,IAAKF,GACpBE,EAAE,QAAQA,EAAE,QAAO,EAAK,CAAC,EAE3B,OAAOA,CACT,CACA,SAASC,GAAUhB,EAAMH,EAAQ,OAC/B,MAAMkB,EAAI,IAAI,KAAKf,CAAI,EACjBiB,MAAY1F,EAAAqE,EAASC,CAAM,IAAf,YAAAtE,EAAkB,WAAY,GAAK,GAAK,EAC1D,KAAOwF,EAAE,OAAQ,IAAKE,GACpBF,EAAE,QAAQA,EAAE,QAAO,EAAK,CAAC,EAE3B,OAAOA,CACT,CACA,SAASV,EAAaL,EAAM,CAC1B,OAAO,IAAI,KAAKA,EAAK,YAAa,EAAEA,EAAK,SAAU,EAAE,CAAC,CACxD,CACA,SAASO,EAAWP,EAAM,CACxB,OAAO,IAAI,KAAKA,EAAK,YAAW,EAAIA,EAAK,SAAQ,EAAK,EAAG,CAAC,CAC5D,CACA,SAASkB,GAAenC,EAAO,CAC7B,MAAMoC,EAAQpC,EAAM,MAAM,GAAG,EAAE,IAAI,MAAM,EAGzC,OAAO,IAAI,KAAKoC,EAAM,CAAC,EAAGA,EAAM,CAAC,EAAI,EAAGA,EAAM,CAAC,CAAC,CAClD,CACA,MAAMC,GAAW,kEACjB,SAASpB,EAAKjB,EAAO,CACnB,GAAIA,GAAS,KAAM,OAAO,IAAI,KAC9B,GAAIA,aAAiB,KAAM,OAAOA,EAClC,GAAI,OAAOA,GAAU,SAAU,CAC7B,IAAIsC,EACJ,GAAID,GAAS,KAAKrC,CAAK,EACrB,OAAOmC,GAAenC,CAAK,EAI7B,GAFEsC,EAAS,KAAK,MAAMtC,CAAK,EAEvB,CAAC,MAAMsC,CAAM,EAAG,OAAO,IAAI,KAAKA,CAAM,CAC9C,CACE,OAAO,IACT,CACA,MAAMC,EAA0B,IAAI,KAAK,IAAM,EAAG,CAAC,EACnD,SAASC,GAAY1B,EAAQI,EAAgB,OAC3C,MAAMuB,EAAiBvB,KAAkB1E,EAAAqE,EAASC,CAAM,IAAf,YAAAtE,EAAkB,WAAY,EACvE,OAAOkG,cAAY,CAAC,EAAE,IAAId,GAAK,CAC7B,MAAMe,EAAU,IAAI,KAAKJ,CAAuB,EAChD,OAAAI,EAAQ,QAAQJ,EAAwB,QAAO,EAAKE,EAAiBb,CAAC,EAC/D,IAAI,KAAK,eAAed,EAAQ,CACrC,QAAS,QACf,CAAK,EAAE,OAAO6B,CAAO,CACrB,CAAG,CACH,CACA,SAASC,GAAO5C,EAAO6C,EAAc/B,EAAQgC,EAAS,CACpD,MAAMC,EAAU9B,EAAKjB,CAAK,GAAK,IAAI,KAC7BgD,EAAeF,GAAA,YAAAA,EAAUD,GAC/B,GAAI,OAAOG,GAAiB,WAC1B,OAAOA,EAAaD,EAASF,EAAc/B,CAAM,EAEnD,IAAImC,EAAU,CAAE,EAChB,OAAQJ,EAAY,CAClB,IAAK,WACHI,EAAU,CACR,KAAM,UACN,MAAO,OACP,IAAK,SACN,EACD,MACF,IAAK,sBACHA,EAAU,CACR,QAAS,OACT,KAAM,UACN,MAAO,OACP,IAAK,SACN,EACD,MACF,IAAK,aACH,MAAMnB,EAAMiB,EAAQ,QAAS,EACvBG,EAAQ,IAAI,KAAK,eAAepC,EAAQ,CAC5C,MAAO,MACf,CAAO,EAAE,OAAOiC,CAAO,EACjB,MAAO,GAAGjB,CAAG,IAAIoB,CAAK,GACxB,IAAK,wBACHD,EAAU,CACR,QAAS,QACT,IAAK,UACL,MAAO,OACR,EACD,MACF,IAAK,YACHA,EAAU,CACR,MAAO,QACP,IAAK,SACN,EACD,MACF,IAAK,OACHA,EAAU,CACR,KAAM,SACP,EACD,MACF,IAAK,QACHA,EAAU,CACR,MAAO,MACR,EACD,MACF,IAAK,aACHA,EAAU,CACR,MAAO,OACR,EACD,MACF,IAAK,eACHA,EAAU,CACR,MAAO,OACP,KAAM,SACP,EACD,MACF,IAAK,eACHA,EAAU,CACR,MAAO,OACP,IAAK,SACN,EACD,MACF,IAAK,UACHA,EAAU,CACR,QAAS,MACV,EACD,MACF,IAAK,eACHA,EAAU,CACR,QAAS,OACV,EACD,MACF,IAAK,aACH,OAAO,IAAI,KAAK,aAAanC,CAAM,EAAE,OAAOiC,EAAQ,SAAS,EAC/D,IAAK,WACHE,EAAU,CACR,KAAM,UACN,OAAQ,EACT,EACD,MACF,IAAK,WACHA,EAAU,CACR,KAAM,UACN,OAAQ,EACT,EACD,MACF,IAAK,UACHA,EAAU,CACR,OAAQ,SACT,EACD,MACF,IAAK,UACHA,EAAU,CACR,OAAQ,SACT,EACD,MACF,IAAK,WACHA,EAAU,CACR,KAAM,UACN,OAAQ,SACT,EACD,MACF,IAAK,cACHA,EAAU,CACR,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACD,MACF,IAAK,cACHA,EAAU,CACR,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACD,MACF,IAAK,eACHA,EAAU,CACR,KAAM,UACN,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,SACT,EACD,MACF,IAAK,kBACHA,EAAU,CACR,KAAM,UACN,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACD,MACF,IAAK,kBACHA,EAAU,CACR,KAAM,UACN,MAAO,QACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACD,MACF,IAAK,eACHA,EAAU,CACR,KAAM,UACN,MAAO,UACP,IAAK,SACN,EACD,MACF,IAAK,mBACH,OAAAA,EAAU,CACR,KAAM,UACN,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,SACT,EACM,IAAI,KAAK,eAAenC,EAAQmC,CAAO,EAAE,OAAOF,CAAO,EAAE,QAAQ,MAAO,GAAG,EACpF,IAAK,sBACH,OAAAE,EAAU,CACR,KAAM,UACN,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACM,IAAI,KAAK,eAAenC,EAAQmC,CAAO,EAAE,OAAOF,CAAO,EAAE,QAAQ,MAAO,GAAG,EACpF,IAAK,sBACH,OAAAE,EAAU,CACR,KAAM,UACN,MAAO,UACP,IAAK,UACL,KAAM,UACN,OAAQ,UACR,OAAQ,EACT,EACM,IAAI,KAAK,eAAenC,EAAQmC,CAAO,EAAE,OAAOF,CAAO,EAAE,QAAQ,MAAO,GAAG,EACpF,QACEE,EAAUD,GAAgB,CACxB,SAAU,MACV,aAAc,OACf,CACP,CACE,OAAO,IAAI,KAAK,eAAelC,EAAQmC,CAAO,EAAE,OAAOF,CAAO,CAChE,CACA,SAASI,GAAMC,EAASpD,EAAO,CAC7B,MAAMiB,EAAOmC,EAAQ,SAASpD,CAAK,EAC7BqD,EAAOpC,EAAK,YAAa,EACzBiC,EAAQI,WAAS,OAAOrC,EAAK,SAAQ,EAAK,CAAC,EAAG,EAAG,GAAG,EACpDa,EAAMwB,EAAQ,SAAC,OAAOrC,EAAK,SAAS,EAAG,EAAG,GAAG,EACnD,MAAO,GAAGoC,CAAI,IAAIH,CAAK,IAAIpB,CAAG,EAChC,CACA,SAASyB,GAASvD,EAAO,CACvB,KAAM,CAACqD,EAAMH,EAAOpB,CAAG,EAAI9B,EAAM,MAAM,GAAG,EAAE,IAAI,MAAM,EACtD,OAAO,IAAI,KAAKqD,EAAMH,EAAQ,EAAGpB,CAAG,CACtC,CACA,SAAS0B,GAAWvC,EAAMwC,EAAQ,CAChC,MAAMzB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,WAAWA,EAAE,WAAU,EAAKyB,CAAM,EAC7BzB,CACT,CACA,SAAS0B,GAASzC,EAAMwC,EAAQ,CAC9B,MAAMzB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,SAASA,EAAE,SAAQ,EAAKyB,CAAM,EACzBzB,CACT,CACA,SAAS2B,EAAQ1C,EAAMwC,EAAQ,CAC7B,MAAMzB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,QAAQA,EAAE,QAAO,EAAKyB,CAAM,EACvBzB,CACT,CACA,SAAS4B,GAAS3C,EAAMwC,EAAQ,CAC9B,MAAMzB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,QAAQA,EAAE,QAAO,EAAKyB,EAAS,CAAC,EAC3BzB,CACT,CACA,SAAS6B,GAAU5C,EAAMwC,EAAQ,CAC/B,MAAMzB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,QAAQ,CAAC,EACXA,EAAE,SAASA,EAAE,SAAQ,EAAKyB,CAAM,EACzBzB,CACT,CACA,SAAS8B,EAAQ7C,EAAM,CACrB,OAAOA,EAAK,YAAa,CAC3B,CACA,SAAS8C,GAAS9C,EAAM,CACtB,OAAOA,EAAK,SAAU,CACxB,CACA,SAAS+C,GAAQ/C,EAAMH,EAAQI,EAAgB+C,EAAkB,CAC/D,MAAMC,EAAqBrD,EAASC,CAAM,EACpCqD,EAAYjD,IAAkBgD,GAAA,YAAAA,EAAoB,WAAY,EAC9DE,EAAcH,IAAoBC,GAAA,YAAAA,EAAoB,gBAAiB,EAC7E,SAASG,EAAchB,EAAM,CAC3B,MAAMiB,EAAY,IAAI,KAAKjB,EAAM,EAAG,CAAC,EACrC,MAAO,GAAIkB,EAAQD,EAAWvC,EAAYuC,EAAWxD,EAAQqD,CAAS,EAAG,MAAM,CACnF,CACE,IAAId,EAAOS,EAAQ7C,CAAI,EACvB,MAAMuD,EAAiBb,EAAQ5B,EAAYd,EAAMH,EAAQqD,CAAS,EAAG,CAAC,EAClEd,EAAOS,EAAQU,CAAc,GAAKH,EAAchB,EAAO,CAAC,GAAKe,GAC/Df,IAEF,MAAMiB,EAAY,IAAI,KAAKjB,EAAM,EAAG,CAAC,EAC/BoB,EAAOJ,EAAchB,CAAI,EACzBqB,EAAOD,GAAQL,EAAcT,EAAQW,EAAWG,EAAO,CAAC,EAAId,EAAQW,EAAWG,CAAI,EACzF,MAAO,GAAIF,EAAQI,EAAS1D,CAAI,EAAG2D,EAAWF,CAAI,EAAG,OAAO,CAC9D,CACA,SAASG,GAAQ5D,EAAM,CACrB,OAAOA,EAAK,QAAS,CACvB,CACA,SAAS6D,GAAa7D,EAAM,CAC1B,OAAO,IAAI,KAAKA,EAAK,YAAW,EAAIA,EAAK,SAAQ,EAAK,EAAG,CAAC,CAC5D,CACA,SAAS8D,GAAiB9D,EAAM,CAC9B,OAAO,IAAI,KAAKA,EAAK,YAAW,EAAIA,EAAK,SAAQ,EAAK,EAAG,CAAC,CAC5D,CACA,SAAS+D,GAAS/D,EAAM,CACtB,OAAOA,EAAK,SAAU,CACxB,CACA,SAASgE,GAAWhE,EAAM,CACxB,OAAOA,EAAK,WAAY,CAC1B,CACA,SAASiE,GAAYjE,EAAM,CACzB,OAAO,IAAI,KAAKA,EAAK,YAAW,EAAI,EAAG,CAAC,CAC1C,CACA,SAASkE,GAAUlE,EAAM,CACvB,OAAO,IAAI,KAAKA,EAAK,YAAW,EAAI,GAAI,EAAE,CAC5C,CACA,SAASmE,GAAcnE,EAAMoE,EAAO,CAClC,OAAOC,EAAQrE,EAAMoE,EAAM,CAAC,CAAC,GAAKE,GAAStE,EAAMoE,EAAM,CAAC,CAAC,CAC3D,CACA,SAASG,GAAQvE,EAAM,CACrB,MAAMe,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAOe,aAAa,MAAQ,CAAC,MAAMA,EAAE,QAAO,CAAE,CAChD,CACA,SAASsD,EAAQrE,EAAMwE,EAAW,CAChC,OAAOxE,EAAK,UAAYwE,EAAU,QAAS,CAC7C,CACA,SAASC,GAAWzE,EAAMwE,EAAW,CACnC,OAAOH,EAAQV,EAAW3D,CAAI,EAAG2D,EAAWa,CAAS,CAAC,CACxD,CACA,SAASF,GAAStE,EAAMwE,EAAW,CACjC,OAAOxE,EAAK,UAAYwE,EAAU,QAAS,CAC7C,CACA,SAASE,EAAQ1E,EAAMwE,EAAW,CAChC,OAAOxE,EAAK,YAAcwE,EAAU,QAAS,CAC/C,CACA,SAASG,GAAU3E,EAAMwE,EAAW,CAClC,OAAOxE,EAAK,QAAS,IAAKwE,EAAU,QAAO,GAAMxE,EAAK,SAAU,IAAKwE,EAAU,SAAQ,GAAMxE,EAAK,YAAa,IAAKwE,EAAU,YAAa,CAC7I,CACA,SAASI,GAAY5E,EAAMwE,EAAW,CACpC,OAAOxE,EAAK,SAAU,IAAKwE,EAAU,YAAcxE,EAAK,YAAW,IAAOwE,EAAU,YAAa,CACnG,CACA,SAASK,GAAW7E,EAAMwE,EAAW,CACnC,OAAOxE,EAAK,gBAAkBwE,EAAU,YAAa,CACvD,CACA,SAASlB,EAAQtD,EAAMwE,EAAWM,EAAM,CACtC,MAAM/D,EAAI,IAAI,KAAKf,CAAI,EACjB+E,EAAI,IAAI,KAAKP,CAAS,EAC5B,OAAQM,EAAI,CACV,IAAK,QACH,OAAO/D,EAAE,cAAgBgE,EAAE,YAAa,EAC1C,IAAK,WACH,OAAO,KAAK,OAAOhE,EAAE,SAAQ,EAAKgE,EAAE,SAAQ,GAAMhE,EAAE,YAAW,EAAKgE,EAAE,YAAa,GAAI,IAAM,CAAC,EAChG,IAAK,SACH,OAAOhE,EAAE,WAAagE,EAAE,SAAU,GAAIhE,EAAE,YAAa,EAAGgE,EAAE,YAAa,GAAI,GAC7E,IAAK,QACH,OAAO,KAAK,OAAOhE,EAAE,QAAS,EAAGgE,EAAE,QAAS,IAAK,IAAO,GAAK,GAAK,GAAK,EAAE,EAC3E,IAAK,OACH,OAAO,KAAK,OAAOhE,EAAE,QAAO,EAAKgE,EAAE,QAAO,IAAO,IAAO,GAAK,GAAK,GAAG,EACvE,IAAK,QACH,OAAO,KAAK,OAAOhE,EAAE,QAAS,EAAGgE,EAAE,YAAc,IAAO,GAAK,GAAG,EAClE,IAAK,UACH,OAAO,KAAK,OAAOhE,EAAE,QAAO,EAAKgE,EAAE,QAAS,IAAK,IAAO,GAAG,EAC7D,IAAK,UACH,OAAO,KAAK,OAAOhE,EAAE,QAAO,EAAKgE,EAAE,QAAS,GAAI,GAAI,EACtD,QAEI,OAAOhE,EAAE,UAAYgE,EAAE,QAAS,CAExC,CACA,CACA,SAASC,GAAShF,EAAMiF,EAAO,CAC7B,MAAMlE,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,SAASkE,CAAK,EACTlE,CACT,CACA,SAASmE,GAAWlF,EAAMiF,EAAO,CAC/B,MAAMlE,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,WAAWkE,CAAK,EACXlE,CACT,CACA,SAASoE,GAASnF,EAAMiF,EAAO,CAC7B,MAAMlE,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,SAASkE,CAAK,EACTlE,CACT,CACA,SAASqE,GAAQpF,EAAMa,EAAK,CAC1B,MAAME,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,QAAQF,CAAG,EACNE,CACT,CACA,SAASsE,GAAQrF,EAAMoC,EAAM,CAC3B,MAAMrB,EAAI,IAAI,KAAKf,CAAI,EACvB,OAAAe,EAAE,YAAYqB,CAAI,EACXrB,CACT,CACA,SAAS4C,EAAW3D,EAAM,CACxB,OAAO,IAAI,KAAKA,EAAK,YAAa,EAAEA,EAAK,SAAQ,EAAIA,EAAK,QAAO,EAAI,EAAG,EAAG,EAAG,CAAC,CACjF,CACA,SAAS0D,EAAS1D,EAAM,CACtB,OAAO,IAAI,KAAKA,EAAK,YAAa,EAAEA,EAAK,SAAQ,EAAIA,EAAK,QAAO,EAAI,GAAI,GAAI,GAAI,GAAG,CACtF,CACO,MAAMsF,EAAmB,CAC9B,YAAYtD,EAAS,CACnB,KAAK,OAASA,EAAQ,OACtB,KAAK,QAAUA,EAAQ,OAC3B,CACE,KAAKjD,EAAO,CACV,OAAOiB,EAAKjB,CAAK,CACrB,CACE,SAASiB,EAAM,CACb,OAAOA,CACX,CACE,MAAMA,EAAM,CACV,OAAOkC,GAAM,KAAMlC,CAAI,CAC3B,CACE,SAASA,EAAM,CACb,OAAOsC,GAAStC,CAAI,CACxB,CACE,WAAWA,EAAMwC,EAAQ,CACvB,OAAOD,GAAWvC,EAAMwC,CAAM,CAClC,CACE,SAASxC,EAAMwC,EAAQ,CACrB,OAAOC,GAASzC,EAAMwC,CAAM,CAChC,CACE,QAAQxC,EAAMwC,EAAQ,CACpB,OAAOE,EAAQ1C,EAAMwC,CAAM,CAC/B,CACE,SAASxC,EAAMwC,EAAQ,CACrB,OAAOG,GAAS3C,EAAMwC,CAAM,CAChC,CACE,UAAUxC,EAAMwC,EAAQ,CACtB,OAAOI,GAAU5C,EAAMwC,CAAM,CACjC,CACE,aAAaxC,EAAMC,EAAgB,CACjC,MAAMsF,EAAWtF,IAAmB,OAAY,OAAOA,CAAc,EAAI,OACzE,OAAOF,GAAaC,EAAM,KAAK,OAAQuF,CAAQ,CACnD,CACE,YAAYvF,EAAMC,EAAgB,CAChC,MAAMsF,EAAWtF,IAAmB,OAAY,OAAOA,CAAc,EAAI,OACzE,OAAOa,EAAYd,EAAM,KAAK,OAAQuF,CAAQ,CAClD,CACE,UAAUvF,EAAM,CACd,OAAOgB,GAAUhB,EAAM,KAAK,MAAM,CACtC,CACE,aAAaA,EAAM,CACjB,OAAOK,EAAaL,CAAI,CAC5B,CACE,WAAWA,EAAM,CACf,OAAOO,EAAWP,CAAI,CAC1B,CACE,OAAOA,EAAM4B,EAAc,CACzB,OAAOD,GAAO3B,EAAM4B,EAAc,KAAK,OAAQ,KAAK,OAAO,CAC/D,CACE,QAAQ5B,EAAMwE,EAAW,CACvB,OAAOE,EAAQ1E,EAAMwE,CAAS,CAClC,CACE,QAAQxE,EAAM,CACZ,OAAOuE,GAAQvE,CAAI,CACvB,CACE,cAAcA,EAAMoE,EAAO,CACzB,OAAOD,GAAcnE,EAAMoE,CAAK,CACpC,CACE,QAAQpE,EAAMwE,EAAW,CACvB,OAAOH,EAAQrE,EAAMwE,CAAS,CAClC,CACE,WAAWxE,EAAMwE,EAAW,CAC1B,OAAOC,GAAWzE,EAAMwE,CAAS,CACrC,CACE,SAASxE,EAAMwE,EAAW,CACxB,MAAO,CAACH,EAAQrE,EAAMwE,CAAS,GAAK,CAACE,EAAQ1E,EAAMwE,CAAS,CAChE,CACE,UAAUxE,EAAMwE,EAAW,CACzB,OAAOG,GAAU3E,EAAMwE,CAAS,CACpC,CACE,YAAYxE,EAAMwE,EAAW,CAC3B,OAAOI,GAAY5E,EAAMwE,CAAS,CACtC,CACE,WAAWxE,EAAMwE,EAAW,CAC1B,OAAOK,GAAW7E,EAAMwE,CAAS,CACrC,CACE,WAAWxE,EAAMiF,EAAO,CACtB,OAAOC,GAAWlF,EAAMiF,CAAK,CACjC,CACE,SAASjF,EAAMiF,EAAO,CACpB,OAAOD,GAAShF,EAAMiF,CAAK,CAC/B,CACE,SAASjF,EAAMiF,EAAO,CACpB,OAAOE,GAASnF,EAAMiF,CAAK,CAC/B,CACE,QAAQjF,EAAMa,EAAK,CACjB,OAAOuE,GAAQpF,EAAMa,CAAG,CAC5B,CACE,QAAQb,EAAMoC,EAAM,CAClB,OAAOiD,GAAQrF,EAAMoC,CAAI,CAC7B,CACE,QAAQpC,EAAMwE,EAAWM,EAAM,CAC7B,OAAOxB,EAAQtD,EAAMwE,EAAWM,CAAI,CACxC,CACE,YAAY7E,EAAgB,CAC1B,MAAMsF,EAAWtF,IAAmB,OAAY,OAAOA,CAAc,EAAI,OACzE,OAAOsB,GAAY,KAAK,OAAQgE,CAAQ,CAC5C,CACE,QAAQvF,EAAM,CACZ,OAAO6C,EAAQ7C,CAAI,CACvB,CACE,SAASA,EAAM,CACb,OAAO8C,GAAS9C,CAAI,CACxB,CACE,QAAQA,EAAMC,EAAgB+C,EAAkB,CAC9C,MAAMuC,EAAWtF,IAAmB,OAAY,OAAOA,CAAc,EAAI,OACzE,OAAO8C,GAAQ/C,EAAM,KAAK,OAAQuF,EAAUvC,CAAgB,CAChE,CACE,QAAQhD,EAAM,CACZ,OAAO4D,GAAQ5D,CAAI,CACvB,CACE,aAAaA,EAAM,CACjB,OAAO6D,GAAa7D,CAAI,CAC5B,CACE,iBAAiBA,EAAM,CACrB,OAAO8D,GAAiB9D,CAAI,CAChC,CACE,SAASA,EAAM,CACb,OAAO+D,GAAS/D,CAAI,CACxB,CACE,WAAWA,EAAM,CACf,OAAOgE,GAAWhE,CAAI,CAC1B,CACE,WAAWA,EAAM,CACf,OAAO2D,EAAW3D,CAAI,CAC1B,CACE,SAASA,EAAM,CACb,OAAO0D,EAAS1D,CAAI,CACxB,CACE,YAAYA,EAAM,CAChB,OAAOiE,GAAYjE,CAAI,CAC3B,CACE,UAAUA,EAAM,CACd,OAAOkE,GAAUlE,CAAI,CACzB,CACA,CC7oBO,MAAMwF,GAAoB,OAAO,IAAI,sBAAsB,EACrDC,EAAoB,OAAO,IAAI,sBAAsB,EAC3D,SAASC,GAAW1D,EAASnC,EAAQ,CAC1C,MAAM8F,EAAWC,EAAAA,UAAU,CACzB,QAASN,GACT,OAAQ,CACN,GAAI,QAEJ,GAAI,QACJ,GAAI,QACJ,IAAK,GACL,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QAEJ,GAAI,QACJ,GAAI,QACJ,GAAI,QAEJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,OAAQ,QACR,OAAQ,QACR,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,GAAI,QACJ,OAAQ,QACR,OAAQ,OACd,CACG,EAAEtD,CAAO,EACV,MAAO,CACL,QAAS2D,EACT,SAAUE,GAAeF,EAAU9F,CAAM,CAC1C,CACH,CAaA,SAASgG,GAAe7D,EAASnC,EAAQ,CACvC,MAAMiG,EAAWlH,EAAAA,SAAS,OAAOoD,EAAQ,SAAY,WAEnD,IAAIA,EAAQ,QAAQ,CACpB,OAAQA,EAAQ,OAAOnC,EAAO,QAAQ,KAAK,GAAKA,EAAO,QAAQ,MAC/D,QAASmC,EAAQ,OACrB,CAAG,EAAIA,EAAQ,OAAO,EACpB+D,OAAAA,QAAMlG,EAAO,QAASd,GAAS,CAC7B+G,EAAS,OAAS9D,EAAQ,OAAOjD,CAAK,GAAKA,GAAS+G,EAAS,MACjE,CAAG,EACMA,CACT,CCxEO,SAASE,GAAgB,CAC1B,IAAAC,EAAU,UAAU,OAAS,GAAK,UAAU,CAAC,IAAM,OAAY,UAAU,CAAC,EAAI,CAAC,EAC7E,KAAA,CACJ,UAAAC,EACA,GAAGC,CAAA,EACDF,EACEjE,EAAU4D,EAAAA,UAAUM,EAAWC,CAAI,EACnC,CACJ,QAAAC,EAAU,CAAC,EACX,WAAAC,EAAa,CAAC,EACd,WAAAC,EAAa,CAAA,CAAC,EACZtE,EACEuE,EAAQC,EAAAA,YAAY,EACnB,OAAAD,EAAM,IAAI,IAAM,CACf,MAAAE,EAAWC,EAAAA,eAAe1E,EAAQ,QAAQ,EAC1C2E,EAAUC,EAAAA,cAAc5E,EAAQ,QAASA,EAAQ,GAAG,EACpD6E,EAAQC,EAAAA,YAAY9E,EAAQ,KAAK,EACjC+E,EAAQC,EAAAA,YAAYhF,EAAQ,KAAK,EACjCnC,EAASoH,EAAAA,aAAajF,EAAQ,MAAM,EACpChC,EAAO0F,GAAW1D,EAAQ,KAAMnC,CAAM,EACtCqH,EAAOC,EAAA,WAAWnF,EAAQ,KAAMnC,CAAM,EAC5C,SAASuH,EAAQC,EAAK,CACpB,UAAWlN,KAAOmM,EAChBe,EAAI,UAAUlN,EAAKmM,EAAWnM,CAAG,CAAC,EAEpC,UAAWA,KAAOkM,EAChBgB,EAAI,UAAUlN,EAAKkM,EAAWlM,CAAG,CAAC,EAEpC,UAAWA,KAAOiM,EACZiB,EAAA,UAAUlN,EAAKmN,kBAAgB,CACjC,GAAGlB,EAAQjM,CAAG,EACd,KAAMA,EACN,UAAWiM,EAAQjM,CAAG,EAAE,IAAA,CACzB,CAAC,EAEJ,MAAMoN,EAAWf,EAAAA,YAAY,EAazB,GAZJe,EAAS,IAAI,IAAM,CACjBV,EAAM,QAAQQ,CAAG,CAAA,CAClB,EACDA,EAAI,UAAU,IAAME,EAAS,KAAA,CAAM,EAC/BF,EAAA,QAAQG,iBAAgBf,CAAQ,EAChCY,EAAA,QAAQI,gBAAed,CAAO,EAC9BU,EAAA,QAAQK,cAAab,CAAK,EAC1BQ,EAAA,QAAQM,aAAYZ,CAAK,EACzBM,EAAA,QAAQO,eAAc/H,CAAM,EAC5BwH,EAAA,QAAQ7B,GAAmBxF,EAAK,OAAO,EACvCqH,EAAA,QAAQ5B,EAAmBzF,EAAK,QAAQ,EACxCqH,EAAA,QAAQQ,aAAYX,CAAI,EACxBY,EAAA,YAAc9F,EAAQ,IACxB,GAAIqF,EAAI,MACFA,EAAA,MAAM,KAAK,uBAAwB,IAAM,CAC3CV,EAAQ,OAAO,CAAA,CAChB,MACI,CACC,KAAA,CACJ,MAAAoB,CAAA,EACEV,EACJA,EAAI,MAAQ,UAAY,CAChB,MAAAW,GAAKD,EAAM,GAAG,SAAS,EACpBE,OAAAA,WAAA,IAAMtB,EAAQ,QAAQ,EAC/BU,EAAI,MAAQU,EACLC,EACT,CAAA,CAIFX,EAAI,MAAM,CACR,SAAU,CACR,UAAW,CACT,OAAOzI,WAAS,CACd,SAAUP,EAAO,KAAK,KAAMmJ,EAAAA,cAAc,EAC1C,QAASnJ,EAAO,KAAK,KAAMoJ,EAAAA,aAAa,EACxC,MAAOpJ,EAAO,KAAK,KAAMqJ,EAAAA,WAAW,EACpC,MAAOrJ,EAAO,KAAK,KAAMsJ,EAAAA,UAAU,EACnC,OAAQtJ,EAAO,KAAK,KAAMuJ,EAAAA,YAAY,EACtC,KAAMvJ,EAAO,KAAK,KAAMoH,CAAiB,CAAA,CAC1C,CAAA,CACH,CACF,CACD,CACH,CAEF,SAASyC,GAAU,CACjB3B,EAAM,KAAK,CAAA,CAEN,MAAA,CACL,QAAAa,EACA,QAAAc,EACA,SAAAzB,EACA,QAAAE,EAAA,MACAE,EACA,MAAAE,EACA,OAAAlH,EACA,KAAAG,EACA,KAAAkH,CACF,CAAA,CACD,CACH,CACO,MAAMiB,GAAU,QACvBnC,EAAc,QAAUmC,GAGxB,SAAS9J,EAAOlE,EAAK,SACnB,MAAM6N,EAAK,KAAK,EACVI,IAAW7M,EAAAyM,EAAG,SAAH,YAAAzM,EAAW,aAAYE,EAAAuM,EAAG,MAAM,aAAT,YAAAvM,EAAqB,UACzD,GAAA2M,GAAYjO,KAAOiO,EACrB,OAAOA,EAASjO,CAAG,CAEvB,CCvHO,MAAMkO,GAAM,CACjB,SAAU,CACR,QAAS,CACP,KAAM,EACP,EACD,cAAe,CACb,QAAS,UACV,EACD,QAAS,CACP,MAAO,SACR,EACD,aAAc,CACZ,aAAc,8BACf,EACD,KAAM,CACJ,MAAO,UACP,QAAS,IACV,EACD,UAAW,CACT,QAAS,KACT,KAAM,CACJ,QAAS,IACjB,CACK,EACD,MAAO,CACL,QAAS,IACV,EACD,UAAW,CACT,MAAO,YACP,MAAO,EACR,EACD,MAAO,CACL,QAAS,IACV,EACD,UAAW,CACT,QAAS,UACV,EACD,WAAY,CACV,QAAS,UACV,EACD,YAAa,CACX,cAAe,GACf,MAAO,UACP,QAAS,GACT,YAAa,GACb,UAAW,EACX,QAAS,KACT,KAAM,CACJ,MAAO,gBACP,QAAS,QACjB,CACK,EACD,WAAY,CACV,QAAS,UACV,EACD,kBAAmB,CAOlB,EACD,aAAc,CACZ,QAAS,WACT,KAAM,CACJ,MAAO,OACP,QAAS,MACjB,CACK,EACD,QAAS,CACP,QAAS,UACV,EACD,QAAS,CACP,MAAO,SACR,EACD,MAAO,CACL,MAAO,SACR,EACD,UAAW,CACT,QAAS,UACV,EACD,WAAY,CACV,QAAS,UACV,EACD,SAAU,CACR,KAAM,CACJ,MAAO,IACf,CACA,CACG,EACD,MAAO,CACL,WAAY,MACZ,KAAM,CACJC,IAAAA,EAAAA,GACN,CACG,EACD,MAAO,CACL,OAAQ,CACN,MAAO,CACL,OAAQ,CACN,QAAS,UACT,UAAW,UACX,SAAU,UACV,MAAO,UACP,QAAS,SACnB,CACA,CACA,CACA,CACA,ECgCaC,GAAQ,CAGnB,SAAU,UAIV,QAAS,SAQX,EA0IeC,EAAA,CAUb,MAAAD,EAWF,EChQO,SAASE,GAAK,CAAC,IAAAC,EAAI,KAAM,GAAAzJ,EAAG,OAAQ,OAAA0J,EAAO,GAAM,GAAG3G,CAAoB,EAAA,GAAI,CAC/E,SAAS4G,GAAU,CACT,MAAAvB,EAAMwB,EAAUH,EAAK1G,CAAO,EAC5BgG,EAAK/I,EAAKoI,EAAI,MAAMpI,CAAE,EAAI,KACvB,gBAAA,KAAK,UAAU,OAAO,SAAS,EACjC,CAAC,IAAAoI,EAAK,GAAApI,EAAI,GAAA+I,CAAE,CAAA,CAGhB,OAAA,IAAI,QAASc,GAAY,CACzB,GAAAH,EACC,OAAO,OAAO,iBACV,OAAQ,IAAMG,EAAQF,EAAS,CAAA,CACnC,EACJE,EAAQF,GAAS,CAAA,CACpB,CACL,CAQO,SAASC,EAAUxB,EAA0B,CAAC,MAAAhI,EAAM,CAAC,EAAG,QAAA4G,EAAQ,CAAA,EAAI,QAAA8C,EAAQ,IAAI,EAAkB,GAAI,CACnG,OAAA1B,EAAA2B,EAAAA,UAAW3B,EAAKhI,CAAK,EACvBgI,EAAA,OAAO,iBAAiB,OAAS,OAEjCA,EAAA,IAAIrB,EAAcC,CAAO,CAAC,EAC9BoB,EAAI,IAAI4B,MAAI,EACJC,UAAA,EAERH,GAAWA,EAAQ,QAAQI,GAAU9B,EAAI,IAAI8B,CAAM,CAAC,EAC7C9B,CACX,CAQgB,SAAArB,EAAc,CAAC,WAAAK,EAAW,CAAC,EAAG,SAAAI,EAAS,CAAC,EAAG,GAAG/H,GAA2B,CACrF,OAAAA,EAAK,WAAa,CACd,GAAG0K,GACH,GAAG/C,CACP,EACOgD,EAAe,CAClB,UAAWhB,GACX,MAAO,CACH,OAAQ,CACJ,MAAO,CACH,KAAM,GACN,OAAQ,CACJ,QAASG,EAAO,MAAM,QACtB,UAAWA,EAAO,MAAM,QAAA,CAC5B,CACJ,CAER,EACA,SAAU,CACN,GAAG/B,EACH,WAAY,CAAE,QAAS,YAAc,EACrC,QAAS,CAAE,QAAS,YAAc,EAClC,UAAW,CAAE,QAAS,UAAY,EAClC,UAAW,CAAE,QAAS,YAAc,EACpC,cAAe,CAAE,QAAS,YAAc,CAC5C,EACA,GAAG/H,CAAA,CACN,CACL,CAQgB,SAAA4K,GAAY,CAAC,YAAAjN,EAAY,KAAM,QAAAkN,EAAQ,IAAI,EAAuB,GAAI,CAC9EA,IACUA,EAAA,SAAS,KAAK,QAAQ,QAEpC,MAAMtN,EAAQuN,EAAAA,YAAa,EACrBC,EAAWC,EAAAA,UAAU,CACvB,QAAS,CACLtN,GAAoB,CAChB,MAAAD,GACA,GAAIE,GAAevB,EAAAA,SAAO,YAC1B,QAAAyO,CACH,CAAA,CAAA,CACL,CACH,EACDI,OAAAA,EAAAA,eAAe1N,CAAK,EACbA,EAAM,IAAIwN,CAAQ,CAC7B,CCnEA,MAAqBG,CAAuB,CAKxC,YAAYnN,EAAqB2B,EAAkB,KAAMM,EAAsB,CAC3E,KAAK,KAAOjC,EACZ,KAAK,MAAQ2B,EACb,KAAK,KAAOM,CAAA,CAgBhB,MAAM,MAAMsD,EAA0B,GAAwB,eAC1DA,EAAU,CAAC,GAAG,KAAK,KAAM,GAAGA,CAAO,EAC/B,GAAA,CAAC,IAAArG,EAAK,GAAAgB,EAAI,IAAAD,EAAK,KAAAD,EAAM,OAAAoN,EAAQ,OAAAC,EAAQ,UAAAC,EAAW,KAAAC,EAAM,GAAGtL,CAAQ,EAAAsD,EAoBlE,GAlBQ6H,MAAA,UACXpN,MAAS,KAAK,OAEXC,GAAA,YAAAA,EAAK,UAAW,IACfC,EAAKD,EAAI,CAAC,EACJA,EAAA,MAGNf,IACAA,GAAMF,GAAAF,EAAAkB,EAAK,MAAL,YAAAlB,EAAU,OAAV,YAAAE,EAAgB,OAAO,CAAC,KAAAuO,EAAM,GAAArN,KAEpCA,EAKA+B,EAAK,QAAU,KAJV,YAAaA,IACdA,EAAK,SAAUuL,GAAAC,GAAA1O,EAAAiB,EAAK,MAAL,YAAAjB,EAAU,SAAV,YAAA0O,EAAkB,WAAlB,YAAAD,EAA4B,SAKhDvN,GAAOmN,IAAW,OAAW,CACzB,GAAAlN,EACC,MAAM,MAAM,iFAAiF,EACjGmN,EAAS,CAAC,GAAIA,GAAU,EAAG,EAC3BA,EAAOD,CAAM,EAAI,CAAC,GAAGnN,CAAG,CAAA,CAEtB,MAAA3B,EAAW,MAAM0B,EAAK,IAAI,EAAE,IAAId,EAAK,CAAC,GAAG+C,EAAM,OAAAoL,EAAO,EAC5D,OAAGpL,EAAK,OAAS,KACJ3D,EAAA,SAAW,KAAK,YAAYA,CAAQ,GAE9CgP,IACChP,EAAS,UAAY,MAAM,KAAK,UAAUA,EAAS,SAAUgP,EAAW,CAAC,GAAGrL,EAAM,OAAQ,GAAG,GAC1F3D,CAAA,CAIX,YAAYA,EAAU,CACZ,MAAAE,EAAOF,EAAS,oBAAoB,EACvC,OAAA,MAAM,QAAQE,CAAI,EACVA,EAAK,IAAKkP,GAAQ,KAAK,KAAK,KAAKA,CAAG,CAAC,EAErC,CAAC,KAAK,KAAK,KAAKlP,CAAI,CAAC,CAAA,CAWpC,MAAM,IAAI,CAAC,QAAAmP,EAAQ,OAAQ,MAAAC,EAAM,GAAI,MAAAC,EAAM,GAAO,GAAG5L,CAAI,EAAkB,CAAA,EAAwB,CACzF,MAAAvD,EAAS,MAAM,KAAK,MAAM,CAAC,MAAAmP,EAAO,GAAG5L,EAAK,EAEhD,IAAI/C,EAAMR,EAAO,SAAS,KAAKiP,CAAO,EACtC,KAAMzO,GAAK,CACD,MAAA4O,EAAU,MAAM,KAAK,MAAM,CAAC,GAAG7L,EAAM,IAAA/C,EAAI,EAK/C,GAJG4O,EAAQ,WACApP,EAAA,SAAWA,EAAO,WAAa,KAAOA,EAAO,SAAS,OAAOoP,EAAQ,QAAQ,EAAIA,EAAQ,UAC9F5O,EAAA4O,EAAQ,SAAS,KAAKH,CAAO,EAChCC,EAAM,GAAGA,IACT,CAACA,EAAO,KAAA,CAER,OAAAlP,CAAA,CAUX,MAAM,QAAQ6G,EAAwB,GAA4B,CAE3D,OADUA,EAAQ,MAAQ,KAAK,MACzB,MAAM,EAER,KADI,MAAM,KAAK,IAAIA,CAAO,CAC1B,CAWX,MAAM,UAAUwI,EAAW7P,EAAkB+D,EAAO,CAAA,EACpD,OACI,KAAK,aAAa,WAAW,EAC7B,MAAM+L,EAAoC,CAAC,EACrCV,GAAYxO,EAAA,KAAK,KAAK,MAAV,YAAAA,EAAe,SAC9B,GAAAwO,EACC,UAAU1M,KAAS1C,EAAQ,CACjB,MAAAyC,EAAW2M,EAAU1M,CAAK,EAChC,GAAGD,aAAoBE,EAAA,SACnBmN,EAASpN,CAAK,EAAI,MAAM,KAAK,SAASmN,EAAMpN,EAAUsB,CAAI,MAEpD,OAAA,MAAM,SAASrB,CAAK,oBAAoB,CAAA,CAEnD,OAAAoN,CAAA,CAGD,aAAaC,EAAkB,CACrC,GAAG,CAAC,KAAK,MACC,MAAA,MAAM,gEAAgEA,CAAQ,GAAG,CAAA,CAW/F,MAAM,SAASF,EAAgBpN,EAA6B4E,EAAuB,CAAA,EAAwB,CACvG,KAAK,aAAa,WAAW,EAE7B,MAAM2I,EAAMxN,EAAW,KAAK,KAAMC,CAAQ,EAC1C,GAAG,CAACuN,EACM,MAAA,MAAM,+BAA+BvN,CAAQ,GAAG,EAEpD,MAAAjD,EAAqBwQ,EAAI,QAAQ,YAAa,OAC9CC,EAAQ,KAAK,MAAMzQ,CAAG,EAC5B,GAAG,CAACyQ,EACM,MAAA,MAAM,kBAAkBzQ,CAAG,UAAU,EAEzC,MAAA0Q,EAAKtN,EAAaoN,CAAG,EAC3B,GAAG,CAACE,EACM,MAAA,MAAM,gCAAgCzN,CAAQ,GAAG,EACrD,MAAAV,EAAM,CAAC,GAAI,IAAI,IAAIoO,EAAAA,YAAYN,EAAMK,CAAE,CAAC,CAAC,EAExCE,OADO,IAAInB,EAAMgB,EAAO,KAAK,KAAK,EAC5B,IAAI,CAAC,GAAG5I,EAAS,IAAAtF,EAAK,KAAMkO,EAAM,CAAA,CAGvD,CAKO,SAASG,GAAuBtO,EAA4B2B,EAAeM,EAAsB,KAAgB,CACjH,GAAA,OAAOjC,GAAQ,SAAU,CACxB,GAAG,EAAEA,KAAQ2B,GACH,MAAA,MAAM,eAAe3B,CAAI,4CAA4C,EAC/E,OAAO,IAAImN,EAAMxL,EAAM3B,CAAI,EAA+B2B,EAAOM,CAAI,CAAA,CAEzE,OAAO,IAAIkL,EAAMnN,EAAM2B,EAAOM,CAAI,CACtC,CC7MA,MAAqBsM,CAAoD,CAIrE,YAAYhJ,EACZ,CAJAhH,EAAA,aAAQ8D,QAAM,KAAK,GACnB9D,EAAA,aAAiC,CAAC,GAInBgH,GAAAiJ,EAAAA,eAAe,KAAMjJ,CAAO,EACnC,KAAK,QACA,KAAA,MAAQ,IAAIlD,SAErB,KAAK,QAAL,KAAK,MAAU,CAAC,GAChB,KAAK,QAAL,KAAK,MAAU,CAAC,GAChB,KAAK,UAAL,KAAK,QAAY,KAAK,MAAM,SAAW,KAAK,OAC5C,KAAK,MAAQ,GACR,KAAA,MAAM,KAAK,OAAO,CAAA,CAG3B,IAAI,MAAe,CAAE,OAAO,KAAK,MAAM,IAAA,CACvC,IAAI,KAAmB,CAAE,OAAO,KAAK,MAAM,GAAA,CAE3C,IAAI,QAAe,CACf,OAAO,KAAK,MAAM,SAAW,KAAK,MAAM,MAAQ,IAAA,CAGpD,MAAMzB,EAAgC,OAClC,MAAMpC,EAAO,KAAK,MAAM,WAAWM,EAAA,KAAK,MAAM,OAAX,YAAAA,EAAkB8B,IAClD,OAAApC,GACQ,KAAK,QAAQoC,CAAK,GAAK,KAAK,MAAMA,CAAK,GAAKpC,EAAK,KAAK;AAAA,CAAI,GAAK,EACnE,CAIX,SAAU,CACD,KAAA,MAAM,KAAK,OAAO,CAAA,CAO3B,MAAM8D,EAAgB,KAAM,CACxBmM,EAAAA,MAAM,KAAK,MAAOnM,GAAS,KAAK,KAAK,EACrC,KAAK,MAAM,KAAK,CAAA,CAIpB,UAAoB,CAChB,MAAO,CAAC2F,EAAAA,cAAAA,QAAQ,KAAK,MAAO,KAAK,OAAO,CAAA,CAY5C,MAAM,KAAK3F,EAAyB,KAAM+K,EAAc,CAAA,EAAoB,OAGxE,GAFA,KAAK,MAAM,WAAW,EAEnB,KAAK,QAAU,GACP,OAAA,KAAK,MAAM,MAAM,CACpB,EAAK,sCAAA,CACR,EAEL/K,MAAU,KAAK,OACZA,aAAiB,SAChB+K,EAAO,QAAU,CACb,GAAGqB,EAAAA,SAAO,YAAY,QACtB,eAAgB,sBAChB,GAAGrB,EAAO,OACd,EAEQ/K,EAAA,KAAK,UAAUA,CAAK,EAEhC,MAAMqM,EAAQ,MAAM,KAAK,KAAKrM,EAAO+K,CAAM,EAC3C,OAAGsB,EAAM,MACA,KAAA,MAAMA,EAAM,KAAW,EAAI,EAC3B,KAAA,QAAUC,0BAAU,KAAK,KAAK,GAC9B9P,EAAA,KAAA,QAAA,MAAAA,EAAA,UAAQ,KAAK,QAGlB,KAAK,MAAQ6P,EACV,KAAK,KAAA,CAShB,MAAME,EAAS,UACN7P,GAAAF,EAAA,KAAA,OAAM,QAAN,MAAAE,EAAA,KAAAF,EAAc+P,EAAM,KAAI,CAIjC,UAAavM,EAAe,CAAS,OAAAA,CAAA,CAGrC,MAAM,KAAKwM,EAAoBzB,EAAuB,CAC5C,KAAA,iBAAA,CAEd,CC9FA,MAAqB0B,EACrB,CAyBI,YAAYxJ,EAA0B,KAAM,CAxB5ChH,EAAA,aAAgB,cAChBA,EAAA,YAAe,IACfA,EAAA,aAAa,MACbA,EAAA,YAAY,MACZA,EAAA,oBAA4B,KAM5BA,EAAA,mBAAc,iBAeCgH,GAAAiJ,EAAAA,eAAe,KAAMjJ,CAAO,EAClC,KAAA,OAAA,KAAA,KAAS,KAAK,OAAS,GAAA,CAbhC,IAAI,MAAe,OAAS,QAAAzG,EAAA,KAAK,QAAL,YAAAA,EAAY,OAAQ,EAAA,CAGhD,IAAI,QAAkB,OAAS,MAAA,CAAC,GAACA,EAAA,KAAK,WAAL,MAAAA,EAAe,KAAA,CAGhD,IAAI,MAAe,OAAS,QAAAA,EAAA,KAAK,QAAL,YAAAA,EAAY,OAAQ,IAAA,CAGhD,IAAI,OAAgB,OAAE,OAAOA,EAAA,KAAK,QAAL,YAAAA,EAAY,KAAA,CAQzC,cAAwB,CACpB,MAAMuO,EAAS,CAAC,MAAO,KAAK,IAAI,EAC7B,OAAA,KAAK,MAAQ,KAAK,QACjBA,EAAO,KAAO,KAAK,MACpB,KAAK,KAAK,WAAW,SAAS,GAAK,KAAK,QACvCA,EAAO,MAAQ,KAAK,OACjBA,CAAA,CAKX,WAAWpO,EAAc+P,EAAiB,CACnCA,EAAQ,KAAK,SAAS,IAAI/P,CAAI,EAC5B,KAAK,SAAS,OAAOA,CAAI,CAAA,CAOlC,KAAK,CAAC,KAAAgQ,EAAK,KAAM,MAAA3M,EAAM,KAAM,OAAA4M,EAAO,GAAO,MAAAC,EAAM,EAAA,EAAwE,CAAA,EAAI,CACrH,OAAAF,GAAQ,KAAK,MAAQ3M,GAAS,KAAK,SAAW6M,GAAS,KAAK,QAAY,IACnE,KAAA,KAAOF,GAAQ,KAAK,MACzB,KAAK,MAAQ3M,EACZ,CAAA4M,GAAU,KAAK,eAAe,EACxB,IAEJ,EAAA,CAIX,gBAAiB,CACP,MAAA7B,EAAS,KAAK,aAAa,EACjC,GAAGA,EAAQ,CACP,MAAMnO,EAAO,IAAI,gBAAgBmO,CAAM,EAAG,SAAS,EACnD,QAAQ,UAAUA,EAAQ,GAAI,IAAInO,CAAG,EAAE,CAAA,CAC3C,CAUJ,SAAU,CACN,GAAG,CAAC,KAAK,OACE,MAAA,GAEL,MAAAkQ,EAAMxR,EAAAA,EAAE,KAAK,WAAW,EAC9B,OAAO,QAAQwR,CAAG,CAAA,CAE1B,CCjIA,MAAqBC,EAAO,CAOxB,YAAY9J,EAAwB,KAAM,CAN1ChH,EAAA,aAAgB,IAChBA,EAAA,cAA8B,CAAC,GAC/BA,EAAA,oBAAuB,IACvBA,EAAA,gBAAiC,CAAC,GAClCA,EAAA,gBAGegH,GAAAiJ,EAAAA,eAAe,KAAMjJ,CAAO,CAAA,CAM3C,sBAAuB,CACnB,KAAK,aAAe,SAAS,SAAS,OAAO,UAAU,CAAC,EACxD,MAAM+J,EAAS,IAAI,gBAAgB,KAAK,YAAY,EAC9C,CAAC,MAAAC,EAAO,GAAGlC,GAAU,OAAO,YAAYiC,EAAO,SAAS,EAC9D,KAAK,MAAQC,EACR,KAAA,OAASlC,GAAU,CAAC,CAAA,CAI7B,OAAO,SAASE,EAAwB,CACpC,GAAG,CAACA,EACA,MAAO,CAAC,MAAO,GAAI,KAAM,EAAE,EAEzB,MAAA9M,EAAM8M,EAAK,QAAQ,GAAG,EAC5B,OAAG9M,EAAM,EACE,CAAC,MAAO8M,EAAM,KAAM,EAAE,EAC1B,CAAC,MAAOA,EAAK,UAAU,EAAG9M,CAAG,EAAG,KAAM8M,EAAK,UAAU9M,EAAI,CAAC,CAAC,CAAA,CAItE,SAASxB,EAAcuQ,EAAc,CAC7B,KAAK,SAASvQ,CAAI,IACb,KAAA,SAASA,CAAI,EAAIuQ,EAGnB,KAAK,OAASA,EAAM,OACnB,KAAK,QAAUA,EACTA,EAAA,KAAK,KAAK,MAAM,GAE9B,CAIJ,WAAWvQ,EAAc,CACd,OAAA,KAAK,SAASA,CAAI,CAAA,CAQ7B,KAAK,CAAC,MAAAkQ,EAAM,GAAO,KAAAM,EAAK,KAAM,GAAGlK,GAAsB,CAEnD,GADgB4J,GAAS,CAAC,KAAK,SAAW,KAAK,QAAQ,QAAQ,EAI/D,IAAGM,GAAQ,OAAO,SAAS,UAAYA,EAAM,CACzC,GAAG,CAAClK,EAAQ,MACR,MAAM,MAAM,uCAAuC,EAEvDkK,EAAO,GAAGA,CAAI,UAAUlK,EAAQ,KAAK,GAClCA,EAAQ,OACPkK,EAAO,GAAGA,CAAI,SAASlK,EAAQ,MAAQ,EAAE,IAC7C,OAAO,SAAS,KAAOkK,EACvB,MAAA,CAGJ,KAAK,MAAMlK,CAAO,EAAA,CAGtB,MAAM,CAAC,MAAAgK,EAAO,OAAAL,EAAO,GAAO,GAAG7B,GAAkB,OACvBkC,GAASA,GAAS,KAAK,OAC1B,KAAK,SACjB,CAAC,KAAK,QAAQ,QAAQ,IAIxB,KAAA,MAAQA,GAAS,KAAK,MAC3B,KAAK,OAASlC,EAGd,KAAK,QAAU,KAAK,SAAS,KAAK,KAAK,GACvCvO,EAAA,KAAK,UAAL,MAAAA,EAAc,KAAK,CAAC,GAAG,KAAK,OAAQ,OAAAoQ,IAAO,CAEnD,CCvEA,MAAqBQ,EAAwD,CAUzE,YAAYnK,EAAoC,KAAM,CATtDhH,EAAA,aAAQ8D,QAAM,KAAK,GACnB9D,EAAA,YAAO,IASQgH,GAAAiJ,EAAAA,eAAe,KAAMjJ,CAAO,CAAA,CAN3C,IAAI,MAAsB,CAAE,OAAO,KAAK,MAAM,IAAA,CAG9C,IAAI,OAAsB,CAAE,OAAQ,KAAK,KAAK,GAAA,CAY9C,SAAStF,EAA0B,KAAM8D,EAAM,GAAmB,CAC1D,IAAAuK,EAAQ,KAAK,KAAK,MAAM,EAC5B,GAAG,KAAK,UACJ,UAAU3N,KAAY,KAAK,UACf2N,EAAAA,EAAM,KAAK3N,CAAQ,EAEnC,OAAGV,IAAQ,OACCqO,EAAAA,EAAM,QAAQrO,CAAG,GAEtB8D,EAAQuK,EAAM,MAAA,EAAUA,CAAA,CAenC,MAAM,KAAK/I,EAA0B,GAA4B,CAC7D,KAAK,MAAM,WAAW,EACtB,IAAIjH,EAAW,KACX,GAAA,CACWA,EAAA,MAAM,KAAK,MAAMiH,CAAO,EACnCjH,EAAW,MAAM,KAAK,eAAeiH,EAASjH,CAAQ,QAEpDqR,EAAO,CACT,QAAQ,IAAIA,CAAK,EACZ,KAAA,MAAM,MAAMA,CAAK,CAAA,CAEvB,OAAC,KAAK,MAAM,SACX,KAAK,MAAM,KAAK,EACbrR,CAAA,CASX,MAAM,MAAMiH,EAA0B,GAAwB,CACpD,MAAAtD,EAAO,KAAK,gBAAgBsD,CAAO,EACzC,OAAO,MAAM,KAAK,MAAM,MAAMtD,CAAI,CAAA,CAItC,MAAM,eAAesD,EAAyBjH,EAAuC,CAE1E,OAAAA,CAAA,CAID,gBAAgBiH,EAAyC,CAC/D,MAAG,CAACA,EAAQ,WAAa,KAAK,WAAa,KAAK,iBAC5CA,EAAQ,UAAY,KAAK,WAGzBA,EAAQ,MACRA,EAAQ,IAAM,KAAK,KAClB,SAAUA,IACXA,EAAQ,KAAO,KAAK,MACjBA,CAAA,CAEf,CC1EA,MAAqBqK,WAAmCF,EAAkC,CAkBtF,eAAexM,EAAM,CACjB,MAAM,GAAGA,CAAI,EAfjB3E,EAAA,WAAiB,CAAC,GAClBA,EAAA,eAAmB,CAAC,GACpBA,EAAA,eAAuB,MACvBA,EAAA,eAAuB,MACvBA,EAAA,aAAqB,MACrBA,EAAA,iBAAyB,MAEzBA,EAAA,eAAU,WACVA,EAAA,eAAU,QACVA,EAAA,eAAU,YACVA,EAAA,gBAAW,QAKM,CAHjB,IAAI,QAAS,CAAE,OAAO,KAAK,IAAI,MAAA,CAQ/B,QAAQ2B,EAAY,CAAS,OAAA,KAAK,IAAI,QAAQA,CAAE,CAAA,CAGhD,MAAO,CAEH,KAAK,IAAM,CAAC,CAAA,CAIhB,MAAMD,EAAiB,GAAI,CAEvB,KAAK,IAAMA,EACX,KAAK,QAAU,KACf,KAAK,QAAU,KACV,KAAA,MAAQ,KAAK,IAAI,MAAA,CAY1B,IAAIC,EAAa2P,EAAiB,KAAc,CAC5C,MAAMpP,EAAM,KAAK,IAAI,QAAQP,CAAE,EAC/B,OAAGO,GAAO,GACCA,EAGRoP,IAAU,MACT,KAAK,IAAI,OAAOA,EAAO,EAAI3P,CAAE,EACtB2P,IAEN,KAAA,IAAI,KAAK3P,CAAE,EACT,KAAK,IAAI,OAAO,EAAA,CAI3B,OAAOA,EAAa,CACJ,KAAK,IAAI,QAAQA,CAAE,GACrB,IACD,KAAA,IAAI,OAAO,MAAO,CAAC,CAE5B,CAUJ,gBAAgB2O,EAAciB,EAAsB,CAChD,GAAGjB,IAAS,KACD,MAAA,GAEX,MAAMgB,EAAQ,KAAK,IAAI,QAAQhB,EAAK,EAAE,EAChCkB,EAAUF,GAAS,EAAIA,EAAMC,EAAO,GAC1C,OAAOC,GAAW,GAAKA,EAAU,KAAK,IAAI,OAASA,EAAU,EAAA,CAMjE,MAAM,SAASxK,EAAgD,CACpD,OAAA,MAAM,KAAK,KAAK,CAAC,GAAGA,EAAS,IAAK,KAAK,QAAQ,CAAA,CAM1D,MAAM,SAASA,EAAgD,CACpD,OAAA,MAAM,KAAK,KAAK,CAAC,GAAGA,EAAS,IAAK,KAAK,QAAQ,CAAA,CAGhD,gBAAgBA,EAAyC,CAC5D,MAAA,EAAE,YAAaA,IAAY,KAAK,UACvBA,EAAA,OAAS,CAAC,GAAG,KAAK,QAAS,GAAIA,EAAQ,QAAU,EAAG,GAC7D,KAAK,YACJA,EAAQ,OAAS,CAAC,GAAGA,EAAQ,OAAQ,UAAW,KAAK,SAAS,GAC3D,MAAM,gBAAgBA,CAAO,CAAA,CASxC,MAAM,eAAe,CAAC,OAAAyK,EAAO,GAAO,GAAGzK,GAA8BjH,EAAuC,CAExG,GADAA,EAAW,MAAM,MAAM,eAAeiH,EAASjH,CAAQ,EACpD,CAAC,KAAK,MAAM,SAAWiH,EAAQ,OAAS,GAAO,CAC9C,MAAMtF,EAAMgQ,EAAA,cAAA,IAAI3R,EAAS,SAAU,IAAI,EAClC,KAAA,OAAO2B,EAAK+P,CAAM,EACvB,KAAK,QAAU1R,EAAS,SAAS,KAAK,KAAK,OAAO,GAAK,KACvD,KAAK,QAAUA,EAAS,SAAS,KAAK,KAAK,OAAO,GAAK,KAClD,KAAA,MAAQA,EAAS,SAAS,KAAK,KAAK,QAAQ,GAAK,KAAK,IAAI,MAAA,CAE5D,OAAAA,CAAA,CAMX,OAAO2B,EAAiB+P,EAAwB,GAAO,CAChD,OAAOA,GAAU,SAChB,KAAK,IAAI,OAAOA,EAAQ,EAAG,GAAG/P,CAAG,EAC7B+P,GAAU,KAAK,IAAI,OACvB,KAAK,IAAME,EAAAA,cAAAA,MAAM,KAAK,IAAKjQ,CAAG,EAE9B,KAAK,IAAMA,CAAA,CAEvB,CCtKA,MAAqBkQ,WAAqE5B,CAAY,CAClG,YAAYhJ,EAAwB,CACxBA,EAAA,OAAS,OAAO,KAAMA,EAAQ,MAAM,KAAK,IAAqB,QAAQ,EAC9EA,EAAQ,QAARA,EAAQ,MAAU,IAAIA,EAAQ,MAAM,KAAK,KACzC,MAAMA,CAAO,CAAA,CAGjB,IAAI,MAAO,CAAE,OAAO,KAAK,MAAM,IAAA,CAC/B,IAAI,MAAO,CAAE,OAAO,KAAK,MAAM,MAAQ,GAAG,KAAK,KAAK,IAAI,MAAM,OAAA,CAC9D,UAAoB,CAChB,MAAO,CAAC0C,EAAAA,cAAAA,QAAQmI,EAAAA,cAAAA,KAAK,KAAK,MAAO,KAAK,MAAM,EAAGA,EAAK,cAAA,KAAA,KAAK,QAAS,KAAK,MAAM,CAAC,CAAA,CAGlF,IAAI,KAAc,SACd,MAAMlR,EAAM,MAAM,OAAQF,GAAAF,EAAA,KAAK,KAAK,MAAV,YAAAA,EAAgC,OAAhC,YAAAE,EAAsC,KAChE,GAAG,CAACE,EACA,MAAM,MAAM,iDAAiD,EAC1D,OAAAA,CAAA,CAGX,MAAMoD,EAAqB,EACpB,CAACA,GAAS,CAAC,OAAO,KAAKA,CAAK,EAAE,UAC7BA,EAAQ,KAAK,OAEjB,MAAMpE,EAAS,KAAK,OAAO,OAAOF,GAAKA,KAAKsE,CAAK,EACjD,KAAK,MAAQsM,0BAAUwB,EAAAA,cAAAA,KAAK9N,EAAOpE,CAAM,CAAC,GAAK,CAAC,EAChD,KAAK,MAAM,KAAK,CAAA,CAGpB,UAAUoE,EAA8B,CAC9B,MAAA+N,EAAM,KAAK,KAAK,IAEtB,OADY,IAAIA,EAAI,CAAC,GAAG,KAAK,MAAM,EACxB,QAAQ,KAAM,CAAC,UAAW,GAAM,CAAA,CAG/C,MAAM,KAAK/N,EAAkC+K,EAAiB,GAAY,CACtE,GAAI,CAACiD,EAAMpR,CAAG,EAAI,CAAC,OAAQ,KAAK,GAAG,EAChC,OAAA,KAAK,MAAM,KACVA,EAAM,GAAGA,CAAG,GAAG,KAAK,MAAM,EAAE,IACrBoR,EAAA,OAEJ,MAAM,KAAK,KAAK,IAAI,EAAEA,CAAI,EAAEpR,EAAKoD,EAAO+K,CAAM,EAAE,KAClD3O,GAAqB2D,EAAAA,MAAM,GAAG3D,EAAO,SAAS,CAAC,CAAC,EAChDiR,GAAoBtN,EAAA,MAAM,MAAMsN,EAAM,SAAS,IAAI,CACxD,CAAA,CAER,CCtBA,MAAqBY,WAGXxB,EACV,CAGI,YAAYxJ,EAA2B,OACnC,MAAMA,CAAO,EAHjBhH,EAAA,mBAAuB,IAId,KAAA,cAAcO,EAAA,KAAK,QAAL,YAAAA,EAAY,cAAe,EAAA,CAIlD,IAAI,MAAsB,CAAE,OAAO,KAAK,MAAM,IAAA,CAG9C,IAAI,OAAsB,CAAE,OAAQ,KAAK,KAAK,GAAA,CAG9C,IAAI,OAAkB,CAAE,OAAO,KAAK,KAAK,KAAA,CAGzC,IAAI,MAAe,OAAE,OAAO,MAAM,QAAQA,EAAA,KAAK,MAAM,OAAX,YAAAA,EAAiB,KAAA,CAG3D,IAAI,OAAgB,aACV,KAAA,CAAC,MAAA8D,EAAO,KAAA4N,CAAA,EAAQ,KAChBpP,EAAQ,KAAK,KAAK,IACxB,GAAGA,EAAO,CAEH,IAAAtC,EAAA,KAAK,OAAL,MAAAA,EAAW,WAAW,SACrB,OAAOlB,EAAE,EAAA6S,EAAA,MAAM,MAAMrP,CAAK,EAAG,CAAC,EAElC,IAAGpC,EAAA,KAAK,OAAL,MAAAA,EAAW,WAAW,WAAY,CACjC,IAAGD,EAAA,KAAK,QAAL,MAAAA,EAAY,OACX,OAAO,KAAK,MAAM,OAEtB,MAAME,EAAOrB,EAAA,EAAE6S,EAAM,MAAA,MAAMrP,CAAK,CAAC,EACjC,OAAOqM,EAAA,KAAK,QAAL,MAAAA,EAAY,GACb7P,EAAAA,EAAE,iBAAkB,CAAC,MAAOqB,EAAM,GAAI,KAAK,MAAM,EAAG,CAAA,EACpDrB,EAAA,EAAE,qBAAsB,CAAC,MAAOqB,EAAK,CAAA,CAC/C,CAEJ,OAAO,MAAM,KAAA,CAGjB,cAAe,CACX,KAAM,CAAC,MAAAqD,EAAM,KAAM,GAAG+K,CAAM,EAAI,MAAM,aAAa,EACnD,OAAG/K,GAAA,MAAAA,EAAO,KACN+K,EAAO,GAAK/K,EAAM,IACf+K,CAAA,CAQX,OAAO4B,EAAa,cAAe,CAC/B,KAAK,KAAK,CAAC,KAAAA,EAAM,MAAO,KAAK,CAAA,CAIjC,QAAQ3M,EAAU2M,EAAa,cAAe,CAE1C,KAAK,KAAK,CAAC,KAAAA,EAAM,MAAA3M,CAAA,CAAM,CAAA,CAG3B,KAAK,CAAC,GAAApC,EAAG,KAAM,GAAGmN,GAAiD,CAC/D,GAAGnN,EACCoO,GAAM,KAAK,IAAI,EAAE,MAAM,CAAC,GAAApO,EAAI,UAAW,KAAK,SAAU,CAAA,EAAE,KAAUwQ,IACxD,MAAA,KAAK,CAAC,GAAGrD,EAAQ,MAAOqD,EAAE,SAAS,CAAC,EAAE,EACrCA,EACV,MAGM,QAAA,MAAM,KAAKrD,CAAM,CAAA,CAEpC,CClGO,SAASsD,GAAUpL,EAAkB,CACxC,MAAMqL,EAASzO,EAAA,SAAS,IAAIkN,GAAO9J,CAAO,CAAC,EAC3CxD,EAAA,QAAQ,SAAU6O,CAAM,EAExBC,EAAAA,UAAU,IAAM,CACZD,EAAO,qBAAqB,EACrBA,EAAA,OAASA,EAAO,KAAK,CACxB,MAAOA,EAAO,MAAO,OAAQ,GAC7B,GAAGA,EAAO,MAAA,CACb,CAAA,CACJ,EAEM,OAAA,iBAAiB,WAAaE,GAAU,CACxCA,EAAM,OACLF,EAAO,KAAK,CAAC,GAAGE,EAAM,MAAO,OAAQ,GAAK,CAAA,CACjD,EAGD,MAAMC,EAAe,SAAS,MAC9BzH,OAAAA,EAAAA,MAAM,IAAA,OAAM,OAAAxK,EAAA8R,EAAO,UAAP,YAAA9R,EAAgB,OAAQnB,GAAQ,CACrCA,EACC,SAAS,MAAQ,GAAGA,CAAG,MAAMoT,CAAY,GAEzC,SAAS,MAAQA,CAAA,CACxB,EAEMH,CACX,CAQgB,SAAAI,GAAgCzL,EAAoB8K,EAAsB,CACtF,MAAMd,EAAQpN,EAAA,SAAS,IAAIkO,EAAI9K,CAAO,CAAC,EAEvCxD,OAAAA,EAAA,QAAQ,QAASwN,CAAK,EACtBsB,EAAA,UAAU,IAAMtB,EAAM,OAAO,SAASA,EAAM,KAAMA,CAAK,CAAC,EACxD0B,EAAA,YAAY,IAAM1B,EAAM,OAAO,WAAWA,EAAM,IAAI,CAAC,EAG9C,CAAC,MAAAA,CAAK,CACjB,CAIO,SAAS2B,GACZ,CAAC,MAAA5C,EAAO,MAAA3M,EAAO,GAAG4D,GAEtB,CACI5D,MAAUC,SAAO,OAAO,GACxB0M,MAAU,IAAInB,EAAM5H,EAAQ,MAAM,KAAM5D,CAAK,GACrC4D,EAAA,SAAAA,EAAA,OAAW3D,SAAO,QAAQ,GAElC,KAAM,CAAC,KAAA4O,EAAM,MAAAW,CAAK,EAAIC,GAAa,CAC/B,MAAA9C,EACA,UAAW/I,EAAQ,MAAM,UACzB,eAAgBA,EAAQ,MAAM,cAAA,CACjC,EACK,CAAC,MAAAgK,GAASyB,GAAS,CAAC,KAAAR,EAAM,GAAGjL,CAAO,EAAGgL,EAAU,EAEjDc,EAAOjP,EAAAA,SAAS,IAAM,CACxB,MAAMyN,EAAQW,EAAK,gBAAgBc,QAAM/B,EAAM,KAAK,EAAG,CAAC,EACjD,OAAA4B,EAAM,MAAMtB,CAAK,GAAK,IAAA,CAChC,EACK0B,EAAOnP,EAAAA,SAAS,IAAM,CACxB,MAAMyN,EAAQW,EAAK,gBAAgBc,QAAM/B,EAAM,KAAK,EAAG,EAAE,EAClD,OAAA4B,EAAM,MAAMtB,CAAK,GAAK,IAAA,CAChC,EAEM,MAAA,CAAC,OAAQN,EAAM,OAAQ,MAAAA,EAAO,KAAAiB,EAAM,MAAAW,EAAO,KAAAE,EAAM,KAAAE,CAAI,CAChE,CAKgB,SAAAH,GAA8B7L,EAAyB8K,EAAwBT,GAC/F,CACI,MAAMY,EAAOrO,EAAA,SAAS,IAAIkO,EAAI9K,CAAO,CAAC,EAChCiM,EAAShB,EAAK,KAAK,KAAK,WAAW,EAOnCW,EAAQ/O,EAAAA,SAAS,IAAMoO,EAAK,SAASA,EAAK,GAAG,EAAE,QAAQtQ,GAAMsQ,EAAK,IAAI,QAAQtQ,CAAE,CAAC,EAAE,KAAK,EAG9FoJ,OAAAA,EAAAA,MAAM,IAAMkH,EAAK,IAAK,CAAC7S,EAAK8T,IAAQ,CAC5BxJ,EAAQ,cAAA,QAAAyJ,EAAA,MAAM/T,CAAG,EAAG+T,EAAAA,MAAMD,CAAG,CAAC,GAC9BjB,EAAK,KAAK,KAAK,eAAegB,EAAQC,EAAK9T,CAAG,CAAA,CACrD,EACDsT,EAAA,YAAY,IAAMT,EAAK,KAAK,KAAK,MAAMgB,CAAM,CAAC,EAE9CzP,EAAA,QAAQ,OAAQyO,CAAI,EACpBzO,EAAA,QAAQ,QAASoP,CAAK,EACf,CAAC,KAAAX,EAAM,MAAAW,EAAO,OAAAK,CAAM,CAC/B,CAMO,SAASG,GAA0B3R,EAAqB2B,EAAkB,KAAMM,EAAsB,CACzG,MAAMqM,EAAQ,IAAInB,EAAMnN,EAAM2B,EAAOM,CAAI,EACnC0M,EAAQtM,QAAM,KAAK,EAEzB,eAAeuP,EAAM3P,EAAsB,CACvC0M,EAAM,WAAW,EACjB,IAAIkD,EAAO,KACP,GAAA,CACOA,EAAA,MAAMvD,EAAM,MAAMrM,CAAI,EAC7B0M,EAAM,KAAK,QAETgB,EAAO,CACThB,EAAM,MAAMgB,CAAK,CAAA,CAEd,OAAAkC,CAAA,CAEJ,MAAA,CAAC,MAAAlD,EAAO,MAAAL,EAAO,MAAAsD,CAAK,CAC/B,CAUgB,SAAAE,GAIZvM,EACA8K,EAAwB9B,EAE5B,CACoBhJ,EAAQ,SAAWA,EAAQ,MAAM,QACjD,MAAMwM,EAAS5P,EAAA,SAAS,IAAIkO,EAAI9K,CAAO,CAAC,EAExCxD,EAAA,QAAQ,SAAUgQ,CAAM,EAExB,MAAM/C,EAAS5M,EAAA,SAAS,IAAM2P,EAAO,UAAU,EAC/CzI,EAAAA,MAAM,IAAMyI,EAAO,MAAM,QAAUpU,GAAQ,CAChCoU,EAAA,QAAUpU,GAAOoU,EAAO,MACxBA,EAAA,MAAMpU,GAAOoU,EAAO,KAAK,CAAA,CACnC,EAEK,MAAAxC,EAAQ3N,SAAO,OAAO,EACzB,OAAA2N,GACOjG,EAAAA,MAAA,IAAMyI,EAAO,OAASpU,GAAiB4R,EAAM,WAAWwC,EAAO,KAAMpU,CAAG,CAAC,EAE5E,CAAC,OAAAoU,EAAQ,OAAA/C,CAAM,CAC1B,CAGgB,SAAAgD,GAIZzM,EACA8K,EAA+BF,GAEnC,CACW,OAAA2B,GAAUvM,EAAS8K,CAAG,CACjC,CCzMA,MAAe4B,GAAA,CAEX,SAAS3P,EAAO,CACL,OAAAA,EAAQ,GAAO1E,EAAA,EAAE,mBAAmB,CAC/C,EAKA,OAAOsU,EAAW,CACd,MAAO,IAAOA,GAAA,MAAAA,EAAW,OAASA,EAAU,KAAK,MAAM,GAAK,GAAQ,EACxE,EAQA,SAASC,EAAM,CACX,OAAQ7P,GACG,CAACA,GAAS6P,EAAK7P,CAAK,CAEnC,EAGA,MAAMA,EAAO,CAET,MADgB,uHACD,KAAKA,CAAK,GAAK1E,EAAAA,EAAE,mBAAmB,CACvD,EAGA,SAAS0E,EAAO,CAEL,MADS,uBACD,KAAKA,CAAK,GAAK,iGAAA,CAEtC,EC1BgB,SAAA8P,GAAqBlT,EAAaD,EAAc,CAC5D,OAAOoT,uBAAsB,IAClB,OAAOnT,GAAK,KAAYoT,GACvBrT,GAEJ,QAAQ,IAAIqT,EAAKA,EAAI,WAAY,OAAO,KAAKA,CAAG,CAAC,EACrC,OAAO,OAAOA,CAAG,EAAE,OAAQC,GAA0BA,EAAE,QAAUtT,CAAI,EAAE,CAAC,GAFzEqT,CAId,CACJ,CACL","x_google_ignoreList":[1,7,8,9,10,11]}
