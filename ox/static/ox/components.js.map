{"version":3,"file":"components.js","sources":["../../../assets/ox/src/components/OxAction.vue","../../../assets/ox/src/components/OxActionModelDelete.vue","../../../assets/ox/src/components/OxActions.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js","../../../assets/ox/src/components/OxApp.vue","../../../assets/ox/src/components/OxComponent.vue","../../../assets/ox/src/components/OxFieldDetails.vue","../../../assets/ox/src/components/OxListFilters.vue","../../../assets/ox/src/components/OxFormList.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroupItem.js","../../../assets/ox/src/components/OxListKanban.vue","../../../assets/ox/src/components/OxListTable.vue","../../../assets/ox/src/components/OxStateAlert.vue","../../../assets/ox/src/components/OxValidationBtn.vue","../../../assets/ox/src/components/OxLogin.vue","../../../assets/ox/src/components/OxPanel.vue","../../../assets/ox/src/components/OxModelEdit.vue","../../../assets/ox/src/components/OxModelPanel.vue","../../../assets/ox/src/components/OxPanelNav.vue","../../../assets/ox/src/components/index.ts"],"sourcesContent":["<template>\n    <template v-if=\"allowed\">\n        <v-btn v-if=\"props.button\" variant=\"text\"\n            :disabled=\"processing\"\n            :color=\"props.color\" :icon=\"props.icon\"\n            :title=\"props.title\" :aria-label=\"props.title\"\n            @click.stop=\"run\">\n        </v-btn>\n        <v-list-item v-else\n            :title=\"props.title\" :base-color=\"props.color\" :prepend-icon=\"props.icon\"\n            :disabled=\"processing\"\n            @click.stop=\"run\"/>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport {computed, defineProps, defineEmits, inject, toRefs} from 'vue'\nimport {useAction} from 'ox'\n\nimport type {IPermission, Model} from 'ox'\nimport type {ActionRun, ActionCompleted} from 'ox'\nimport type {IActionProps} from '../composables/actions'\n\nconst props = defineProps<IActionProps>()\n\nconst emits = defineEmits<{\n    completed: ActionCompleted\n}>()\nconst context = inject('context')\nconst {run, processing, allowed} = useAction({user: context.user, emits, props})\n</script>\n","<template>\n    <ox-action\n        :item=\"props.item\" :button=\"props.button\"\n        icon=\"mdi-delete\" color=\"error\"\n        :title=\"t('actions.delete')\" :confirm=\"t('actions.delete.confirm')\"\n        :permissions=\"['delete', (u, o) => o.id]\"\n        :run=\"run\" @completed=\"panel?.show({view:panel.index})\"\n    />\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject } from 'vue'\nimport { t } from 'ox'\n\nimport OxAction from './OxAction.vue'\n\nconst panel = inject('panel')\nconst repos = inject('repos')\n\nconst props = defineProps<{\n    item: Object\n    button?: boolean\n}>()\n\nasync function run(user, item) {\n    const repo = repos[item.constructor.entity]\n    return await repo.api().delete(item.$url(), {delete: props.item.id})\n}\n</script>\n","<template>\n    <slot name=\"before\" v-bind=\"props\"></slot>\n    <slot name=\"default\" v-bind=\"props\"></slot>\n    <slot name=\"after\" v-bind=\"props\"></slot>\n</template>\n<script setup>\nimport {computed, defineProps, inject, toRefs, useSlots} from 'vue'\n\nconst slots = useSlots()\nconst props = defineProps({\n    // Action's Props\n    value: Object,\n    dense: {type: Boolean, default: false},\n    button: {type: Boolean, default: false},\n    exclude: {type: Array},\n})\n</script>\n","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VSnackbar.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VOverlay } from \"../VOverlay/index.js\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.js\";\nimport { VProgressLinear } from \"../VProgressLinear/index.js\"; // Composables\nimport { useLayout } from \"../../composables/index.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { VuetifyLayoutKey } from \"../../composables/layout.js\";\nimport { makeLocationProps } from \"../../composables/location.js\";\nimport { makePositionProps, usePosition } from \"../../composables/position.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { useToggleScope } from \"../../composables/toggleScope.js\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.js\"; // Utilities\nimport { computed, inject, mergeProps, nextTick, onMounted, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { genericComponent, omit, propsFactory, refElement, useRender } from \"../../util/index.js\"; // Types\nfunction useCountdown(milliseconds) {\n  const time = shallowRef(milliseconds());\n  let timer = -1;\n  function clear() {\n    clearInterval(timer);\n  }\n  function reset() {\n    clear();\n    nextTick(() => time.value = milliseconds());\n  }\n  function start(el) {\n    const style = el ? getComputedStyle(el) : {\n      transitionDuration: 0.2\n    };\n    const interval = parseFloat(style.transitionDuration) * 1000 || 200;\n    clear();\n    if (time.value <= 0) return;\n    const startTime = performance.now();\n    timer = window.setInterval(() => {\n      const elapsed = performance.now() - startTime + interval;\n      time.value = Math.max(milliseconds() - elapsed, 0);\n      if (time.value <= 0) clear();\n    }, interval);\n  }\n  onScopeDispose(clear);\n  return {\n    clear,\n    time,\n    start,\n    reset\n  };\n}\nexport const makeVSnackbarProps = propsFactory({\n  multiLine: Boolean,\n  text: String,\n  timer: [Boolean, String],\n  timeout: {\n    type: [Number, String],\n    default: 5000\n  },\n  vertical: Boolean,\n  ...makeLocationProps({\n    location: 'bottom'\n  }),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeVariantProps(),\n  ...makeThemeProps(),\n  ...omit(makeVOverlayProps({\n    transition: 'v-snackbar-transition'\n  }), ['persistent', 'noClickAnimation', 'scrim', 'scrollStrategy'])\n}, 'VSnackbar');\nexport const VSnackbar = genericComponent()({\n  name: 'VSnackbar',\n  props: makeVSnackbarProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      scopeId\n    } = useScopeId();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const countdown = useCountdown(() => Number(props.timeout));\n    const overlay = ref();\n    const timerRef = ref();\n    const isHovering = shallowRef(false);\n    const startY = shallowRef(0);\n    const mainStyles = ref();\n    const hasLayout = inject(VuetifyLayoutKey, undefined);\n    useToggleScope(() => !!hasLayout, () => {\n      const layout = useLayout();\n      watchEffect(() => {\n        mainStyles.value = layout.mainStyles.value;\n      });\n    });\n    watch(isActive, startTimeout);\n    watch(() => props.timeout, startTimeout);\n    onMounted(() => {\n      if (isActive.value) startTimeout();\n    });\n    let activeTimeout = -1;\n    function startTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n      const timeout = Number(props.timeout);\n      if (!isActive.value || timeout === -1) return;\n      const element = refElement(timerRef.value);\n      countdown.start(element);\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false;\n      }, timeout);\n    }\n    function clearTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n    }\n    function onPointerenter() {\n      isHovering.value = true;\n      clearTimeout();\n    }\n    function onPointerleave() {\n      isHovering.value = false;\n      startTimeout();\n    }\n    function onTouchstart(event) {\n      startY.value = event.touches[0].clientY;\n    }\n    function onTouchend(event) {\n      if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) {\n        isActive.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isHovering.value) onPointerleave();\n    }\n    const locationClasses = computed(() => {\n      return props.location.split(' ').reduce((acc, loc) => {\n        acc[`v-snackbar--${loc}`] = true;\n        return acc;\n      }, {});\n    });\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      const hasContent = !!(slots.default || slots.text || props.text);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-snackbar', {\n          'v-snackbar--active': isActive.value,\n          'v-snackbar--multi-line': props.multiLine && !props.vertical,\n          'v-snackbar--timer': !!props.timer,\n          'v-snackbar--vertical': props.vertical\n        }, locationClasses.value, positionClasses.value, props.class],\n        \"style\": [mainStyles.value, props.style]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"contentProps\": mergeProps({\n          class: ['v-snackbar__wrapper', themeClasses.value, colorClasses.value, roundedClasses.value, variantClasses.value],\n          style: [colorStyles.value],\n          onPointerenter,\n          onPointerleave\n        }, overlayProps.contentProps),\n        \"persistent\": true,\n        \"noClickAnimation\": true,\n        \"scrim\": false,\n        \"scrollStrategy\": \"none\",\n        \"_disableGlobalStack\": true,\n        \"onTouchstartPassive\": onTouchstart,\n        \"onTouchend\": onTouchend,\n        \"onAfterLeave\": onAfterLeave\n      }, scopeId), {\n        default: () => [genOverlays(false, 'v-snackbar'), props.timer && !isHovering.value && _createVNode(\"div\", {\n          \"key\": \"timer\",\n          \"class\": \"v-snackbar__timer\"\n        }, [_createVNode(VProgressLinear, {\n          \"ref\": timerRef,\n          \"color\": typeof props.timer === 'string' ? props.timer : 'info',\n          \"max\": props.timeout,\n          \"model-value\": countdown.time.value\n        }, null)]), hasContent && _createVNode(\"div\", {\n          \"key\": \"content\",\n          \"class\": \"v-snackbar__content\",\n          \"role\": \"status\",\n          \"aria-live\": \"polite\"\n        }, [slots.text?.() ?? props.text, slots.default?.()]), slots.actions && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              variant: 'text',\n              ripple: false,\n              slim: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-snackbar__actions\"\n          }, [slots.actions({\n            isActive\n          })])]\n        })],\n        activator: slots.activator\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VSnackbar.js.map","<template>\n    <v-app>\n        <v-snackbar v-model=\"context.showState\" :color=\"context.state.color\" multi-line>\n            {{ context.state.data }}\n        </v-snackbar>\n        <v-app-bar color=\"primary\">\n            <template v-slot:prepend>\n                <v-app-bar-nav-icon icon=\"mdi-apps\"\n                    :title=\"t('nav.panels')\" :aria-label=\"t('nav.panels')\"\n                    @click.stop=\"nav.drawer = !nav.drawer\"/>\n                <v-app-bar-nav-icon v-if=\"slots['app-nav'] && !nav.drawer2\"\n                    icon=\"mdi-menu\"\n                    @click=\"nav.drawer2 = true; nav.drawer = false\"/>\n            </template>\n            <v-app-bar-title id=\"app-bar-sheet-title\"/>\n            <v-app-bar-title id=\"app-bar-title\">\n                <slot name=\"title\" :context=\"context\"/>\n            </v-app-bar-title>\n            <v-spacer/>\n            <slot name=\"app-bar-left\" :context=\"context\"></slot>\n            <div id=\"app-bar-right\" class=\"mr-3\"></div>\n            <slot name=\"app-bar-right\" :context=\"context\"></slot>\n        </v-app-bar>\n        <v-navigation-drawer theme=\"dark\" v-model=\"nav.drawer\">\n            <a class=\"nav-home\">\n                <v-img v-if=\"logo\" :src=\"logo\" class=\"logo\"/>\n            </a>\n            <slot name=\"nav-start\" :context=\"context\"></slot>\n            <slot name=\"nav-list\" :context=\"context\"></slot>\n            <template #append v-if=\"slots['nav-end']\">\n                <slot name=\"nav-end\" :context=\"context\"></slot>\n            </template>\n        </v-navigation-drawer>\n        <v-main>\n            <slot name=\"main\">\n                <v-tabs-window v-model=\"panels.panel\">\n                    <template #default=\"bind\">\n                        <slot name=\"default\" v-bind=\"bind\" :context=\"context\"></slot>\n                    </template>\n                </v-tabs-window>\n            </slot>\n        </v-main>\n    </v-app>\n</template>\n<style>\n.nav-home {\n    display: block;\n    text-align: left;\n}\n.nav-home .logo {\n    max-height: 4em;\n    margin: 1em 1em 0.4em 1em;\n}\n</style>\n<script setup lang=\"ts\">\nimport { useSlots, withDefaults, onErrorCaptured, onMounted } from 'vue'\nimport { computed, defineProps, inject, provide, reactive, watch } from 'vue'\n\nimport {useAppContext, usePanels} from 'ox'\nimport type {Model} from '../models'\n\nimport { t } from 'ox'\n\nconst slots = useSlots()\n\ninterface Props {\n    apiUrl?: string\n    logo?: string\n    dataEl?: string\n    models?: Model[]\n    data?: object\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n    dataEl: document.body.dataset?.appData\n})\n\nconst nav = reactive({drawer: true})\n\nconst context = useAppContext(props)\nconst panels = usePanels()\n\nonMounted(() => { panels.panel = context.data.panel })\n\nwatch(() => [context.state.state, context.state.data], () => {\n    context.showState = true\n})\n\nonErrorCaptured((err, instance, info) => {\n    context.state.error(`${err}`)\n})\n\n\n</script>\n","<script>\nimport { h, computed, shallowRef, watch } from 'vue'\nimport { defineAsyncComponent } from 'ox'\n\nexport default {\n    props: {\n        src: String,\n        is: String,\n    },\n\n    setup(props) {\n        const component = shallowRef(null)\n\n        const is = computed(() => {\n            if(props.is)\n                return props.is\n\n            let name = props.src.substring(props.src.lastIndexOf('/')+1)\n            if(name)\n                name = name.substring(0, name.indexOf('.'))\n            if(!name)\n                throw Error(\n                    \"`is` not provided and could not be deducted from `src`.\"\n                )\n            return name\n        })\n\n        function reset() {\n            component.value = defineAsyncComponent(props.src, is.value)\n        }\n\n        watch(() => props.src, reset)\n\n        reset()\n        return () => h(component.value, props)\n    },\n}\n</script>\n","<template>\n    <template v-if=\"props.errors\">\n        <div class=\"text-error\" v-for=\"error in props.errors\">\n            <v-icon icon=\"mdi-alert-circle-outline\"/>\n            {{ error }}\n        </div>\n    </template>\n</template>\n<script setup>\nimport {defineProps} from 'vue'\n\nconst props = defineProps({\n    state: Object,\n    errors: Array\n})\n</script>\n","<template>\n    <form @submit.prevent=\"list.load()\" class=\"width-full\">\n        <v-toolbar dense color=\"transparent\">\n            <v-app-bar-nav-icon :icon=\"icon\" readonly/>\n            <v-text-field v-if=\"props.search && list.filters\"\n                :label=\"t('filters.search')\" density=\"compact\" class=\"ml-2\"\n                v-model=\"list.filters[props.search]\"\n                hide-details/>\n            <slot :list=\"list\" :filters=\"list.filters\"/>\n            <v-btn @click.stop=\"list.load()\" class=\"ml-2\" icon=\"mdi-check\"\n                :aria-label=\"$t('filters.apply')\"\n                :title=\"t('filters.apply')\"\n            />\n            <v-btn v-if=\"hasFilters\" @click.stop=\"reset\" icon=\"mdi-backspace\"\n                :aria-label=\"t('filters.reset')\"\n                :title=\"t('filters.reset')\"\n            />\n        </v-toolbar>\n    </form>\n</template>\n<script setup>\nimport { computed, defineProps, defineExpose, inject, watch } from 'vue'\nimport { t } from 'ox'\n\nconst list = inject('list')\nconst props = defineProps({\n    search: String,\n})\n\nconst hasFilters = computed(() => {\n    const filters = list.filters\n    return filters && Object.entries(filters).some(\n        ([k,v]) => !k.startsWith('page') && !k.startsWith('ordering') && !!v\n    )\n})\nconst icon = computed(() => hasFilters.value ? 'mdi-filter-check' : 'mdi-filter-outline')\n\nfunction reset() {\n    list.filters = {}\n    list.load()\n}\n\nwatch(() => Object.values(list.filters), () => list.load())\ndefineExpose({ icon, hasFilters, reset})\n</script>\n","<template>\n    <v-list v-model:opened=\"opened\">\n        <v-list-group v-for=\"item, index in items\" :key=\"index\" :value=\"index\">\n            <template #activator=\"{props}\">\n                <v-list-item v-bind=\"props\">\n                    <v-list-item-title>\n                        <slot name=\"item.title\" :item=\"item\"/>\n                    </v-list-item-title>\n                    <template #append>\n                        <div @click.stop=\"\">\n                            <slot name=\"item.actions\" :item=\"item\" :index=\"index\" :editable=\"editable\" />\n                            <template v-if=\"editable\">\n                                <v-btn type=\"button\" class=\"ml-2\" size=\"small\"\n                                    @click.stop.prevent=\"removeItem(index)\" color=\"error\"\n                                    :aria-label=\"t('actions.remove')\"\n                                    :title=\"t('actions.remove')\"\n                                    icon=\"mdi-delete\"/>\n                            </template>\n                        </div>\n                    </template>\n                </v-list-item>\n            </template>\n            <slot name=\"item\" :item=\"item\" :index=\"index\"/>\n        </v-list-group>\n        <v-divider v-if=\"items.length\"/>\n        <template v-if=\"editable\">\n            <v-list-group :value=\"-1\">\n                <template #activator=\"{props}\">\n                    <v-list-item v-bind=\"props\" :title=\"t('actions.add_item')\" prepend-icon=\"mdi-plus\"/>\n                </template>\n                <slot name=\"item\" :item=\"newItem\" :edit=\"true\"/>\n                <v-list-item v-if=\"newItem\">\n                    <div class=\"flex-row justify-right\">\n                        <v-btn size=\"small\" v-if=\"newItem\" @click=\"newItem={}\"\n                            color=\"secondary\" prepend-icon=\"mdi-backspace\"\n                            :aria-label=\"t('actions.discard')\">\n                            {{ t('actions.discard') }}\n                        </v-btn>\n                        <v-btn size=\"small\" v-if=\"newItem\" @click=\"addItem()\"\n                            color=\"primary\" prepend-icon=\"mdi-plus\"\n                            :aria-label=\"t('actions.add')\">\n                            {{ t('actions.add') }}\n                        </v-btn>\n                    </div>\n                </v-list-item>\n            </v-list-group>\n        </template>\n    </v-list>\n</template>\n<style>\n.flex-row {\n\n}\n</style>\n<script setup lang=\"ts\">\n/**\n * This component provides simple list rendering and edition.\n */\nimport {defineModel, defineProps, ref, reactive, provide, useTemplateRef, toRefs} from \"vue\"\nimport {t} from \"ox\"\n\n/** v-model: the list of items. **/\nconst items = defineModel()\nconst newItem = ref({})\nconst props = defineProps({\n    /** Allow to add and edit items */\n    editable: {type: Boolean, default: true},\n})\nconst {editable} = toRefs(props)\n\nconst opened = ref([]);\n\nif(!items.value?.length)\n    opened.value.push(-1)\n\nfunction addItem() {\n    items.value.push(newItem.value)\n    newItem.value = {}\n}\n\nfunction removeItem(index) {\n    if(confirm(t('actions.delete.confirm')))\n        props.editable && items.value.splice(index)\n}\n</script>\n","// Composables\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\"; // Utilities\nimport { VSlideGroupSymbol } from \"./VSlideGroup.js\";\nimport { genericComponent } from \"../../util/index.js\"; // Types\nexport const VSlideGroupItem = genericComponent()({\n  name: 'VSlideGroupItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slideGroupItem = useGroupItem(props, VSlideGroupSymbol);\n    return () => slots.default?.({\n      isSelected: slideGroupItem.isSelected.value,\n      select: slideGroupItem.select,\n      toggle: slideGroupItem.toggle,\n      selectedClass: slideGroupItem.selectedClass.value\n    });\n  }\n});\n//# sourceMappingURL=VSlideGroupItem.js.map","<template>\n    <v-sheet>\n    <v-slide-group>\n        <v-slide-group-item v-for=\"(header, idx) in props.headers\" :key=\"header.value\"\n            v-slot=\"{selectedClass}\">\n            <v-card width=\"400\" :class=\"['ma-3', selectedClass]\"\n                    :color=\"color(idx)\" lines=\"two\">\n                <v-card-title>{{ header.title }}</v-card-title>\n                <v-list :bg-color=\"color(idx)\">\n                    <template v-if=\"sorted && sorted[header.value]\">\n                        <template v-for=\"item in sorted[header.value]\" :key=\"item.id\">\n                            <slot name=\"item\" :header=\"header\" :item=\"item\">\n                                <v-list-item :title=\"item[props.itemTitle]\"\n                                        :value=\"props.itemValue && item[props.itemValue]\"\n                                        @click=\"emits('click', item)\">\n                                    <template #append>\n                                        <slot name=\"item.action\"></slot>\n                                    </template>\n                                </v-list-item>\n                            </slot>\n                        </template>\n                    </template>\n                </v-list>\n            </v-card>\n        </v-slide-group-item>\n    </v-slide-group>\n    </v-sheet>\n</template>\n<script setup>\nimport { computed, defineEmits, defineProps, inject } from 'vue'\n\nconst emits = defineEmits(['click'])\nconst list = inject('list')\nconst items = inject('items')\n\nconst props = defineProps({\n    itemTitle: String,\n    itemValue: String,\n    field: String,\n    headers: Array,\n    colors: {type: Array, default: () => [\n        'purple', 'blue', 'teal', 'lime', 'orange', 'blue-gray',\n        'pink', 'indigo', 'cyan', 'light-green', 'amber', 'brown',\n        'red', 'deep-purple', 'light-blue', 'green', 'yellow', 'deep-orange'\n    ]},\n    colorVariant: {type: String, default: 'lighten-2'},\n})\n\n\nfunction color(idx) {\n    idx = idx % props.colors.length\n    if(props.colorVariant)\n        return props.colors[idx] + '-' + props.colorVariant\n    return props.colors[idx]\n}\n\n\nfunction assign(result, item, val) {\n    if(result[val])\n        !result[val].includes(item) && result[val].push(item)\n    else\n        result[val] = [item]\n}\n\nconst sorted = computed(() => {\n    const result = {}\n    if(items.value)\n        for(var item of items.value) {\n            const vals = item[props.field]\n            if(Array.isArray(vals)) {\n                if(vals.length)\n                    for(var val of vals)\n                        assign(result, item, val)\n                else\n                    assign(result, item, null)\n            }\n            else\n                assign(result, item, vals)\n        }\n    return result\n})\n</script>\n","<template>\n    <v-data-table-server\n            :items=\"items\" item-index=\"id\" :items-length=\"list.count || items.length\"\n            :loading=\"list.state?.isProcessing\"\n            :headers=\"headers\"\n            class=\"align-top-table\"\n            @update:options=\"updateOptions\">\n        <template v-slot:loading>\n            <v-skeleton-loader type=\"table-row@10\"></v-skeleton-loader>\n        </template>\n\n        <template v-for=\"(_, name) in itemSlots\" :key=\"name\" v-slot:[name]=\"bind\">\n            <slot :name=\"name\" v-bind=\"bind\"/>\n        </template>\n\n        <template #item.actions=\"{item}\">\n            <ox-action v-if=\"edit\"\n                icon=\"mdi-pencil\" button\n                :title=\"t('actions.edit')\"\n                :permissions=\"permissions\"\n                :item=\"item\"\n                :run=\"runEdit\"/>\n            <slot name=\"item.actions\" :value=\"item\" :dense=\"true\" :button=\"true\"/>\n        </template>\n    </v-data-table-server>\n</template>\n<style>\n.align-top-table td {\n  /*vertical-align: top;*/\n}\n</style>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, ref, useSlots } from 'vue'\n\nimport { t, tKeys } from 'ox'\nimport { Permissions } from '../models'\nimport { filterSlots } from '../utils'\nimport OxAction from './OxAction.vue'\n\nconst slots = useSlots()\nconst itemSlots = filterSlots(slots, 'item.', {exclude: ['item.actions']})\n\nconst panel = inject('panel')\nconst list = inject('list')\nconst items = inject('items')\n\nconst permissions = new Permissions(['change'])\nconst props = defineProps({\n    // list: Object,\n    headers: Array,\n    edit: Boolean,\n})\n\n\nconst headers = computed(() => {\n    return props.headers.reduce((dst, field) => {\n        dst.push(\n            (typeof(field) == 'string') ?\n            {key: field, title: t(tKeys.field(field))} : field\n        )\n        return dst\n    }, [])\n})\n\n\nfunction updateOptions(event) {\n    list.filters.page = event.page,\n    list.filters.page_size = event.itemsPerPage,\n    list.filters.ordering = event.sortBy.map(({key, order}) => order == 'asc' ? key : `-${key}`)\n}\n\nfunction runEdit(user, item) {\n    panel.show({view: 'detail.edit', value: item})\n}\n</script>\n","<template>\n    <v-alert v-if=\"props.state.isNone && slots.none\" type=\"info\" variant=\"tonal\" class=\"mb-3\"\n            :state=\"state\" :title=\"noneTitle\">\n        <slot name=\"none\" :state=\"state\"></slot>\n    </v-alert>\n    <v-alert v-else-if=\"displayProcessing\" type=\"info\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"processingTitle\">\n        <slot name=\"processing\" :state=\"state\">\n            Data are being sent to server, please be patient. If this message persist you might wan't to retry.\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isError\" type=\"error\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"errorTitle\" >\n        <slot name=\"error\" :state=\"state\">\n            Oups... something wrong happened.\n        </slot>\n        <slot name=\"error-detail\" :state=\"state\">\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isOk\" type=\"success\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"okTitle\">\n        <slot name=\"ok\" :state=\"state\">\n            <p>Congrats! Data have been updated.</p>\n        </slot>\n        <template v-if=\"messages\">\n            <v-divider/>\n            <p v-for=\"message in messages\">{{ message }}</p>\n        </template>\n        <slot name=\"ok-detail\" :state=\"state\"></slot>\n    </v-alert>\n    <slot :state=\"props.state\"></slot>\n</template>\n<script setup>\n// TODO: expandable detail error\nimport {defineProps, useSlots, computed, ref, watch} from 'vue'\nimport {VAlert} from 'vuetify/components/VAlert'\nimport {States} from '../utils/state'\n\nconst slots = useSlots()\nconst props = defineProps({\n    state: Object,\n    delay: {type: Boolean, default: false},\n    okTitle: {type: String, default: \"\"},\n    noneTitle: {type: String, default: \"\"},\n    errorTitle: {type: String, default: \"Oups...\"},\n    processingTitle: {type: String, default: \"Processing...\"},\n})\n\n\nlet timeoutId = null\nlet expired = ref(false)\n\nwatch(() => props.state.state, (val) => {\n    if(timeoutId !== null)\n        window.clearTimeout(timeoutId)\n\n    if(!props.delay)\n        return\n\n    if(val == States.PROCESSING) {\n        expired.value = false\n        window.setTimeout(() => { expired.value = true }, 5000)\n    }\n})\n\nconst displayProcessing = computed(() => props.state?.isProcessing && (!props.delay || expired.value))\nconst messages = computed(() => props.state?.data?.messages)\n\n\n\n</script>\n","<template>\n    <div class=\"text-right\">\n        <v-btn color=\"error\" class=\"me-2\" :prepend-icon=\"props.resetIcon\"\n                @click=\"emit('reset')\"\n                :disabled=\"props.disabled\">\n            <slot name=\"reset\">{{ props.resetLabel }}</slot>\n        </v-btn>\n        <v-btn v-if=\"props.state.isSending\"\n                color=\"primary\" prepend-icon=\"mdi-content-save\" disabled>\n            Saving\n        </v-btn>\n        <v-btn v-else color=\"primary\" :prepend-icon=\"props.validateIcon\"\n                @click=\"emit('validate')\"\n                :disabled=\"props.disabled || props.validateDisabled\">\n            <slot name=\"validate\">{{ props.validateLabel }}</slot>\n        </v-btn>\n        </div>\n</template>\n<script setup>\nimport {defineEmits, defineProps} from 'vue'\nimport {VBtn} from 'vuetify/components/VBtn'\n\nconst emit = defineEmits(['validate', 'reset'])\nconst props = defineProps({\n    resetLabel: {type: String, default: \"Reset\"},\n    resetIcon: {type: String, default: \"mdi-close-circle\"},\n    validateLabel: {type: String, default: \"Save\"},\n    validateIcon: {type: String, default: \"mdi-content-save\"},\n    disabled: {type: Boolean, default: false},\n    state: {type: Object, default: () => State.none()},\n    validateDisabled: {type: Boolean, default: false},\n})\n</script>\n","<template>\n    <ox-state-alert :state=\"state\">\n        <template #none=\"{state}\">\n            <p>Please enter your credentials in order too proceed...</p>\n        </template>\n        <template #ok-detail=\"{state}\">\n            <p v-if=\"props.next\">You soon will be redirected to <i>{{ props.next }}</i></p>\n        </template>\n        <template #error=\"{state}\">\n            <ox-field-details :errors=\"state.data?.username\"/>\n            <ox-field-details :errors=\"state.data?.password\"/>\n        </template>\n    </ox-state-alert>\n    <template v-if=\"!state.isOk\">\n        <v-text-field variant=\"underlined\"\n                label=\"Enter login\" v-model=\"credentials.username\"\n                @keyup.enter.stop=\"passwordInput.focus()\"\n                >\n        </v-text-field>\n        <v-text-field variant=\"underlined\" ref=\"password\"\n                label=\"Enter password\" v-model=\"credentials.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                @click:append=\"showPassword = !showPassword\"\n                @keyup.enter.stop=\"login()\"\n                >\n        </v-text-field>\n        <div class=\"text-right mt-3\">\n            <slot name=\"default\" :value=\"credentials.password\">\n                <ox-validation-btn v-if=\"credentials.username && credentials.password\"\n                    validate-label=\"Login!\"\n                    @validate=\"login()\" @reset=\"reset()\"\n                    :state=\"state\"/>\n            </slot>\n        </div>\n    </template>\n</template>\n<script setup>\nimport {computed, inject, ref, reactive, defineModel, defineProps, useTemplateRef} from 'vue'\n\nimport OxStateAlert from './OxStateAlert'\nimport OxValidationBtn from './OxValidationBtn.vue'\nimport OxFieldDetails from './OxFieldDetails.vue'\nimport config from '../config'\n\nimport State from '../utils/state'\nimport {reset as $reset} from '../utils'\nimport {User} from '../models/auth'\n\n\nconst passwordInput = useTemplateRef('password')\n\nconst props = defineProps({\n    next: {type: String},\n    url: {type: String},\n})\n\nconst emit = defineEmits(['save', 'saved'])\nconst credentials = reactive({\n    username: '',\n    password: '',\n})\nconst showPassword = ref(false)\nconst state = reactive(new State())\n\nfunction reset(resetState=true) {\n    $reset(credentials, {\"username\": \"\", password: \"\"})\n    resetState && state.none()\n}\n\nasync function login() {\n    state.processing()\n\n    try {\n        const resp = await fetch(props.url, {\n            method: \"POST\",\n            headers: config.axiosConfig.headers,\n            body: JSON.stringify(credentials),\n        })\n        if(resp.status == 200) {\n            credentials.credentials = \"\"\n            credentials.password = \"\"\n            state.ok(await resp.json())\n\n            if(props.next)\n                window.location.href = props.next\n        }\n        else\n            state.error(await resp.json())\n    }\n    catch(error) {\n        state.ok(error?.message || error)\n    }\n}\n</script>\n","<template>\n    <v-tabs-window-item :value=\"props.name\">\n        <ox-state-alert v-if=\"props.state\" :state=\"props.state\" delay/>\n        <v-sheet class=\"ma-4\">\n            <Teleport to=\"#app-bar-sheet-title\" :disabled=\"!mounted || panels.panel != props.name\">\n                <v-icon v-if=\"props.icon\" :icon=\"props.icon\"/>\n                {{ props.title }}\n            </Teleport>\n\n            <Teleport to=\"#app-bar-right\" :disabled=\"!mounted || panels.panel != props.name\">\n                <slot name=\"append-title\"/>\n                <v-btn v-if=\"props.help\" class=\"ml-3\"\n                    :href=\"props.help\" panels=\"new\"\n                    icon=\"mdi-information-outline\" />\n            </Teleport>\n\n            <slot name=\"top\"></slot>\n\n            <slot name=\"default\">\n                <template v-if=\"views\">\n                    <v-window v-model=\"panel.view\">\n                        <template v-for=\"(name, slot) in views\" :key=\"name\">\n                            <v-window-item :value=\"name\">\n                                <slot :name=\"slot\"></slot>\n                            </v-window-item>\n                        </template>\n                    </v-window>\n                </template>\n            </slot>\n\n            <slot name=\"bottom\"></slot>\n        </v-sheet>\n    </v-tabs-window-item>\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject, onMounted, onUnmounted, ref, useSlots, watch } from 'vue'\nimport {filterSlots} from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport type {IPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst props = defineProps<IPanelProps>()\nconst views = filterSlots(slots, 'views.')\n\n// ensure teleport will be set after component has been mounted\nconst mounted = ref(false)\nonMounted(() => { mounted.value = true })\nonUnmounted(() => { mounted.value = false })\n\nconst panels = inject('panels')\nconst panel = inject('panel')\n</script>\n","<template>\n    <ox-state-alert :state=\"editor.state\"/>\n    <div class=\"mb-3\">\n        <ox-validation-btn v-if=\"edited\"\n            @validate=\"editor.save()\" @reset=\"editor.discard()\" :state=\"editor.state\" :validate-disabled=\"!editor.valid\"/>\n    </div>\n    <template v-if=\"tabs && Object.keys(tabs).length\">\n        <v-tabs v-model=\"tab\">\n            <slot name=\"tab.default\" v-bind=\"bind\">\n                <v-tab :text=\"t(`models.${model.entity}`)\" value=\"model\"/>\n            </slot>\n            <template v-for=\"(_, name) in tabs\">\n                <slot :name=\"name\" v-bind=\"bind\"></slot>\n            </template>\n        </v-tabs>\n        <v-tabs-window v-model=\"tab\">\n            <v-tabs-window-item value=\"model\">\n                <slot name=\"window.default\" v-bind=\"bind\"></slot>\n            </v-tabs-window-item>\n            <template v-for=\"(value, name) in windows\">\n                <v-tabs-window-item :value=\"value\">\n                    <slot :name=\"name\" v-bind=\"bind\"></slot>\n                </v-tabs-window-item>\n            </template>\n        </v-tabs-window>\n    </template>\n    <template v-else>\n        <slot name=\"window.default\" v-bind=\"bind\"></slot>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref, defineProps, inject, toRefs, useSlots, watch } from 'vue'\nimport { t, tKeys, filterSlots, useModelEditor } from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport OxValidationBtn from './OxValidationBtn.vue'\n\nimport type {IModelEditorProps} from '../controllers/modelEditor'\n\nconst props = defineProps<IModelEditorProps>()\nconst {editor, edited} = useModelEditor({props})\nconst model = computed(() => editor.repo.use)\nconst {value} = toRefs(editor)\n\n// ---- Slots & tabs\nconst tab = ref(null)\nconst slots = useSlots()\n\nconst tabs = filterSlots(slots, \"tab.\", {exclude: \"tab.default\"})\nconst windows = filterSlots(slots, \"window.\", {exclude: \"window.default\"})\n\nconst bind = computed(() => {\n    return {\n        value: value.value,\n        model: model.value,\n    }\n})\n</script>\n","<template>\n    <ox-panel :name=\"props.name\" :title=\"panel.title\" :icon=\"panel.icon\"\n            :state=\"list.state\" :index=\"props.index\">\n        <template #append-title>\n            <slot name=\"append-title\" v-bind=\"bind\"/>\n\n            <template v-if=\"panel.view.startsWith('list.')\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\"\n                        density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.list\" v-bind=\"bind\"/>\n                    <v-btn v-if=\"filters\"\n                        :title=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        :aria-label=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        @click=\"showFilters = !showFilters\" :active=\"showFilters\">\n                        <v-icon :icon=\"filters.icon\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n            <template v-else-if=\"panel.view.startsWith('detail.') && panel.value\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\" density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.detail\" v-bind=\"bind\"/>\n\n                    <template v-if=\"panel.view == 'detail.edit' && panel.value\">\n                        <v-menu>\n                            <template #activator=\"{props}\">\n                                <v-btn prepend-icon=\"mdi-dots-vertical\" v-bind=\"props\">\n                                    {{ t('actions') }}\n                                </v-btn>\n                            </template>\n                            <v-list>\n                                <slot name=\"item.actions\" :value=\"panel.value\"/>\n                            </v-list>\n                        </v-menu>\n                    </template>\n\n                    <v-btn :disabled=\"!prev\"\n                            :title=\"t('prev')\" :aria-label=\"t('prev')\"\n                            @click.stop=\"panel.show({value: prev})\">\n                        <v-icon icon=\"mdi-chevron-left\"/>\n                    </v-btn>\n                    <v-btn :disabled=\"!next\"\n                            :title=\"t('next')\" :aria-label=\"t('next')\"\n                            @click.stop=\"panel.show({value: next})\">\n                        <v-icon icon=\"mdi-chevron-right\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n\n            <v-btn-toggle class=\"ml-3\" color=\"secondary\" v-model=\"panel.view\" density=\"compact\" variant=\"tonal\" mandatory>\n                <!-- TODO: permission check -->\n                <v-btn value=\"list.table\"\n                        :title=\"t('panels.nav.table')\"\n                        :aria-label=\"t('panels.nav.table')\">\n                    <v-icon>mdi-table</v-icon>\n                </v-btn>\n                <v-btn value=\"list.cards\" v-if=\"slots['views.list.cards']\"\n                        :title=\"t('panels.nav.cards')\"\n                        :aria-label=\"t('panels.nav.cards')\">\n                    <v-icon>mdi-card-account-details</v-icon>\n                </v-btn>\n                <v-btn value=\"list.kanban\" v-if=\"slots['views.list.kanban']\"\n                        :title=\"t('panels.nav.kanban')\"\n                        :aria-label=\"t('panels.nav.kanban')\">\n                    <v-icon>mdi-view-column</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.add\" v-if=\"editSlots\"\n                        @click.stop=\"panel.create()\"\n                        :title=\"t('panels.nav.add')\"\n                        :aria-label=\"t('panels.nav.add')\">\n                    <v-icon>mdi-plus-box</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.edit\" v-if=\"slots['views.detail.edit'] || editSlots\"\n                        :disabled=\"!panel.value?.id\"\n                        :title=\"t('panels.nav.edit')\"\n                        :aria-label=\"t('panels.nav.edit')\">\n                    <v-icon>mdi-pencil</v-icon>\n                </v-btn>\n                <slot name=\"nav.views\" v-bind=\"bind\"/>\n            </v-btn-toggle>\n        </template>\n\n        <template #top>\n            <ox-list-filters ref=\"filters\"\n                    v-show=\"panel.view.startsWith('list.') && showFilters\"\n                    :search=\"props.search\"\n                    teleport-to=\"#panel-list-actions\">\n                <template #default=\"bind\">\n                    <slot name=\"list.filters\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-filters>\n        </template>\n\n        <!-- list.table is always provided -->\n        <template #views.list.table v-if=\"!slots['views.list.table']\">\n            <ox-list-table :headers=\"headers\" edit>\n                <template v-for=\"(_, name) in itemSlots\" v-slot:[name]=\"bind\" :key=\"name\">\n                    <slot :name=\"name\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-table>\n        </template>\n\n        <template v-for=\"(name, slot) in viewsListSlots\" v-slot:[slot]>\n            <slot :name=\"slot\" v-bind=\"bind\"/>\n        </template>\n\n        <template #views.detail.edit v-if=\"(slots['views.detail.edit'] || editSlots) && canEdit\">\n            <ox-model-edit\n                :repo=\"panel.repo\" :initial=\"panel.value\"\n                :name=\"`${panel.model.entity}-edit`\"\n                :saved=\"(item) => panel.value = item\">\n                <template v-for=\"(name, slot) in editSlots\" #[name]=\"bind\">\n                    <slot :name=\"slot\" v-bind=\"bind\"/>\n                </template>\n            </ox-model-edit>\n        </template>\n    </ox-panel>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, useTemplateRef, useSlots, toRefs, withDefaults } from 'vue'\nimport { Teleport } from 'vue'\n\nimport OxAction from './OxAction.vue'\nimport OxListFilters from './OxListFilters.vue'\nimport OxListTable from './OxListTable.vue'\nimport OxPanel from './OxPanel.vue'\nimport OxModelEdit from './OxModelEdit.vue'\n\nimport {t, filterSlots, useModelPanel} from 'ox'\nimport type {IModelPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst viewsListSlots = filterSlots(slots, 'views.list.')\nconst itemSlots = filterSlots(slots, 'item.')\nconst editSlots = filterSlots(slots, 'views.detail.edit.')\n\nconst filters = useTemplateRef('filters')\nconst props = withDefaults(defineProps<IModelPanelProps>(), {\n    index: 'list.table'\n})\n\nconst context = inject('context')\nconst {panel, list, items, next, prev} = inject('panel') ?? useModelPanel({props})\nconst panels = panel.panels\n\nconst canEdit = computed(() =>  context.user.can([panel.model, panel.value?.id ? \"change\": \"add\"]))\n\nconst {showFilters} = toRefs(panel)\nconst headers = computed(() => [\n    ...props.headers,\n    {key: 'actions', title: t('actions')},\n])\n\nconst bind = computed(() => {\n    return ({\n        panel, panels, list, items, context,\n        value: panel.value,\n    })\n})\n</script>\n","<template>\n    <v-list-item\n        :active=\"panels.panel == props.panel\"\n        :prepend-icon=\"props.icon\" :title=\"props.title\"\n        @click.stop=\"panels.show(props)\"/>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject } from 'vue'\nimport type {IPanelNavProps} from '../controllers'\n\nconst props = defineProps<IPanelNavProps>()\n\nconst panels = inject('panels')\nconst visible = computed(() => !props.auto || panel.name == props.name)\n</script>\n","import * as ox from './ox'\nimport {components as vendor} from 'ox/vendor'\n\nexport * from './ox'\n\n\n/**\n * This is the base app config used for Oxylus' Vue based applicationns.\n *\n * It includes Oxylus components and some Vuetify's ones.\n *\n *\n * @example\n * // Example app.ts for another application.\n *\n * import {App} from 'ox/components'\n * import * as components from './components'\n *\n * export default {\n *     extends: App,\n *     components,\n * }\n */\nexport const App = {\n    el: \"#app\",\n    delimiters: ['[[', ']]'],\n    components: {...ox, ...vendor},\n}\n"],"names":["props","__props","emits","__emit","context","inject","run","processing","allowed","useAction","panel","repos","user","item","useSlots","useCountdown","milliseconds","time","shallowRef","timer","clear","reset","nextTick","start","el","style","interval","startTime","elapsed","onScopeDispose","makeVSnackbarProps","propsFactory","makeLocationProps","makePositionProps","makeRoundedProps","makeVariantProps","makeThemeProps","omit","makeVOverlayProps","VSnackbar","genericComponent","v","_ref","slots","isActive","useProxiedModel","positionClasses","usePosition","scopeId","useScopeId","themeClasses","provideTheme","colorClasses","colorStyles","variantClasses","useVariant","roundedClasses","useRounded","countdown","overlay","ref","timerRef","isHovering","startY","mainStyles","hasLayout","VuetifyLayoutKey","useToggleScope","layout","useLayout","watchEffect","watch","startTimeout","onMounted","activeTimeout","timeout","element","refElement","clearTimeout","onPointerenter","onPointerleave","onTouchstart","event","onTouchend","onAfterLeave","locationClasses","computed","acc","loc","useRender","overlayProps","VOverlay","hasContent","_createVNode","_mergeProps","$event","mergeProps","genOverlays","VProgressLinear","_a","_b","VDefaultsProvider","forwardRefs","nav","reactive","useAppContext","panels","usePanels","onErrorCaptured","err","instance","info","_sfc_main","component","is","name","defineAsyncComponent","h","list","hasFilters","filters","k","icon","__expose","items","_useModel","newItem","editable","toRefs","opened","addItem","removeItem","index","t","VSlideGroupItem","makeGroupItemProps","val","slideGroupItem","useGroupItem","VSlideGroupSymbol","color","idx","assign","result","sorted","vals","itemSlots","filterSlots","permissions","Permissions","headers","dst","field","tKeys","updateOptions","key","order","runEdit","expired","States","displayProcessing","messages","emit","passwordInput","useTemplateRef","credentials","showPassword","state","State","resetState","$reset","login","resp","config","error","views","mounted","onUnmounted","editor","edited","useModelEditor","model","value","tab","tabs","windows","bind","viewsListSlots","editSlots","next","prev","useModelPanel","canEdit","showFilters","App","ox","vendor"],"mappings":"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","x_google_ignoreList":[3,9]}
