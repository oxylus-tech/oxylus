{"version":3,"file":"components.js","sources":["../../../assets/ox/src/components/OxAction.vue","../../../assets/ox/src/components/OxActionModelDelete.vue","../../../assets/ox/src/components/OxActions.vue","../../../assets/ox/src/components/OxAppNavItem.vue","../../../assets/ox/src/components/OxAppNav.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.js","../../../assets/ox/src/components/OxApp.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VAutocomplete/VAutocomplete.js","../../../assets/ox/src/components/OxAutocomplete.vue","../../../assets/ox/src/components/OxComponent.vue","../../../assets/ox/src/components/OxFieldDetails.vue","../../../assets/ox/src/components/OxListFilters.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VForm/VForm.js","../../../assets/ox/src/components/OxFormList.vue","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroupItem.js","../../../assets/ox/src/components/OxListKanban.vue","../../../assets/ox/src/components/OxListTable.vue","../../../assets/ox/src/components/OxStateAlert.vue","../../../assets/ox/src/components/OxValidationBtn.vue","../../../assets/ox/src/components/OxLogin.vue","../../../assets/ox/src/components/OxPanel.vue","../../../assets/ox/src/components/OxView.vue","../../../assets/ox/src/components/OxModelEdit.vue","../../../assets/ox/src/components/OxModelPanel.vue","../../../assets/ox/src/components/index.ts"],"sourcesContent":["<template>\n    <template v-if=\"allowed\">\n        <v-btn v-if=\"props.button\" variant=\"text\"\n            :disabled=\"processing\"\n            :color=\"props.color\" :icon=\"props.icon\"\n            :title=\"props.title\" :aria-label=\"props.title\"\n            @click.stop=\"run\">\n        </v-btn>\n        <v-list-item v-else\n            :title=\"props.title\" :base-color=\"props.color\" :prepend-icon=\"props.icon\"\n            :disabled=\"processing\"\n            @click.stop=\"run\"/>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport {computed, defineProps, defineEmits, inject, toRefs} from 'vue'\nimport {useAction} from 'ox'\n\nimport type {IPermission, Model} from 'ox'\nimport type {ActionRun, ActionCompleted} from 'ox'\nimport type {IActionProps} from '../composables/actions'\n\nconst props = defineProps<IActionProps>()\n\nconst emits = defineEmits<{\n    completed: ActionCompleted\n}>()\nconst context = inject('context')\nconst {run, processing, allowed} = useAction({user: context.user, emits, props})\n</script>\n","<template>\n    <ox-action\n        :item=\"props.item\" :button=\"props.button\"\n        icon=\"mdi-delete\" color=\"error\"\n        :title=\"t('actions.delete')\" :confirm=\"t('actions.delete.confirm')\"\n        :permissions=\"['delete', (u, o) => o.id]\"\n        :run=\"run\" @completed=\"panel?.show({view:panel.index})\"\n    />\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject } from 'vue'\nimport { t } from 'ox'\n\nimport OxAction from './OxAction.vue'\n\nconst panel = inject('panel')\nconst repos = inject('repos')\n\nconst props = defineProps<{\n    item: Object\n    button?: boolean\n}>()\n\nasync function run(user, item) {\n    const repo = repos[item.constructor.entity]\n    return await repo.api().delete(item.$url(), {delete: props.item.id})\n}\n</script>\n","<template>\n    <slot name=\"before\" v-bind=\"props\"></slot>\n    <slot name=\"default\" v-bind=\"props\"></slot>\n    <slot name=\"after\" v-bind=\"props\"></slot>\n</template>\n<script setup>\nimport {computed, defineProps, inject, toRefs, useSlots} from 'vue'\n\nconst slots = useSlots()\nconst props = defineProps({\n    // Action's Props\n    value: Object,\n    dense: {type: Boolean, default: false},\n    button: {type: Boolean, default: false},\n    exclude: {type: Array},\n})\n</script>\n","<template>\n    <template v-if=\"shouldShow(props)\">\n        <template v-if=\"props.type == 'subheader'\">\n            <v-list-subheader>{{ props.title }}</v-list-subheader>\n            <template v-if=\"props.items\">\n                <ox-app-nav-item v-for=\"item of props.items\"\n                    v-bind=\"item\" />\n            </template>\n        </template>\n        <template v-else-if=\"props.type == 'group'\">\n            <v-list-group :value=\"props.value\">\n                <template #activator=\"{props:itemProps}\">\n                    <v-list-item v-bind=\"itemProps\"\n                        :title=\"props.title\" :prepend-icon=\"props.icon\" />\n                </template>\n\n                <template v-for=\"(sub, i) in props.items\" :key=\"i\">\n                    <ox-app-nav-item v-bind=\"sub\"/>\n                </template>\n            </v-list-group>\n        </template>\n        <v-divider v-else-if=\"props.type == 'divider'\"/>\n        <v-list-item v-else\n            :active=\"panels.panel == props.value\"\n            :value=\"props.value\"\n            :prepend-icon=\"props.icon\" :title=\"props.title\"\n            @click.stop=\"show\"/>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, ref } from 'vue'\nimport type {IPanelNavProps} from '../controllers'\n\nconst props = defineProps<IPanelNavProps>()\n\nconst isOpen = ref(null)\nconst user = inject('user')\nconst panels = inject('panels')\nconst visible = computed(() => !props.auto || panel.name == props.name)\n\nfunction shouldShow(item) {\n    if(item.permissions && !user.can(item.permissions))\n        return false\n    if(item.items)\n        return item.items.some(x => shouldShow(x))\n    return true\n}\n\n\nfunction show() {\n    const vals = { panel: props.value, href: props.url }\n    console.log(props, vals)\n    panels.show(vals)\n}\n</script>\n","<template>\n    <v-navigation-drawer v-model=\"drawer\" theme=\"dark\">\n        <slot name=\"prepend\"/>\n        <v-list v-model:opened=\"opened\" density=\"compact\">\n            <template v-for=\"(item,i) in items\" :key=\"i\">\n                <ox-app-nav-item v-bind=\"item\"/>\n            </template>\n        </v-list>\n        <template #append>\n            <v-list><slot name=\"append\"/></v-list>\n        </template>\n    </v-navigation-drawer>\n</template>\n<script setup>\nimport { computed, defineModel, defineProps, defineEmits, inject, onMounted, ref, watch } from 'vue'\n\nimport OxAppNavItem from './OxAppNavItem'\n\nconst context = inject('context')\nconst panels = inject('panels')\nconst drawer = defineModel('drawer')\nconst opened = ref([])\n\nconst props = defineProps({\n    items: Array\n})\n\nconst items = computed(() => props.items)\n\n\nfunction getOpened(items) {\n    if(panels.panel)\n        for(const item of items) {\n            if(item.items) {\n                const val = getOpened(item.items)\n                if(val)\n                    return [val, item.value]\n            }\n            else if(item.value == panels.panel)\n                return [item.value]\n        }\n}\n\nfunction updateOpened() {\n    opened.value = getOpened(items.value)\n}\n\n\nonMounted(updateOpened)\nwatch(items, updateOpened)\nwatch(() => panels.panel, updateOpened)\n</script>\n","import { createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\";\n// Styles\nimport \"./VSnackbar.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VOverlay } from \"../VOverlay/index.js\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.js\";\nimport { VProgressLinear } from \"../VProgressLinear/index.js\"; // Composables\nimport { useLayout } from \"../../composables/index.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { VuetifyLayoutKey } from \"../../composables/layout.js\";\nimport { makeLocationProps } from \"../../composables/location.js\";\nimport { makePositionProps, usePosition } from \"../../composables/position.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.js\";\nimport { useScopeId } from \"../../composables/scopeId.js\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.js\";\nimport { useToggleScope } from \"../../composables/toggleScope.js\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.js\"; // Utilities\nimport { computed, inject, mergeProps, nextTick, onMounted, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { genericComponent, omit, propsFactory, refElement, useRender } from \"../../util/index.js\"; // Types\nfunction useCountdown(milliseconds) {\n  const time = shallowRef(milliseconds());\n  let timer = -1;\n  function clear() {\n    clearInterval(timer);\n  }\n  function reset() {\n    clear();\n    nextTick(() => time.value = milliseconds());\n  }\n  function start(el) {\n    const style = el ? getComputedStyle(el) : {\n      transitionDuration: 0.2\n    };\n    const interval = parseFloat(style.transitionDuration) * 1000 || 200;\n    clear();\n    if (time.value <= 0) return;\n    const startTime = performance.now();\n    timer = window.setInterval(() => {\n      const elapsed = performance.now() - startTime + interval;\n      time.value = Math.max(milliseconds() - elapsed, 0);\n      if (time.value <= 0) clear();\n    }, interval);\n  }\n  onScopeDispose(clear);\n  return {\n    clear,\n    time,\n    start,\n    reset\n  };\n}\nexport const makeVSnackbarProps = propsFactory({\n  multiLine: Boolean,\n  text: String,\n  timer: [Boolean, String],\n  timeout: {\n    type: [Number, String],\n    default: 5000\n  },\n  vertical: Boolean,\n  ...makeLocationProps({\n    location: 'bottom'\n  }),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeVariantProps(),\n  ...makeThemeProps(),\n  ...omit(makeVOverlayProps({\n    transition: 'v-snackbar-transition'\n  }), ['persistent', 'noClickAnimation', 'scrim', 'scrollStrategy'])\n}, 'VSnackbar');\nexport const VSnackbar = genericComponent()({\n  name: 'VSnackbar',\n  props: makeVSnackbarProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      scopeId\n    } = useScopeId();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const countdown = useCountdown(() => Number(props.timeout));\n    const overlay = ref();\n    const timerRef = ref();\n    const isHovering = shallowRef(false);\n    const startY = shallowRef(0);\n    const mainStyles = ref();\n    const hasLayout = inject(VuetifyLayoutKey, undefined);\n    useToggleScope(() => !!hasLayout, () => {\n      const layout = useLayout();\n      watchEffect(() => {\n        mainStyles.value = layout.mainStyles.value;\n      });\n    });\n    watch(isActive, startTimeout);\n    watch(() => props.timeout, startTimeout);\n    onMounted(() => {\n      if (isActive.value) startTimeout();\n    });\n    let activeTimeout = -1;\n    function startTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n      const timeout = Number(props.timeout);\n      if (!isActive.value || timeout === -1) return;\n      const element = refElement(timerRef.value);\n      countdown.start(element);\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false;\n      }, timeout);\n    }\n    function clearTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n    }\n    function onPointerenter() {\n      isHovering.value = true;\n      clearTimeout();\n    }\n    function onPointerleave() {\n      isHovering.value = false;\n      startTimeout();\n    }\n    function onTouchstart(event) {\n      startY.value = event.touches[0].clientY;\n    }\n    function onTouchend(event) {\n      if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) {\n        isActive.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isHovering.value) onPointerleave();\n    }\n    const locationClasses = computed(() => {\n      return props.location.split(' ').reduce((acc, loc) => {\n        acc[`v-snackbar--${loc}`] = true;\n        return acc;\n      }, {});\n    });\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      const hasContent = !!(slots.default || slots.text || props.text);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-snackbar', {\n          'v-snackbar--active': isActive.value,\n          'v-snackbar--multi-line': props.multiLine && !props.vertical,\n          'v-snackbar--timer': !!props.timer,\n          'v-snackbar--vertical': props.vertical\n        }, locationClasses.value, positionClasses.value, props.class],\n        \"style\": [mainStyles.value, props.style]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"contentProps\": mergeProps({\n          class: ['v-snackbar__wrapper', themeClasses.value, colorClasses.value, roundedClasses.value, variantClasses.value],\n          style: [colorStyles.value],\n          onPointerenter,\n          onPointerleave\n        }, overlayProps.contentProps),\n        \"persistent\": true,\n        \"noClickAnimation\": true,\n        \"scrim\": false,\n        \"scrollStrategy\": \"none\",\n        \"_disableGlobalStack\": true,\n        \"onTouchstartPassive\": onTouchstart,\n        \"onTouchend\": onTouchend,\n        \"onAfterLeave\": onAfterLeave\n      }, scopeId), {\n        default: () => [genOverlays(false, 'v-snackbar'), props.timer && !isHovering.value && _createVNode(\"div\", {\n          \"key\": \"timer\",\n          \"class\": \"v-snackbar__timer\"\n        }, [_createVNode(VProgressLinear, {\n          \"ref\": timerRef,\n          \"color\": typeof props.timer === 'string' ? props.timer : 'info',\n          \"max\": props.timeout,\n          \"model-value\": countdown.time.value\n        }, null)]), hasContent && _createVNode(\"div\", {\n          \"key\": \"content\",\n          \"class\": \"v-snackbar__content\",\n          \"role\": \"status\",\n          \"aria-live\": \"polite\"\n        }, [slots.text?.() ?? props.text, slots.default?.()]), slots.actions && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              variant: 'text',\n              ripple: false,\n              slim: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-snackbar__actions\"\n          }, [slots.actions({\n            isActive\n          })])]\n        })],\n        activator: slots.activator\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VSnackbar.js.map","<template>\n    <v-app>\n        <v-snackbar v-model=\"context.showState\" :color=\"context.state.color\" multi-line>\n            {{ context.state.data }}\n        </v-snackbar>\n        <v-app-bar color=\"primary\">\n            <template v-slot:prepend>\n                <v-app-bar-nav-icon icon=\"mdi-apps\"\n                    :title=\"t('nav.panels')\" :aria-label=\"t('nav.panels')\"\n                    @click.stop=\"nav.drawer = !nav.drawer\"/>\n                <v-app-bar-nav-icon v-if=\"slots['app-nav'] && !nav.drawer2\"\n                    icon=\"mdi-menu\"\n                    @click=\"nav.drawer2 = true; nav.drawer = false\"/>\n            </template>\n            <v-app-bar-title id=\"app-bar-sheet-title\"/>\n            <v-app-bar-title id=\"app-bar-title\">\n                <slot name=\"title\" :context=\"context\"/>\n            </v-app-bar-title>\n            <v-spacer/>\n            <slot name=\"app-bar-left\" :context=\"context\"></slot>\n            <div id=\"app-bar-right\" class=\"mr-3\"></div>\n            <slot name=\"app-bar-right\" :context=\"context\"></slot>\n        </v-app-bar>\n        <ox-app-nav v-model:drawer=\"nav.drawer\" :items=\"context.data.nav\">\n            <template #prepend>\n                <a class=\"nav-home\">\n                    <v-img v-if=\"logo\" :src=\"logo\" class=\"logo\"/>\n                </a>\n                <slot name=\"nav-start\" :context=\"context\"></slot>\n            </template>\n            <template #append v-if=\"slots['nav-end']\">\n                <v-list v-model:opened=\"nav.opened\">\n                    <slot name=\"nav-end\" :context=\"context\"></slot>\n                </v-list>\n            </template>\n        </ox-app-nav>\n        <v-main>\n            <slot name=\"main\">\n                <v-tabs-window v-model=\"panels.panel\">\n                    <template #default=\"bind\">\n                        <slot name=\"default\" v-bind=\"bind\" :context=\"context\"></slot>\n                    </template>\n                </v-tabs-window>\n            </slot>\n        </v-main>\n    </v-app>\n</template>\n<style>\n.nav-home {\n    display: block;\n    text-align: left;\n}\n.nav-home .logo {\n    max-height: 4em;\n    margin: 1em 1em 0.4em 1em;\n}\n</style>\n<script setup lang=\"ts\">\nimport { useSlots, withDefaults, onErrorCaptured, onMounted } from 'vue'\nimport { computed, defineProps, inject, provide, reactive, watch } from 'vue'\n\nimport {useAppContext, usePanels, t} from 'ox'\nimport type {Model} from '../models'\nimport OxAppNav from './OxAppNav'\n\nconst slots = useSlots()\n\ninterface Props {\n    apiUrl?: string\n    logo?: string\n    dataEl?: string\n    models?: Model[]\n    data?: object\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n    dataEl: document.body.dataset?.appData\n})\n\nconst nav = reactive({drawer: true})\n\nconst context = useAppContext(props)\nconst panels = usePanels()\n\nonMounted(() => { panels.panel = context.data.panel })\n\nwatch(() => [context.state.state, context.state.data], () => {\n    context.showState = true\n})\n\nonErrorCaptured((err, instance, info) => {\n    context.state.error(`${err}`)\n})\n</script>\n","import { Fragment as _Fragment, createVNode as _createVNode, mergeProps as _mergeProps, createTextVNode as _createTextVNode } from \"vue\";\n// Styles\nimport \"./VAutocomplete.css\";\n\n// Components\nimport { VAvatar } from \"../VAvatar/index.js\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.js\";\nimport { VChip } from \"../VChip/index.js\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.js\";\nimport { VIcon } from \"../VIcon/index.js\";\nimport { VList, VListItem } from \"../VList/index.js\";\nimport { VMenu } from \"../VMenu/index.js\";\nimport { makeSelectProps } from \"../VSelect/VSelect.js\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.js\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.js\"; // Composables\nimport { useScrolling } from \"../VSelect/useScrolling.js\";\nimport { useTextColor } from \"../../composables/color.js\";\nimport { highlightResult, makeFilterProps, useFilter } from \"../../composables/filter.js\";\nimport { useForm } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\";\nimport { useItems } from \"../../composables/list-items.js\";\nimport { useLocale } from \"../../composables/locale.js\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.js\";\nimport { makeTransitionProps } from \"../../composables/transition.js\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { checkPrintable, deepEqual, ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, noop, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.js\"; // Types\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String]\n  },\n  clearOnSelect: Boolean,\n  search: String,\n  ...makeFilterProps({\n    filterKeys: ['title']\n  }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox'\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({\n    transition: false\n  })\n}, 'VAutocomplete');\nexport const VAutocomplete = genericComponent()({\n  name: 'VAutocomplete',\n  props: makeVAutocompleteProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:search': value => true,\n    'update:modelValue': value => true,\n    'update:menu': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = shallowRef(false);\n    const isPristine = shallowRef(true);\n    const listHasFocus = shallowRef(false);\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const selectionIndex = shallowRef(-1);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(() => vTextFieldRef.value?.color);\n    const search = useProxiedModel(props, 'search', '');\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(v === null ? [null] : wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    const form = useForm(props);\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, () => isPristine.value ? '' : search.value);\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value));\n      }\n      return filteredItems.value;\n    });\n    const hasChips = computed(() => !!(props.chips || slots.chip));\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection);\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value));\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title;\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || form.isReadonly.value || form.isDisabled.value);\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.ΨopenChildren.size) return;\n        if (v && menuDisabled.value) return;\n        _menu.value = v;\n      }\n    });\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    const listRef = ref();\n    const listEvents = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n      search.value = '';\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = true;\n    }\n    function onMousedownMenuIcon(e) {\n      if (menuDisabled.value) return;\n      if (isFocused.value) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      menu.value = !menu.value;\n    }\n    function onListKeydown(e) {\n      if (e.key !== ' ' && checkPrintable(e)) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function onKeydown(e) {\n      if (form.isReadonly.value) return;\n      const selectionStart = vTextFieldRef.value?.selectionStart;\n      const length = model.value.length;\n      if (['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key) && !model.value.some(_ref2 => {\n        let {\n          value\n        } = _ref2;\n        return value === displayItems.value[0].value;\n      })) {\n        select(displayItems.value[0]);\n      }\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next');\n      }\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (!props.multiple && hasSelectionSlot.value && model.value.length > 0 && !search.value) return select(model.value[0], false);\n        if (~selectionIndex.value) {\n          e.preventDefault();\n          const originalSelectionIndex = selectionIndex.value;\n          select(model.value[selectionIndex.value], false);\n          selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n        } else if (e.key === 'Backspace' && !search.value) {\n          selectionIndex.value = length - 1;\n        }\n        return;\n      }\n      if (!props.multiple) return;\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n        if (model.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          const searchLength = search.value?.length ?? null;\n          selectionIndex.value = -1;\n          vTextFieldRef.value?.setSelectionRange(searchLength, searchLength);\n        }\n      } else if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n        if (model.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value?.setSelectionRange(0, 0);\n        }\n      } else if (~selectionIndex.value && checkPrintable(e)) {\n        selectionIndex.value = -1;\n      }\n    }\n    function onChange(e) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === e.target.value);\n        if (item) {\n          select(item);\n        }\n      }\n    }\n    function onAfterEnter() {\n      if (props.eager) {\n        vVirtualScrollRef.value?.calculateVisibleItems();\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        isPristine.value = true;\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n      setTimeout(() => {\n        listHasFocus.value = true;\n      });\n    }\n    function onFocusout(e) {\n      listHasFocus.value = false;\n    }\n    function onUpdateModelValue(v) {\n      if (v == null || v === '' && !props.multiple && !hasSelectionSlot.value) model.value = [];\n    }\n    const isSelecting = shallowRef(false);\n\n    /** @param set - null means toggle */\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!item || item.props.disabled) return;\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => (props.valueComparator || deepEqual)(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n        if (props.clearOnSelect) {\n          search.value = '';\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        search.value = add && !hasSelectionSlot.value ? item.title : '';\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return;\n      if (val) {\n        isSelecting.value = true;\n        search.value = props.multiple || hasSelectionSlot.value ? '' : String(model.value.at(-1)?.props.title ?? '');\n        isPristine.value = true;\n        nextTick(() => isSelecting.value = false);\n      } else {\n        if (!props.multiple && search.value == null) model.value = [];\n        menu.value = false;\n        if (props.multiple || hasSelectionSlot.value) search.value = '';\n        selectionIndex.value = -1;\n      }\n    });\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return;\n      if (val) menu.value = true;\n      isPristine.value = !val;\n    });\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(item => model.value.some(s => item.value === s.value));\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    watch(model, value => {\n      if (!props.multiple && !hasSelectionSlot.value) {\n        search.value = value[0]?.title ?? '';\n      }\n    });\n    useRender(() => {\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, onUpdateModelValue],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"onChange\": onChange,\n        \"class\": ['v-autocomplete', `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`, {\n          'v-autocomplete--active-menu': menu.value,\n          'v-autocomplete--chips': !!props.chips,\n          'v-autocomplete--selection-slot': !!hasSelectionSlot.value,\n          'v-autocomplete--selecting-index': selectionIndex.value > -1\n        }, props.class],\n        \"style\": props.style,\n        \"readonly\": form.isReadonly.value,\n        \"placeholder\": isDirty ? undefined : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-autocomplete__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterEnter\": onAfterEnter,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, listEvents, props.listProps), {\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"key\": \"no-data\",\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value,\n              \"itemKey\": \"value\"\n            }, {\n              default: _ref3 => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref3;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: item.value,\n                  active: highlightFirst.value && index === 0 ? true : undefined,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: _ref4 => {\n                    let {\n                      isSelected\n                    } = _ref4;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  },\n                  title: () => {\n                    return isPristine.value ? item.title : highlightResult('v-autocomplete', item.title, getMatches(item)?.title);\n                  }\n                });\n              }\n            }), slots['append-item']?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            onKeydown(e) {\n              if (e.key !== 'Enter' && e.key !== ' ') return;\n              e.preventDefault();\n              e.stopPropagation();\n              onChipClose(e);\n            },\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : undefined;\n          if (hasSlot && !slotContent) return undefined;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": ['v-autocomplete__selection', index === selectionIndex.value && ['v-autocomplete__selection--selected', textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-autocomplete__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-autocomplete__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        'append-inner': function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-autocomplete__menu-icon\",\n            \"color\": vTextFieldRef.value?.fieldIconColor,\n            \"icon\": props.menuIcon,\n            \"onMousedown\": onMousedownMenuIcon,\n            \"onClick\": noop,\n            \"aria-label\": t(label.value),\n            \"title\": t(label.value),\n            \"tabindex\": \"-1\"\n          }, null) : undefined]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VAutocomplete.js.map","<template>\n    <v-autocomplete v-bind=\"attrs\"\n        :items=\"items\" :loading=\"list.state.isProcessing\"\n        v-model=\"value\"\n        v-model:search=\"search\"\n        >\n        <template v-for=\"_, slot in slots\" #[slot]=\"bind\">\n            <slot :name=\"slot\" v-bind=\"bind\"/>\n        </template>\n    </v-autocomplete>\n</template>\n<script setup lang=\"ts\">\nimport { isEqual } from 'lodash'\nimport { defineModel, inject, ref, onMounted, useAttrs, useSlots, watch } from 'vue'\nimport type {Repository} from 'pinia-orm'\nimport { VAutocomplete } from 'vuetify/components/VAutocomplete'\n\nimport { useModelList, query, splitValues, filterValues, excludeValues } from 'ox'\nimport type {IModelList} from 'ox'\n\nconst slots = useSlots()\nconst value = defineModel()\nconst search = ref(\"\")\n\ninterface IAutoCompleteProps extends IModelList {\n    /** Model's repository */\n    repo: Repository\n    /** Search lookup */\n    lookup: string\n}\n\n\nconst props = withDefaults(defineProps<IAutoCompleteProps>(), {\n    lookup: 'search',\n})\nconst attrs = useAttrs()\nconst repos = inject('repos')\n\n// list props are not expected to change, only `filters`\nconst listProps = excludeValues(props, ['repo', 'search'])\nconst {list, items} = useModelList({\n        ...listProps.value?.[1],\n        filters: props.filters || {},\n        save: false,\n        query: query(props.repo, repos),\n})\n\n\nfunction filtersUpdated(filters) {\n    filters[props.lookup] = search.value\n    if(!isEqual(list.filters, filters)) {\n        list.filters = {...props.filters}\n        list.filters[props.lookup] = search.value\n        list.load()\n    }\n}\n\nfunction searchUpdated(value) {\n    // v-autocomplete set search to \"<empty string>\"\n    // when items are updated, search is reset\n    const filter = list.filters[props.lookup]\n    const hasNext = list.nextUrl\n    if(value && value != '<empty string>' && value != filter) {\n        list.filters[props.lookup] = value\n        list.load().then(x => { search.value = value })\n    }\n}\n\nvar lastId = null\nfunction ensureItem(id) {\n    if(!id || list.findIndex(id) != -1)\n        return\n\n    if(list.findIndex(id) == -1 && lastId != id) {\n        lastId = id\n        list.load({id: id, append: 0})\n    }\n}\n\n// --- Watchers\nonMounted(() => {\n    if(props.filters && Object.values(props.filters).length)\n        filtersUpdated(props.filters)\n    else\n        list.load()\n    ensureItem(value.value)\n})\n\nwatch(() => props.filters, (val) => filtersUpdated(val))\nwatch(search, searchUpdated)\nwatch(value, (val, old) => val != old && ensureItem(val))\n</script>\n","<script>\nimport { h, computed, shallowRef, watch } from 'vue'\nimport { defineAsyncComponent } from 'ox'\n\nexport default {\n    props: {\n        src: String,\n        is: String,\n    },\n\n    setup(props) {\n        const component = shallowRef(null)\n\n        const is = computed(() => {\n            if(props.is)\n                return props.is\n\n            let name = props.src.substring(props.src.lastIndexOf('/')+1)\n            if(name)\n                name = name.substring(0, name.indexOf('.'))\n            if(!name)\n                throw Error(\n                    \"`is` not provided and could not be deducted from `src`.\"\n                )\n            return name\n        })\n\n        function reset() {\n            component.value = defineAsyncComponent(props.src, is.value)\n        }\n\n        watch(() => props.src, reset)\n\n        reset()\n        return () => h(component.value, props)\n    },\n}\n</script>\n","<template>\n    <template v-if=\"props.errors\">\n        <div class=\"text-error\" v-for=\"error in props.errors\">\n            <v-icon icon=\"mdi-alert-circle-outline\"/>\n            {{ error }}\n        </div>\n    </template>\n</template>\n<script setup>\nimport {defineProps} from 'vue'\n\nconst props = defineProps({\n    state: Object,\n    errors: Array\n})\n</script>\n","<template>\n    <form @submit.prevent=\"list.load()\" class=\"width-full\">\n        <v-toolbar dense color=\"transparent\">\n            <v-app-bar-nav-icon :icon=\"icon\" readonly/>\n            <v-text-field v-if=\"props.search && list.filters\"\n                :label=\"t('filters.search')\" density=\"compact\" class=\"ml-2\"\n                v-model=\"list.filters[props.search]\"\n                hide-details/>\n            <slot :list=\"list\" :filters=\"list.filters\"/>\n            <v-btn @click.stop=\"list.load()\" class=\"ml-2\" icon=\"mdi-check\"\n                :aria-label=\"$t('filters.apply')\"\n                :title=\"t('filters.apply')\"\n            />\n            <v-btn v-if=\"hasFilters\" @click.stop=\"reset\" icon=\"mdi-backspace\"\n                :aria-label=\"t('filters.reset')\"\n                :title=\"t('filters.reset')\"\n            />\n        </v-toolbar>\n    </form>\n</template>\n<script setup>\nimport { computed, defineProps, defineExpose, inject } from 'vue'\nimport { t } from 'ox'\n\nconst list = inject('list')\nconst props = defineProps({\n    search: String,\n})\n\nconst hasFilters = computed(() => {\n    const filters = list.filters\n    return filters && Object.entries(filters).some(\n        ([k,v]) => !k.startsWith('page') && !k.startsWith('ordering') && !!v\n    )\n})\nconst icon = computed(() => hasFilters.value ? 'mdi-filter-check' : 'mdi-filter-outline')\n\nfunction reset() {\n    list.filters = {}\n    list.load()\n}\n\ndefineExpose({ icon, hasFilters, reset})\n</script>\n","import { createVNode as _createVNode } from \"vue\";\n// Composables\nimport { makeComponentProps } from \"../../composables/component.js\";\nimport { createForm, makeFormProps } from \"../../composables/form.js\";\nimport { forwardRefs } from \"../../composables/forwardRefs.js\"; // Utilities\nimport { ref } from 'vue';\nimport { genericComponent, propsFactory, useRender } from \"../../util/index.js\"; // Types\nexport const makeVFormProps = propsFactory({\n  ...makeComponentProps(),\n  ...makeFormProps()\n}, 'VForm');\nexport const VForm = genericComponent()({\n  name: 'VForm',\n  props: makeVFormProps(),\n  emits: {\n    'update:modelValue': val => true,\n    submit: e => true\n  },\n  setup(props, _ref) {\n    let {\n      slots,\n      emit\n    } = _ref;\n    const form = createForm(props);\n    const formRef = ref();\n    function onReset(e) {\n      e.preventDefault();\n      form.reset();\n    }\n    function onSubmit(_e) {\n      const e = _e;\n      const ready = form.validate();\n      e.then = ready.then.bind(ready);\n      e.catch = ready.catch.bind(ready);\n      e.finally = ready.finally.bind(ready);\n      emit('submit', e);\n      if (!e.defaultPrevented) {\n        ready.then(_ref2 => {\n          let {\n            valid\n          } = _ref2;\n          if (valid) {\n            formRef.value?.submit();\n          }\n        });\n      }\n      e.preventDefault();\n    }\n    useRender(() => _createVNode(\"form\", {\n      \"ref\": formRef,\n      \"class\": ['v-form', props.class],\n      \"style\": props.style,\n      \"novalidate\": true,\n      \"onReset\": onReset,\n      \"onSubmit\": onSubmit\n    }, [slots.default?.(form)]));\n    return forwardRefs(form, formRef);\n  }\n});\n//# sourceMappingURL=VForm.js.map","<template>\n    <v-list v-model:opened=\"opened\" v-if=\"items?.length\">\n        <v-list-group v-for=\"item, index in items\" :key=\"index\" :value=\"index\">\n            <template #activator=\"{props}\">\n                <v-list-item v-bind=\"props\">\n                    <v-list-item-title>\n                        <slot name=\"item.title\" :item=\"item\"/>\n                    </v-list-item-title>\n                    <template #append>\n                        <div @click.stop=\"\">\n                            <slot name=\"item.actions\" :item=\"item\" :index=\"index\" v-bind=\"props\" />\n                            <template v-if=\"can.delete\">\n                                <v-btn type=\"button\" class=\"ml-2\" size=\"small\"\n                                    @click.stop.prevent=\"removeItem(index)\" color=\"error\"\n                                    :aria-label=\"t('actions.remove')\"\n                                    :title=\"t('actions.remove')\"\n                                    icon=\"mdi-delete\"/>\n                            </template>\n                        </div>\n                    </template>\n                </v-list-item>\n            </template>\n            <v-form :disabled=\"!can.change\">\n                <slot name=\"item\" :item=\"item\" :index=\"index\" :editable=\"can.change\"/>\n            </v-form>\n        </v-list-group>\n        <template v-if=\"can.add\">\n            <v-divider v-if=\"items.length\"/>\n            <v-list-group :value=\"-1\">\n                <template #activator=\"{props}\">\n                    <v-list-item v-bind=\"props\" :title=\"t('actions.add_item')\" prepend-icon=\"mdi-plus\"/>\n                </template>\n                <slot name=\"item\" :item=\"newItem\" :edit=\"true\"/>\n                <v-list-item v-if=\"newItem\">\n                    <div class=\"flex-row justify-right\">\n                        <v-btn size=\"small\" v-if=\"newItem\" @click=\"newItem={}\"\n                            color=\"secondary\" prepend-icon=\"mdi-backspace\"\n                            :aria-label=\"t('actions.discard')\">\n                            {{ t('actions.discard') }}\n                        </v-btn>\n                        <v-btn size=\"small\" v-if=\"newItem\" @click=\"addItem()\"\n                            color=\"primary\" prepend-icon=\"mdi-plus\"\n                            :aria-label=\"t('actions.add')\">\n                            {{ t('actions.add') }}\n                        </v-btn>\n                    </div>\n                </v-list-item>\n            </v-list-group>\n        </template>\n    </v-list>\n    <div v-else>{{ t(\"lists.empty\") }}</div>\n</template>\n<script setup lang=\"ts\">\n/**\n * This component provides simple list rendering and edition.\n */\nimport {computed, defineModel, defineProps, inject, ref, reactive, provide, useTemplateRef, toRefs} from \"vue\"\nimport {t} from \"ox\"\n\n/** v-model: the list of items. **/\nconst items = defineModel()\nconst user = inject('user')\nconst newItem = ref({})\nconst props = defineProps({\n    useModel: Function,\n    editable: Boolean,\n})\n\nconst can = computed(() => ({\n    add: props.editable && user.can([props.useModel, 'add']),\n    change: props.editable && user.can([props.useModel, 'change']),\n    delete: props.editable && user.can([props.useModel, 'delete']),\n}))\n\nconst opened = ref([]);\n\nif(!items.value?.length)\n    opened.value.push(-1)\n\nfunction addItem() {\n    items.value.push(newItem.value)\n    newItem.value = {}\n}\n\nfunction removeItem(index) {\n    if(confirm(t('actions.delete.confirm')))\n        props.delete && items.value.splice(index)\n}\n</script>\n","// Composables\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.js\"; // Utilities\nimport { VSlideGroupSymbol } from \"./VSlideGroup.js\";\nimport { genericComponent } from \"../../util/index.js\"; // Types\nexport const VSlideGroupItem = genericComponent()({\n  name: 'VSlideGroupItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slideGroupItem = useGroupItem(props, VSlideGroupSymbol);\n    return () => slots.default?.({\n      isSelected: slideGroupItem.isSelected.value,\n      select: slideGroupItem.select,\n      toggle: slideGroupItem.toggle,\n      selectedClass: slideGroupItem.selectedClass.value\n    });\n  }\n});\n//# sourceMappingURL=VSlideGroupItem.js.map","<template>\n    <v-sheet>\n    <v-slide-group>\n        <v-slide-group-item v-for=\"(header, idx) in props.headers\" :key=\"header.value\"\n            v-slot=\"{selectedClass}\">\n            <v-card width=\"400\" :class=\"['ma-3', selectedClass]\"\n                    :color=\"color(idx)\" lines=\"two\">\n                <v-card-title>{{ header.title }}</v-card-title>\n                <v-list :bg-color=\"color(idx)\">\n                    <template v-if=\"sorted && sorted[header.value]\">\n                        <template v-for=\"item in sorted[header.value]\" :key=\"item.id\">\n                            <slot name=\"item\" :header=\"header\" :item=\"item\">\n                                <v-list-item :title=\"item[props.itemTitle]\"\n                                        :value=\"props.itemValue && item[props.itemValue]\"\n                                        @click=\"emits('click', item)\">\n                                    <template #append>\n                                        <slot name=\"item.action\"></slot>\n                                    </template>\n                                </v-list-item>\n                            </slot>\n                        </template>\n                    </template>\n                </v-list>\n            </v-card>\n        </v-slide-group-item>\n    </v-slide-group>\n    </v-sheet>\n</template>\n<script setup>\nimport { computed, defineEmits, defineProps, inject } from 'vue'\n\nconst emits = defineEmits(['click'])\nconst list = inject('list')\nconst items = inject('items')\n\nconst props = defineProps({\n    itemTitle: String,\n    itemValue: String,\n    field: String,\n    headers: Array,\n    colors: {type: Array, default: () => [\n        'purple', 'blue', 'teal', 'lime', 'orange', 'blue-gray',\n        'pink', 'indigo', 'cyan', 'light-green', 'amber', 'brown',\n        'red', 'deep-purple', 'light-blue', 'green', 'yellow', 'deep-orange'\n    ]},\n    colorVariant: {type: String, default: 'lighten-2'},\n})\n\n\nfunction color(idx) {\n    idx = idx % props.colors.length\n    if(props.colorVariant)\n        return props.colors[idx] + '-' + props.colorVariant\n    return props.colors[idx]\n}\n\n\nfunction assign(result, item, val) {\n    if(result[val])\n        !result[val].includes(item) && result[val].push(item)\n    else\n        result[val] = [item]\n}\n\nconst sorted = computed(() => {\n    const result = {}\n    if(items.value)\n        for(var item of items.value) {\n            const vals = item[props.field]\n            if(Array.isArray(vals)) {\n                if(vals.length)\n                    for(var val of vals)\n                        assign(result, item, val)\n                else\n                    assign(result, item, null)\n            }\n            else\n                assign(result, item, vals)\n        }\n    return result\n})\n</script>\n","<template>\n    <v-data-table-server\n            :items=\"items\" item-index=\"id\"\n            :items-length=\"list.count || items.length\"\n            :items-per-page=\"props.itemsPerPage\"\n            :loading=\"list.state?.isProcessing\"\n            :headers=\"headers\"\n            :no-data-text=\"t('lists.empty')\"\n            class=\"align-top-table\"\n            @update:options=\"updateOptions\">\n        <template v-slot:loading>\n            <v-skeleton-loader type=\"table-row@10\"></v-skeleton-loader>\n        </template>\n\n        <template v-for=\"(_, name) in itemSlots\" :key=\"name\" v-slot:[name]=\"bind\">\n            <slot :name=\"name\" v-bind=\"bind\"/>\n        </template>\n\n        <template #item.actions=\"{item}\">\n            <ox-action v-if=\"user.can([item.constructor, 'change'])\"\n                icon=\"mdi-pencil\" button\n                :title=\"t('actions.edit')\"\n                :item=\"item\"\n                :run=\"show\"/>\n            <ox-action v-else-if=\"user.can([item.constructor, 'view'])\"\n                icon=\"mdi-eye-outline\" button\n                :title=\"t('actions.edit')\"\n                :item=\"item\"\n                :run=\"show\"/>\n            <slot name=\"item.actions\" :value=\"item\" :dense=\"true\" :button=\"true\"/>\n        </template>\n    </v-data-table-server>\n</template>\n<style>\n.align-top-table td {\n  /*vertical-align: top;*/\n}\n</style>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, ref, useSlots } from 'vue'\n\nimport { t, tKeys } from 'ox'\n// import { Permissions } from '../models'\nimport { filterSlots } from '../utils'\nimport OxAction from './OxAction.vue'\n\nconst slots = useSlots()\nconst itemSlots = filterSlots(slots, 'item.', {exclude: ['item.actions']})\n\nconst panel = inject('panel')\nconst list = inject('list')\nconst items = inject('items')\nconst user = inject('user')\n\nconst props = defineProps({\n    // list: Object,\n    /** Table headers */\n    headers: Array,\n    /** If True, allow user to edit (display edit button) */\n    edit: Boolean,\n})\n\n\nconst headers = computed(() => {\n    return props.headers.reduce((dst, field) => {\n        dst.push(\n            (typeof(field) == 'string') ?\n            {key: field, title: t(tKeys.field(field))} : field\n        )\n        return dst\n    }, [])\n})\n\n\nfunction updateOptions(event) {\n    list.filters.page = event.page,\n    list.filters.page_size = event.itemsPerPage,\n    list.filters.ordering = event.sortBy.map(({key, order}) => order == 'asc' ? key : `-${key}`)\n}\n\nfunction show(user, item) {\n    panel.show({view: 'detail.edit', value: item})\n}\n</script>\n","<template>\n    <v-alert v-if=\"props.state.isNone && slots.none\" type=\"info\" variant=\"tonal\" class=\"mb-3\"\n            :state=\"state\" :title=\"noneTitle\">\n        <slot name=\"none\" :state=\"state\"></slot>\n    </v-alert>\n    <v-alert v-else-if=\"displayProcessing\" type=\"info\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"processingTitle\">\n        <slot name=\"processing\" :state=\"state\">\n            Data are being sent to server, please be patient. If this message persist you might wan't to retry.\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isError\" type=\"error\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"errorTitle\" >\n        <slot name=\"error\" :state=\"state\">\n            Oups... something wrong happened.\n        </slot>\n        <slot name=\"error-detail\" :state=\"state\">\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isOk\" type=\"success\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"okTitle\">\n        <slot name=\"ok\" :state=\"state\">\n            <p>Congrats! Data have been updated.</p>\n        </slot>\n        <template v-if=\"messages\">\n            <v-divider/>\n            <p v-for=\"message in messages\">{{ message }}</p>\n        </template>\n        <slot name=\"ok-detail\" :state=\"state\"></slot>\n    </v-alert>\n    <slot :state=\"props.state\"></slot>\n</template>\n<script setup>\n// TODO: expandable detail error\nimport {defineProps, useSlots, computed, ref, watch} from 'vue'\nimport {VAlert} from 'vuetify/components/VAlert'\nimport {States} from '../utils/state'\n\nconst slots = useSlots()\nconst props = defineProps({\n    state: Object,\n    delay: {type: Boolean, default: false},\n    okTitle: {type: String, default: \"\"},\n    noneTitle: {type: String, default: \"\"},\n    errorTitle: {type: String, default: \"Oups...\"},\n    processingTitle: {type: String, default: \"Processing...\"},\n})\n\n\nlet timeoutId = null\nlet expired = ref(false)\n\nwatch(() => props.state.state, (val) => {\n    if(timeoutId !== null)\n        window.clearTimeout(timeoutId)\n\n    if(!props.delay)\n        return\n\n    if(val == States.PROCESSING) {\n        expired.value = false\n        window.setTimeout(() => { expired.value = true }, 5000)\n    }\n})\n\nconst displayProcessing = computed(() => props.state?.isProcessing && (!props.delay || expired.value))\nconst messages = computed(() => props.state?.data?.messages)\n\n\n\n</script>\n","<template>\n    <div class=\"text-right\">\n        <v-btn color=\"error\" class=\"me-2\" :prepend-icon=\"props.resetIcon\"\n                @click=\"emit('reset')\"\n                :disabled=\"props.disabled\">\n            <slot name=\"reset\">{{ props.resetLabel }}</slot>\n        </v-btn>\n        <v-btn v-if=\"props.state.isSending\"\n                color=\"primary\" prepend-icon=\"mdi-content-save\" disabled>\n            Saving\n        </v-btn>\n        <v-btn v-else color=\"primary\" :prepend-icon=\"props.validateIcon\"\n                @click=\"emit('validate')\"\n                :disabled=\"props.disabled || props.validateDisabled\">\n            <slot name=\"validate\">{{ props.validateLabel }}</slot>\n        </v-btn>\n        </div>\n</template>\n<script setup>\nimport {defineEmits, defineProps} from 'vue'\nimport {VBtn} from 'vuetify/components/VBtn'\n\nconst emit = defineEmits(['validate', 'reset'])\nconst props = defineProps({\n    resetLabel: {type: String, default: \"Reset\"},\n    resetIcon: {type: String, default: \"mdi-close-circle\"},\n    validateLabel: {type: String, default: \"Save\"},\n    validateIcon: {type: String, default: \"mdi-content-save\"},\n    disabled: {type: Boolean, default: false},\n    state: {type: Object, default: () => State.none()},\n    validateDisabled: {type: Boolean, default: false},\n})\n</script>\n","<template>\n    <ox-state-alert :state=\"state\">\n        <template #none=\"{state}\">\n            <p>Please enter your credentials in order too proceed...</p>\n        </template>\n        <template #ok-detail=\"{state}\">\n            <p v-if=\"props.next\">You soon will be redirected to <i>{{ props.next }}</i></p>\n        </template>\n        <template #error=\"{state}\">\n            <ox-field-details :errors=\"state.data?.username\"/>\n            <ox-field-details :errors=\"state.data?.password\"/>\n        </template>\n    </ox-state-alert>\n    <template v-if=\"!state.isOk\">\n        <v-text-field variant=\"underlined\"\n                label=\"Enter login\" v-model=\"credentials.username\"\n                @keyup.enter.stop=\"passwordInput.focus()\"\n                >\n        </v-text-field>\n        <v-text-field variant=\"underlined\" ref=\"password\"\n                label=\"Enter password\" v-model=\"credentials.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                @click:append=\"showPassword = !showPassword\"\n                @keyup.enter.stop=\"login()\"\n                >\n        </v-text-field>\n        <div class=\"text-right mt-3\">\n            <slot name=\"default\" :value=\"credentials.password\">\n                <ox-validation-btn v-if=\"credentials.username && credentials.password\"\n                    validate-label=\"Login!\"\n                    @validate=\"login()\" @reset=\"reset()\"\n                    :state=\"state\"/>\n            </slot>\n        </div>\n    </template>\n</template>\n<script setup>\nimport {computed, inject, ref, reactive, defineModel, defineProps, useTemplateRef} from 'vue'\n\nimport OxStateAlert from './OxStateAlert'\nimport OxValidationBtn from './OxValidationBtn.vue'\nimport OxFieldDetails from './OxFieldDetails.vue'\nimport config from '../config'\n\nimport State from '../utils/state'\nimport {reset as $reset} from '../utils'\nimport {User} from '../models/auth'\n\n\nconst passwordInput = useTemplateRef('password')\n\nconst props = defineProps({\n    next: {type: String},\n    url: {type: String},\n})\n\nconst emit = defineEmits(['save', 'saved'])\nconst credentials = reactive({\n    username: '',\n    password: '',\n})\nconst showPassword = ref(false)\nconst state = reactive(new State())\n\nfunction reset(resetState=true) {\n    $reset(credentials, {\"username\": \"\", password: \"\"})\n    resetState && state.none()\n}\n\nasync function login() {\n    state.processing()\n\n    try {\n        const resp = await fetch(props.url, {\n            method: \"POST\",\n            headers: config.axiosConfig.headers,\n            body: JSON.stringify(credentials),\n        })\n        if(resp.status == 200) {\n            credentials.credentials = \"\"\n            credentials.password = \"\"\n            state.ok(await resp.json())\n\n            if(props.next)\n                window.location.href = props.next\n        }\n        else\n            state.error(await resp.json())\n    }\n    catch(error) {\n        state.ok(error?.message || error)\n    }\n}\n</script>\n","<template>\n    <v-tabs-window-item :value=\"props.name\">\n        <ox-state-alert v-if=\"props.state\" :state=\"props.state\" delay/>\n        <v-sheet class=\"ma-4\">\n            <Teleport to=\"#app-bar-sheet-title\" :disabled=\"!mounted || panels.panel != props.name\">\n                <v-icon v-if=\"props.icon\" :icon=\"props.icon\"/>\n                {{ props.title }}\n            </Teleport>\n\n            <Teleport to=\"#app-bar-right\" :disabled=\"!mounted || panels.panel != props.name\">\n                <slot name=\"append-title\"/>\n                <v-btn v-if=\"props.help\" class=\"ml-3\"\n                    :href=\"props.help\" panels=\"new\"\n                    icon=\"mdi-information-outline\" />\n            </Teleport>\n\n            <slot name=\"top\"/>\n\n            <slot name=\"default\">\n                <template v-if=\"views\">\n                    <v-window v-model=\"panel.view\">\n                        <template v-for=\"(name, slot) in views\" :key=\"name\">\n                            <v-window-item :value=\"name\">\n                                <slot :name=\"slot\"></slot>\n                            </v-window-item>\n                        </template>\n                    </v-window>\n                </template>\n            </slot>\n\n            <slot name=\"bottom\"></slot>\n        </v-sheet>\n    </v-tabs-window-item>\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject, onMounted, onUnmounted, ref, useSlots, watch } from 'vue'\nimport {filterSlots} from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport type {IPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst props = defineProps<IPanelProps>()\nconst views = filterSlots(slots, 'views.')\n\n// ensure teleport will be set after component has been mounted\nconst mounted = ref(false)\nonMounted(() => { mounted.value = true })\nonUnmounted(() => { mounted.value = false })\n\nconst panels = inject('panels')\nconst panel = inject('panel')\n</script>\n","<template>\n    <template v-if=\"tabs && Object.keys(tabs).length\">\n        <v-tabs v-model=\"tab\">\n            <slot name=\"tab\" v-if=\"slots.default\">\n                <v-tab :text=\"props?.title\" value=\"default\"/>\n            </slot>\n            <template v-for=\"(value, name) in tabs\">\n                <v-tab :value=\"value\">\n                    <slot :name=\"name\"/>\n                </v-tab>\n            </template>\n        </v-tabs>\n        <v-tabs-window v-model=\"tab\">\n            <v-tabs-window-item value=\"default\" v-if=\"slots.default\">\n                <slot name=\"default\"/>\n            </v-tabs-window-item>\n            <template v-for=\"(value, name) in windows\">\n                <v-tabs-window-item :value=\"value\">\n                    <slot :name=\"name\"/>\n                </v-tabs-window-item>\n            </template>\n        </v-tabs-window>\n    </template>\n    <template v-else>\n        <slot name=\"default\"/>\n    </template>\n</template>\n<script setup lang=\"ts\">\n/**\n * This represent a single view inside a Panel.\n *\n * A view can have multiple windows, in such case it is displayed using tabs.\n * Tabs are hidden when there is only one window slot in it.\n *\n * The default slots are `default` (for the content) and `tab.default` (for the tab).\n * Other slots can be named following the convention: `window.[name]` and `tab.[name]`.\n */\nimport { ref, defineProps, onMounted, useSlots } from 'vue'\nimport { filterSlots } from 'ox'\n\nconst props = defineProps({\n    /** default tab title */\n    title: String,\n})\n\n/** Current tab/window value */\nconst tab = ref(null)\n\nconst slots = useSlots()\nconst tabs = filterSlots(slots, \"tab.\", {exclude: \"tab.default\"})\nconst windows = filterSlots(slots, \"window.\")\n</script>\n","<template>\n    <ox-state-alert :state=\"editor.state\"/>\n    <div class=\"mb-3\">\n        <ox-validation-btn v-if=\"editable && edited\"\n            @validate=\"editor.save()\" @reset=\"editor.discard()\" :state=\"editor.state\" :validate-disabled=\"!editor.valid\"/>\n    </div>\n    <v-container class=\"ox-model-edit\">\n        <v-form v-model=\"editor.valid\" :disabled=\"!editable\">\n            <slot name=\"default\" v-bind=\"bind\"/>\n        </v-form>\n        <slot name=\"append\" v-bind=\"bind\"/>\n    </v-container>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineExpose, inject, toRefs, watch } from 'vue'\nimport { t, useModelEditor } from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport OxValidationBtn from './OxValidationBtn.vue'\n\nimport type {IModelEditorProps} from '../controllers/modelEditor'\n\nconst context = inject('context')\n\nconst props = defineProps<IModelEditorProps>()\nconst {editor, edited} = useModelEditor({props})\n\nconst editable = computed(() => context.user.can([editor.repo.use, 'change']))\n\nconst bind = computed(() => ({\n    editor, edited,\n    editable: editable.value,\n    value: editor.value,\n    model: editor.repo.use\n}))\n\ndefineExpose({editor, edited})\n</script>\n","<template>\n    <ox-panel :name=\"props.name\" :title=\"panel.title\" :icon=\"panel.icon\"\n            :state=\"list.state\" :index=\"props.index\">\n        <template #append-title>\n            <slot name=\"append-title\" v-bind=\"bind\"/>\n\n            <template v-if=\"panel.view.startsWith('list.')\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\"\n                        density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.list\" v-bind=\"bind\"/>\n                    <v-btn v-if=\"filters\"\n                        :title=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        :aria-label=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        @click=\"showFilters = !showFilters\" :active=\"showFilters\">\n                        <v-icon :icon=\"filters.icon\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n            <template v-else-if=\"panel.view.startsWith('detail.') && panel.value\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\" density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.detail\" v-bind=\"bind\"/>\n\n                    <template v-if=\"panel.view == 'detail.edit' && panel.value\">\n                        <v-menu>\n                            <template #activator=\"{props}\">\n                                <v-btn prepend-icon=\"mdi-dots-vertical\" v-bind=\"props\">\n                                    {{ t('actions') }}\n                                </v-btn>\n                            </template>\n                            <v-list>\n                                <slot name=\"item.actions\" :value=\"panel.value\"/>\n                            </v-list>\n                        </v-menu>\n                    </template>\n\n                    <v-btn :disabled=\"!prev\"\n                            :title=\"t('prev')\" :aria-label=\"t('prev')\"\n                            @click.stop=\"panel.show({value: prev})\">\n                        <v-icon icon=\"mdi-chevron-left\"/>\n                    </v-btn>\n                    <v-btn :disabled=\"!next\"\n                            :title=\"t('next')\" :aria-label=\"t('next')\"\n                            @click.stop=\"panel.show({value: next})\">\n                        <v-icon icon=\"mdi-chevron-right\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n\n            <v-btn-toggle class=\"ml-3\" color=\"secondary\" v-model=\"panel.view\" density=\"compact\" variant=\"tonal\" mandatory>\n                <!-- TODO: permission check -->\n                <v-btn value=\"list.table\"\n                        :title=\"t('panels.nav.table')\"\n                        :aria-label=\"t('panels.nav.table')\">\n                    <v-icon>mdi-table</v-icon>\n                </v-btn>\n                <v-btn value=\"list.cards\" v-if=\"slots['views.list.cards']\"\n                        :title=\"t('panels.nav.cards')\"\n                        :aria-label=\"t('panels.nav.cards')\">\n                    <v-icon>mdi-card-account-details</v-icon>\n                </v-btn>\n                <v-btn value=\"list.kanban\" v-if=\"slots['views.list.kanban']\"\n                        :title=\"t('panels.nav.kanban')\"\n                        :aria-label=\"t('panels.nav.kanban')\">\n                    <v-icon>mdi-view-column</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.add\" v-if=\"editSlots\"\n                        @click.stop=\"panel.create()\"\n                        :title=\"t('panels.nav.add')\"\n                        :aria-label=\"t('panels.nav.add')\">\n                    <v-icon>mdi-plus-box</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.edit\" v-if=\"slots['views.detail.edit'] || editSlots\"\n                        :disabled=\"!panel.value?.id\"\n                        :title=\"t('panels.nav.edit')\"\n                        :aria-label=\"t('panels.nav.edit')\">\n                    <v-icon>mdi-pencil</v-icon>\n                </v-btn>\n                <slot name=\"nav.views\" v-bind=\"bind\"/>\n            </v-btn-toggle>\n        </template>\n\n        <template #top>\n            <v-alert v-if=\"props.warning\" type=\"warning\" variant=\"tonal\" :text=\"props.warning\" />\n            <slot name=\"top\"/>\n            <ox-list-filters ref=\"filters\"\n                    v-show=\"panel.view.startsWith('list.') && showFilters\"\n                    :search=\"props.search\"\n                    teleport-to=\"#panel-list-actions\">\n                <template #default=\"bind\">\n                    <slot name=\"list.filters\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-filters>\n        </template>\n\n        <!-- list.table is always provided -->\n        <template #views.list.table v-if=\"!slots['views.list.table']\">\n            <ox-list-table :headers=\"headers\">\n                <template v-for=\"(_, name) in itemSlots\" v-slot:[name]=\"bind\" :key=\"name\">\n                    <slot :name=\"name\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-table>\n        </template>\n\n        <template v-for=\"(name, slot) in viewsListSlots\" v-slot:[slot]>\n            <slot :name=\"slot\" v-bind=\"bind\"/>\n        </template>\n\n        <!-- FIXME: views.detail.edit shall be sloted too, not only nested ones? -->\n        <template #views.detail.edit v-if=\"slots['views.detail.edit'] || editSlots\">\n            <ox-view :title=\"t(`models.${panel.model.entity}`)\">\n                <template v-for=\"(name, slot) in editSlots\" #[name]>\n                    <slot :name=\"slot\" :saved=\"saved\" :value=\"panel.value\"/>\n                </template>\n            </ox-view>\n        </template>\n    </ox-panel>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, useTemplateRef, useSlots, toRefs, withDefaults, watch } from 'vue'\nimport { Teleport } from 'vue'\n\nimport OxAction from './OxAction.vue'\nimport OxListFilters from './OxListFilters.vue'\nimport OxListTable from './OxListTable.vue'\nimport OxPanel from './OxPanel.vue'\nimport OxView from './OxView'\nimport OxModelEdit from './OxModelEdit.vue'\n\nimport {t, filterSlots, useModelPanel} from 'ox'\nimport type {IModelPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst viewsListSlots = filterSlots(slots, 'views.list.')\nconst itemSlots = filterSlots(slots, 'item.')\nconst editSlots = filterSlots(slots, 'views.detail.edit.')\n\nconst filters = useTemplateRef('filters')\nconst props = withDefaults(defineProps<IModelPanelProps>(), {\n    index: 'list.table',\n    search: 'search',\n    fetchRelations: true,\n})\n\nconst context = inject('context')\nconst {panel, list, items, next, prev} = inject('panel') ?? useModelPanel({props})\nconst panels = panel.panels\n\nconst canEdit = computed(() =>  context.user.can([panel.model, panel.value?.id ? \"change\": \"add\"]))\n\nconst {showFilters} = toRefs(panel)\n\n/** List table headers */\nconst headers = computed(() => [\n    ...props.headers,\n    {key: 'actions', title: t('actions')},\n])\n\n/** This is called by editors once object has been saved */\nfunction saved(item) {\n    panel.value.value = item\n}\n\nconst bind = computed(() => {\n    return ({\n        panel, panels, list, items, context,\n        value: panel.value,\n    })\n})\n\nwatch(() => Object.values(list.filters), () => list.load())\n</script>\n","import * as ox from './ox'\nimport {components as vendor} from 'ox/vendor'\n\nexport * from './ox'\n\n\n/**\n * This is the base app config used for Oxylus' Vue based applicationns.\n *\n * It includes Oxylus components and some Vuetify's ones.\n *\n *\n * @example\n * // Example app.ts for another application.\n *\n * import {App} from 'ox/components'\n * import * as components from './components'\n *\n * export default {\n *     extends: App,\n *     components,\n * }\n */\nexport const App = {\n    el: \"#app\",\n    delimiters: ['[[', ']]'],\n    components: {...ox, ...vendor},\n}\n"],"names":["props","__props","emits","__emit","context","inject","run","processing","allowed","useAction","panel","repos","user","item","useSlots","ref","panels","computed","shouldShow","x","show","vals","drawer","_useModel","opened","items","getOpened","val","updateOpened","onMounted","watch","useCountdown","milliseconds","time","shallowRef","timer","clear","reset","nextTick","start","el","style","interval","startTime","elapsed","onScopeDispose","makeVSnackbarProps","propsFactory","makeLocationProps","makePositionProps","makeRoundedProps","makeVariantProps","makeThemeProps","omit","makeVOverlayProps","VSnackbar","genericComponent","v","_ref","slots","isActive","useProxiedModel","positionClasses","usePosition","scopeId","useScopeId","themeClasses","provideTheme","colorClasses","colorStyles","variantClasses","useVariant","roundedClasses","useRounded","countdown","overlay","timerRef","isHovering","startY","mainStyles","hasLayout","VuetifyLayoutKey","useToggleScope","layout","useLayout","watchEffect","startTimeout","activeTimeout","timeout","element","refElement","clearTimeout","onPointerenter","onPointerleave","onTouchstart","event","onTouchend","onAfterLeave","locationClasses","acc","loc","useRender","overlayProps","VOverlay","hasContent","_createVNode","_mergeProps","$event","mergeProps","genOverlays","VProgressLinear","_a","_b","VDefaultsProvider","forwardRefs","nav","reactive","useAppContext","usePanels","onErrorCaptured","err","instance","info","makeVAutocompleteProps","makeFilterProps","makeSelectProps","makeVTextFieldProps","makeTransitionProps","VAutocomplete","focused","value","t","useLocale","vTextFieldRef","isFocused","isPristine","listHasFocus","vMenuRef","vVirtualScrollRef","selectionIndex","transformIn","transformOut","useItems","textColorClasses","textColorStyles","useTextColor","search","model","wrapInArray","transformed","counterValue","form","useForm","filteredItems","getMatches","useFilter","displayItems","filteredItem","s","hasChips","hasSelectionSlot","selectedValues","selection","highlightFirst","menuDisabled","_menu","menu","label","listRef","listEvents","useScrolling","onClear","e","onMousedownControl","onMousedownMenuIcon","onListKeydown","checkPrintable","onKeydown","selectionStart","length","_ref2","select","originalSelectionIndex","prev","searchLength","_c","_d","next","_e","onChange","matchesSelector","onAfterEnter","onFocusin","onFocusout","onUpdateModelValue","isSelecting","set","index","deepEqual","add","oldVal","IN_BROWSER","newVal","hasList","isDirty","textFieldProps","VTextField","_Fragment","VMenu","VList","VListItem","VVirtualScroll","_ref3","itemRef","itemProps","_ref4","isSelected","VCheckboxBtn","VAvatar","VIcon","highlightResult","onChipClose","slotProps","hasSlot","slotContent","ensureValidVNode","VChip","_createTextVNode","_len","args","_key","noop","attrs","useAttrs","listProps","excludeValues","list","useModelList","query","filtersUpdated","filters","isEqual","searchUpdated","filter","lastId","ensureItem","id","old","_sfc_main","component","is","name","defineAsyncComponent","h","hasFilters","k","icon","__expose","makeVFormProps","makeComponentProps","makeFormProps","VForm","emit","createForm","formRef","onReset","onSubmit","ready","valid","newItem","can","addItem","removeItem","VSlideGroupItem","makeGroupItemProps","slideGroupItem","useGroupItem","VSlideGroupSymbol","color","idx","assign","result","sorted","itemSlots","filterSlots","headers","dst","field","tKeys","updateOptions","key","order","expired","States","displayProcessing","messages","passwordInput","useTemplateRef","credentials","showPassword","state","State","resetState","$reset","login","resp","config","error","views","mounted","onUnmounted","tab","tabs","windows","editor","edited","useModelEditor","editable","bind","viewsListSlots","editSlots","useModelPanel","showFilters","toRefs","saved","App","ox","vendor"],"mappings":"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","x_google_ignoreList":[5,7,12,14]}
