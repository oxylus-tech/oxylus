{"version":3,"file":"ox.js","sources":["../../../assets/ox/src/models/index.ts","../../../assets/node_modules/.pnpm/@pinia-orm+axios@1.10.2_axios@1.9.0_pinia-orm@1.10.2_pinia@2.3.1_typescript@5.8.3_vue@3_820808fc56c26caa850f1c1b6b7ed0f0/node_modules/@pinia-orm/axios/dist/index.mjs","../../../assets/ox/src/composables/models.ts","../../../assets/ox/src/composables/app.ts","../../../assets/ox/src/composables/actions.ts","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/composables/date/adapters/vuetify.js","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/composables/date/date.js","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/framework.js","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/blueprints/md3.js","../../../assets/node_modules/.pnpm/vuetify@3.8.4_typescript@5.8.3_vite-plugin-vuetify@2.1.1_vue@3.5.13_typescript@5.8.3_/node_modules/vuetify/lib/util/colors.js","../../../assets/ox/src/composables/init.ts","../../../assets/ox/src/controllers/query.ts","../../../assets/ox/src/controllers/editor.ts","../../../assets/ox/src/controllers/panel.ts","../../../assets/ox/src/controllers/panels.ts","../../../assets/ox/src/controllers/modelController.ts","../../../assets/ox/src/controllers/modelList.ts","../../../assets/ox/src/controllers/modelEditor.ts","../../../assets/ox/src/controllers/modelPanel.ts","../../../assets/ox/src/composables/controllers.ts","../../../assets/ox/src/composables/rules.ts","../../../assets/ox/src/composables/index.ts"],"sourcesContent":["import {Relation, BelongsTo, HasMany, HasManyBy, HasOne} from 'pinia-orm'\nimport type {Repository, PrimaryKey, Model as $Model} from 'pinia-orm'\n\nimport type { ClassType } from '../utils'\n\nexport * from './model'\nexport * from './auth'\nimport type { Model } from './model'\n\n/** Shortcut to an object of repositories by model entity. */\nexport type Repos={[s: string]: Repository<Model>}\n\n/** Generic type for typing model classes. **/\nexport type ModelType<T extends Model> = ClassType<T>\n\n\n/** Return relation based on field name or Relation field. */\nexport function asRelation<M extends $Model>(repo: Repository<M>, relation: string|Relation): Relation|null {\n    if(typeof relation == \"string\") {\n        const fields = repo.use?.fields()\n        const field = fields && fields[relation] || null\n        relation = field instanceof Relation ? field : null\n    }\n    return relation\n}\n\n/**\n * For the provided relation, return the field name providing ids of related\n * models.\n */\nexport function getSourceKey(field: Relation): PrimaryKey|null  {\n    if(field instanceof HasMany || field instanceof HasManyBy || field instanceof HasOne || field instanceof BelongsTo)\n        return field.foreignKey\n    return null\n}\n","import { Repository, config, useRepo, definePiniaOrmPlugin } from 'pinia-orm';\nimport { getActivePinia } from 'pinia';\n\nclass Response {\n  /**\n   * The repository that called the request.\n   */\n  repository;\n  /**\n   * The request configuration.\n   */\n  config;\n  /**\n   * The axios response instance.\n   */\n  response;\n  /**\n   * Entities created by Pinia ORM.\n   */\n  entities = null;\n  /**\n   * Whether if response data is saved to the store or not.\n   */\n  isSaved = false;\n  /**\n   * Create a new response instance.\n   */\n  constructor(repository, config, response) {\n    this.repository = repository;\n    this.config = config;\n    this.response = response;\n  }\n  /**\n   * Save response data to the store.\n   */\n  async save() {\n    const data = this.getDataFromResponse();\n    if (!this.validateData(data)) {\n      console.warn(\n        \"[Pinia ORM Axios] The response data could not be saved to the store because it is not an object or an array. You might want to use `dataTransformer` option to handle non-array/object response before saving it to the store.\"\n      );\n      return;\n    }\n    let method = this.config.persistBy || \"save\";\n    if (!this.validatePersistAction(method)) {\n      console.warn(\n        '[Pinia ORM Axios] The \"persistBy\" option configured is not a recognized value. Response data will be persisted by the default `save` method.'\n      );\n      method = \"save\";\n    }\n    const result = await this.repository[method](data);\n    this.entities = Array.isArray(result) ? result : [result];\n    this.isSaved = true;\n  }\n  /**\n   * Delete the entity record where the `delete` option is configured.\n   */\n  async delete() {\n    if (this.config.delete === void 0) {\n      throw new Error(\n        \"[Pinia ORM Axios] Could not delete records because the `delete` option is not set.\"\n      );\n    }\n    await this.repository.query().destroy(this.config.delete);\n  }\n  /**\n   * Get the response data from the axios response object. If a `dataTransformer`\n   * option is configured, it will be applied to the response object. If the\n   * `dataKey` option is configured, it will return the data from the given\n   * property within the response body.\n   */\n  getDataFromResponse() {\n    if (this.config.dataTransformer) {\n      return this.config.dataTransformer(this.response);\n    }\n    if (this.config.dataKey) {\n      return this.response.data[this.config.dataKey];\n    }\n    return this.response.data;\n  }\n  /**\n   * Get persist options if any set in config.\n   */\n  // protected getPersistOptions (): PersistOptions | undefined {\n  //   const persistOptions = this.config.persistOptions\n  //\n  //   if (!persistOptions || typeof persistOptions !== 'object') {\n  //     return\n  //   }\n  //\n  //   return Object.keys(persistOptions)\n  //     .filter(this.validatePersistAction) // Filter to avoid polluting the payload.\n  //     .reduce((carry, key) => {\n  //       carry[key] = persistOptions[key]\n  //       return carry\n  //     }, {} as PersistOptions)\n  // }\n  /**\n   * Validate the given data to ensure the Pinia ORM persist methods accept it.\n   */\n  validateData(data) {\n    return data !== null && typeof data === \"object\";\n  }\n  /**\n   * Validate the given string as to ensure it correlates with the available\n   * Pinia ORM persist methods.\n   */\n  validatePersistAction(action) {\n    return [\"save\", \"insert\"].includes(action);\n  }\n}\n\nclass Request {\n  /**\n   * The repository class.\n   */\n  repository;\n  /**\n   * The default config.\n   */\n  config = {\n    save: true\n  };\n  /**\n   * Create a new api instance.\n   */\n  constructor(repository) {\n    this.repository = repository;\n    this.registerActions();\n  }\n  /**\n   * Get the axios client.\n   */\n  get axios() {\n    this.repository.axios = this.repository.axios ?? this.repository.config.axiosApi.axios;\n    if (!this.repository.axios) {\n      throw new Error(\n        \"[Pinia ORM Axios] The axios instance is not registered. Please register the axios instance to the repository.\"\n      );\n    }\n    return this.repository.axios;\n  }\n  /**\n   * Register actions from the repository config.\n   */\n  registerActions() {\n    const actions = { ...this.repository.config.axiosApi?.actions, ...this.repository.getModel().$config()?.axiosApi?.actions };\n    if (!actions) {\n      return;\n    }\n    for (const name in actions) {\n      const action = actions[name];\n      typeof action === \"function\" ? this.registerFunctionAction(name, action) : this.registerObjectAction(name, action);\n    }\n  }\n  /**\n   * Register the given object action.\n   */\n  registerObjectAction(name, action) {\n    this[name] = (config) => {\n      return this.request({ ...action, ...config });\n    };\n  }\n  /**\n   * Register the given function action.\n   */\n  registerFunctionAction(name, action) {\n    this[name] = action.bind(this);\n  }\n  /**\n   * Perform a get request.\n   */\n  get(url, config = {}) {\n    return this.request({ method: \"get\", url, ...config });\n  }\n  /**\n   * Perform a post request.\n   */\n  post(url, data = {}, config = {}) {\n    return this.request({ method: \"post\", url, data, ...config });\n  }\n  /**\n   * Perform a put request.\n   */\n  put(url, data = {}, config = {}) {\n    return this.request({ method: \"put\", url, data, ...config });\n  }\n  /**\n   * Perform a patch request.\n   */\n  patch(url, data = {}, config = {}) {\n    return this.request({ method: \"patch\", url, data, ...config });\n  }\n  /**\n   * Perform a delete request.\n   */\n  delete(url, config = {}) {\n    return this.request({ method: \"delete\", url, ...config });\n  }\n  /**\n   * Perform an api request.\n   */\n  async request(config) {\n    const requestConfig = this.createConfig(config);\n    const axiosResponse = await this.axios.request(requestConfig);\n    return this.createResponse(axiosResponse, requestConfig);\n  }\n  /**\n   * Create a new config by merging the global config, the repository config,\n   * and the given config.\n   */\n  createConfig(config) {\n    return {\n      ...this.config,\n      ...this.repository.globalApiConfig,\n      ...this.repository.apiConfig,\n      ...config\n    };\n  }\n  /**\n   * Create a new response instance by applying a few initialization processes.\n   * For example, it saves response data if `save` option id set to `true`.\n   */\n  async createResponse(axiosResponse, config) {\n    const response = new Response(this.repository, config, axiosResponse);\n    if (config.delete !== void 0) {\n      await response.delete();\n      return response;\n    }\n    config.save && await response.save();\n    return response;\n  }\n}\n\nclass AxiosRepository extends Repository {\n  axios;\n  globalApiConfig;\n  apiConfig;\n  constructor(database, pinia) {\n    super(database, pinia);\n    this.axios = config?.axiosApi?.axios || null;\n    this.globalApiConfig = config?.axiosApi || {};\n    this.apiConfig = {};\n  }\n  api() {\n    return useAxiosApi(this);\n  }\n  setAxios(axios) {\n    this.axios = axios;\n    return this;\n  }\n}\n\nfunction useAxiosApi(repository) {\n  return new Request(repository);\n}\n\nfunction useAxiosRepo(model) {\n  const pinia = getActivePinia();\n  AxiosRepository.useModel = model;\n  return useRepo(AxiosRepository, pinia);\n}\n\nfunction createPiniaOrmAxios(axiosConfig) {\n  return definePiniaOrmPlugin((context) => {\n    context.config.axiosApi = axiosConfig;\n    return context;\n  });\n}\nconst piniaOrmPluginAxios = createPiniaOrmAxios();\n\nexport { AxiosRepository, Request, Response, createPiniaOrmAxios, piniaOrmPluginAxios, useAxiosApi, useAxiosRepo };\n","import { inject, provide, computed, unref } from 'vue'\nimport { getActivePinia } from 'pinia'\nimport { useRepo } from 'pinia-orm'\nimport { useAxiosRepo } from '@pinia-orm/axios'\nimport type {Ref} from 'vue'\nimport type {Repository} from 'pinia-orm'\n\nimport { Model, User, Permissions } from '../models'\nimport type {Repos, IPermissionItem} from '../models'\n\n\nexport type Models = (typeof Model)[] | {[name: string]: (typeof Model)}\n\n/**\n * {@link useModels} options.\n */\nexport interface IUseModelOpts {\n    /** Use injected repository if already present. */\n    useInject?: boolean\n    /** Use default models */\n    useDefaults?: boolean\n}\n\n/**\n * Use provided pinia-orm models, returning an object with:\n * - repos: pinia-orm api repositories as dict by entity\n * - models: pinia-orm models\n *\n * It uses injected repos by default if already provided. You\n * can disable it through options.\n *\n * `provide()` those values if not already provided.\n */\nexport function useModels(models: Models, {useInject=true, useDefaults=true}: IUseModelOpts = {}) {\n    var repos : Repos = useInject && (inject('repos') || {}) as Repos\n    const injected = (useInject && !!Object.keys(repos).length)\n\n    if(!Array.isArray(models))\n       models = Object.values(models)\n\n    if(useDefaults)\n       models.push(User)\n\n    for(const model of models)\n        if(model && model.entity) {\n            if(model.entity in repos)\n                continue\n\n            // there might be a bug here, without useRepo, axios is\n            // null on repositories\n            useRepo(model)\n            repos[model.entity] = useAxiosRepo(model) as Repository<Model>\n        }\n\n    !injected && provide(\"repos\", repos)\n    return repos\n}\n\n\nexport function usePermissionsProps() {\n    return {\n        permissions: [String, Function, Object, Array],\n    }\n}\n\n\nexport function usePermissions(user: User|Ref<User>, perms: IPermissionItem[], value: Model) {\n    const permissions = perms instanceof Permissions ? perms : new Permissions(perms)\n    const allowed = computed(() => permissions.can(unref(user), unref(value)))\n    return { permissions, allowed }\n}\n","import {computed, reactive, provide} from 'vue'\nimport type {ComputedRef, Reactive} from 'vue'\n\nimport {User, Model} from '../models'\nimport type {Repos} from '../models'\nimport { useModels } from './models'\nimport { State } from '../utils'\nimport type {IObject} from '../utils'\n\n\n/**\n * Interface describing application data.\n *\n * Application data is initial data passed down to application from\n * Django generated page.\n */\nexport interface IAppData extends IObject {\n    //! User's data.\n    user?: IObject\n}\n\n/**\n * This provide configuration to {@link AppContext}.\n */\nexport interface IApp {\n    /**\n     * Root API url\n     */\n    apiUrl?: string\n    /**\n     * Id of `<script>` element containing initial application data.\n     */\n    dataEl?: string\n    /**\n     * Models used by application.\n     */\n    models?: (typeof Model)[]\n    /**\n     * Extra application data.\n     */\n    data?: IAppData\n}\n\n\n/**\n * This class provides context for Oxylus application.\n *\n * Which is:\n * - initial data: this is loaded from `<script>` HTML object.\n * - models: it will create adequate `pinia-orm/axios` repositories for them.\n *\n * The context is provided to Vue components in order to allow them\n * to access global information, such as current user or Panel.\n */\nexport class AppContext {\n    static reactive(opts: IApp) : IRAppContext {\n        const obj = reactive(new this(opts)) as IRAppContext\n        obj.user = computed(() => new User(obj.data?.user || {}))\n        return obj\n    }\n\n    constructor(opts: IApp = {}) {\n        Object.assign(this, opts)\n        this.state = State.none()\n        this.showState = false\n    }\n\n    /**\n     * Load data into AppData. If no `value` is provided, read it from\n     * source element.\n     */\n    load(value: any = undefined) {\n        if(this.dataEl !== undefined) {\n            if(value === undefined)\n                value = this.readData(this.dataEl)\n            value.dataEl = this.dataEl\n            this.data = value\n        }\n\n        if(this.models !== undefined) {\n            this.repos = useModels(this.models)\n        }\n    }\n\n    /**\n     * Read data from the context of provided source element.\n     * @param {String} el - id of the DOM element.\n     * @return {Object} read data\n     */\n    readData(dataEl: string): any {\n        const el = document.getElementById(dataEl)\n        if(!el)\n            throw `Element {elementId} not found`;\n        return el.innerText ? JSON.parse(el.innerText) : {};\n    }\n}\nexport interface AppContext extends IApp {\n    /** Models' repositories */\n    repos?: Repos\n    /**\n     * Application level state. This can be displayed to user using\n     * {@link AppContext.showState}.\n     *\n     * This element can display errors to users.\n     */\n    state: State\n    /**\n     * Show application state to user.\n     */\n    showState: boolean\n}\nexport interface IRAppContext extends Reactive<AppContext> {\n    user: ComputedRef<User>\n}\n\n\n/**\n * Create a new {@link AppContext} and provide the following values:\n * - `context`: {@link AppContext} object;\n * - `user`: current {@link models.User};\n */\nexport function useAppContext(opts: IApp, load: boolean = true): AppContext {\n    const obj = AppContext.reactive(opts)\n    load && obj.dataEl && obj.load()\n\n    provide('context', obj)\n    provide('user', obj.user)\n    // provide('repos')\n    return obj\n}\n","import { computed, ref } from 'vue'\n\nimport type { ComputedRef, Ref } from 'vue'\nimport type { Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\n\nimport { User, Model } from '../models'\nimport type { IPermissionGetCodename } from '../models'\n\n\nexport type ActionRun<M extends Model, R> = (user: User, item: M, ...args: any[]) => Promise<R>\nexport type ActionCompleted<M extends Model, R> = (user: User, item: Model, result: R) => void\n\n\nexport interface IActionProps<M extends Model, R>\n{\n    /**\n     * Value or model instance.\n     */\n    item: M\n    /**\n     * Label text displayed to user.\n     */\n    title: string\n    /**\n     * Displayed icon\n     */\n    icon: string\n    /**\n     * Displayed color\n     */\n    color?: string\n    /**\n     * Display action as a small button\n     */\n    button?: boolean\n    /**\n     * If provided, ask user for a confirmation before executing the action.\n     */\n    confirm?: string\n    /**\n     * Required permission to run the action\n     */\n    permission: IPermissionGetCodename\n    /**\n     * The function to call when action is executed\n     */\n    run: ActionRun<M,R>\n\n    /** If provided, open this link */\n    href?: string\n}\n\n\nexport interface IAction<M extends Model, R> {\n    /**\n     * Wether the action is running.\n     */\n    processing: Ref<boolean>\n    /**\n     * Action properties\n     */\n    props: ActionProps<M, R>\n}\n\n/**\n * Action's parameters, `user` MUST be provided.\n */\nexport interface IAction<M extends Model, R> {\n    /** Action components properties */\n    props: IActionProps<M, R>\n    /** The user running the action. */\n    user: User\n    /** If provided, emits `completed` once the action has been executed. */\n    emits?: (event: string, ...opts: any[]) => void\n}\n\n\n/**\n * Create a new action, returning:\n * - processing: ref to boolean indicating wether the action is processing\n * - allowed: computed ref indicating wether the action is allowed\n * - run: async function to call in order to run the method\n */\nexport function useAction<M extends Model,R>({props, user, emits=null}: IAction<M,R>) {\n    const processing = ref(false)\n    const allowed = computed(() => !props.permission || user.can(props.permission, props.item))\n\n    /** Execute the action. */\n    const run = async (...args: any[]): Promise<R> => {\n        if(props.confirm && !confirm(props.confirm))\n            return\n\n        processing.value = true\n        if(props.href) {\n            document.location.href = props.href\n            return\n        }\n\n        let result : R = props.run(user, props.item, ...args)\n        if(result instanceof Promise)\n            result = await result\n\n        processing.value = false\n        if(emits)\n            emits('completed', props.item, ...args)\n        return result\n    }\n    return {processing, run, allowed}\n}\n","// Utilities\nimport { createRange, padStart } from \"../../../util/index.js\"; // Types\nfunction weekInfo(locale) {\n  // https://simplelocalize.io/data/locales/\n  // then `new Intl.Locale(...).getWeekInfo()`\n  const code = locale.slice(-2).toUpperCase();\n  switch (true) {\n    case locale === 'GB-alt-variant':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n    case locale === '001':\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n    case `AG AS BD BR BS BT BW BZ CA CO DM DO ET GT GU HK HN ID IL IN JM JP KE\n    KH KR LA MH MM MO MT MX MZ NI NP PA PE PH PK PR PY SA SG SV TH TT TW UM US\n    VE VI WS YE ZA ZW`.includes(code):\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 1\n        };\n      }\n    case `AI AL AM AR AU AZ BA BM BN BY CL CM CN CR CY EC GE HR KG KZ LB LK LV\n    MD ME MK MN MY NZ RO RS SI TJ TM TR UA UY UZ VN XK`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 1\n        };\n      }\n    case `AD AN AT AX BE BG CH CZ DE DK EE ES FI FJ FO FR GB GF GP GR HU IE IS\n    IT LI LT LU MC MQ NL NO PL RE RU SE SK SM VA`.includes(code):\n      {\n        return {\n          firstDay: 1,\n          firstWeekSize: 4\n        };\n      }\n    case `AE AF BH DJ DZ EG IQ IR JO KW LY OM QA SD SY`.includes(code):\n      {\n        return {\n          firstDay: 6,\n          firstWeekSize: 1\n        };\n      }\n    case code === 'MV':\n      {\n        return {\n          firstDay: 5,\n          firstWeekSize: 1\n        };\n      }\n    case code === 'PT':\n      {\n        return {\n          firstDay: 0,\n          firstWeekSize: 4\n        };\n      }\n    default:\n      return null;\n  }\n}\nfunction getWeekArray(date, locale, firstDayOfWeek) {\n  const weeks = [];\n  let currentWeek = [];\n  const firstDayOfMonth = startOfMonth(date);\n  const lastDayOfMonth = endOfMonth(date);\n  const first = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const firstDayWeekIndex = (firstDayOfMonth.getDay() - first + 7) % 7;\n  const lastDayWeekIndex = (lastDayOfMonth.getDay() - first + 7) % 7;\n  for (let i = 0; i < firstDayWeekIndex; i++) {\n    const adjacentDay = new Date(firstDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() - (firstDayWeekIndex - i));\n    currentWeek.push(adjacentDay);\n  }\n  for (let i = 1; i <= lastDayOfMonth.getDate(); i++) {\n    const day = new Date(date.getFullYear(), date.getMonth(), i);\n\n    // Add the day to the current week\n    currentWeek.push(day);\n\n    // If the current week has 7 days, add it to the weeks array and start a new week\n    if (currentWeek.length === 7) {\n      weeks.push(currentWeek);\n      currentWeek = [];\n    }\n  }\n  for (let i = 1; i < 7 - lastDayWeekIndex; i++) {\n    const adjacentDay = new Date(lastDayOfMonth);\n    adjacentDay.setDate(adjacentDay.getDate() + i);\n    currentWeek.push(adjacentDay);\n  }\n  if (currentWeek.length > 0) {\n    weeks.push(currentWeek);\n  }\n  return weeks;\n}\nfunction startOfWeek(date, locale, firstDayOfWeek) {\n  const day = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  const d = new Date(date);\n  while (d.getDay() !== day) {\n    d.setDate(d.getDate() - 1);\n  }\n  return d;\n}\nfunction endOfWeek(date, locale) {\n  const d = new Date(date);\n  const lastDay = ((weekInfo(locale)?.firstDay ?? 0) + 6) % 7;\n  while (d.getDay() !== lastDay) {\n    d.setDate(d.getDate() + 1);\n  }\n  return d;\n}\nfunction startOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth(), 1);\n}\nfunction endOfMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 0);\n}\nfunction parseLocalDate(value) {\n  const parts = value.split('-').map(Number);\n\n  // new Date() uses local time zone when passing individual date component values\n  return new Date(parts[0], parts[1] - 1, parts[2]);\n}\nconst _YYYMMDD = /^([12]\\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\\d|3[01]))$/;\nfunction date(value) {\n  if (value == null) return new Date();\n  if (value instanceof Date) return value;\n  if (typeof value === 'string') {\n    let parsed;\n    if (_YYYMMDD.test(value)) {\n      return parseLocalDate(value);\n    } else {\n      parsed = Date.parse(value);\n    }\n    if (!isNaN(parsed)) return new Date(parsed);\n  }\n  return null;\n}\nconst sundayJanuarySecond2000 = new Date(2000, 0, 2);\nfunction getWeekdays(locale, firstDayOfWeek) {\n  const daysFromSunday = firstDayOfWeek ?? weekInfo(locale)?.firstDay ?? 0;\n  return createRange(7).map(i => {\n    const weekday = new Date(sundayJanuarySecond2000);\n    weekday.setDate(sundayJanuarySecond2000.getDate() + daysFromSunday + i);\n    return new Intl.DateTimeFormat(locale, {\n      weekday: 'narrow'\n    }).format(weekday);\n  });\n}\nfunction format(value, formatString, locale, formats) {\n  const newDate = date(value) ?? new Date();\n  const customFormat = formats?.[formatString];\n  if (typeof customFormat === 'function') {\n    return customFormat(newDate, formatString, locale);\n  }\n  let options = {};\n  switch (formatString) {\n    case 'fullDate':\n      options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'fullDateWithWeekday':\n      options = {\n        weekday: 'long',\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'normalDate':\n      const day = newDate.getDate();\n      const month = new Intl.DateTimeFormat(locale, {\n        month: 'long'\n      }).format(newDate);\n      return `${day} ${month}`;\n    case 'normalDateWithWeekday':\n      options = {\n        weekday: 'short',\n        day: 'numeric',\n        month: 'short'\n      };\n      break;\n    case 'shortDate':\n      options = {\n        month: 'short',\n        day: 'numeric'\n      };\n      break;\n    case 'year':\n      options = {\n        year: 'numeric'\n      };\n      break;\n    case 'month':\n      options = {\n        month: 'long'\n      };\n      break;\n    case 'monthShort':\n      options = {\n        month: 'short'\n      };\n      break;\n    case 'monthAndYear':\n      options = {\n        month: 'long',\n        year: 'numeric'\n      };\n      break;\n    case 'monthAndDate':\n      options = {\n        month: 'long',\n        day: 'numeric'\n      };\n      break;\n    case 'weekday':\n      options = {\n        weekday: 'long'\n      };\n      break;\n    case 'weekdayShort':\n      options = {\n        weekday: 'short'\n      };\n      break;\n    case 'dayOfMonth':\n      return new Intl.NumberFormat(locale).format(newDate.getDate());\n    case 'hours12h':\n      options = {\n        hour: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'hours24h':\n      options = {\n        hour: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'minutes':\n      options = {\n        minute: 'numeric'\n      };\n      break;\n    case 'seconds':\n      options = {\n        second: 'numeric'\n      };\n      break;\n    case 'fullTime':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n    case 'fullTime12h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'fullTime24h':\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'fullDateTime':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      break;\n    case 'fullDateTime12h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      break;\n    case 'fullDateTime24h':\n      options = {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      break;\n    case 'keyboardDate':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      };\n      break;\n    case 'keyboardDateTime':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric'\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    case 'keyboardDateTime12h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: true\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    case 'keyboardDateTime24h':\n      options = {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit',\n        hour: 'numeric',\n        minute: 'numeric',\n        hour12: false\n      };\n      return new Intl.DateTimeFormat(locale, options).format(newDate).replace(/, /g, ' ');\n    default:\n      options = customFormat ?? {\n        timeZone: 'UTC',\n        timeZoneName: 'short'\n      };\n  }\n  return new Intl.DateTimeFormat(locale, options).format(newDate);\n}\nfunction toISO(adapter, value) {\n  const date = adapter.toJsDate(value);\n  const year = date.getFullYear();\n  const month = padStart(String(date.getMonth() + 1), 2, '0');\n  const day = padStart(String(date.getDate()), 2, '0');\n  return `${year}-${month}-${day}`;\n}\nfunction parseISO(value) {\n  const [year, month, day] = value.split('-').map(Number);\n  return new Date(year, month - 1, day);\n}\nfunction addMinutes(date, amount) {\n  const d = new Date(date);\n  d.setMinutes(d.getMinutes() + amount);\n  return d;\n}\nfunction addHours(date, amount) {\n  const d = new Date(date);\n  d.setHours(d.getHours() + amount);\n  return d;\n}\nfunction addDays(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount);\n  return d;\n}\nfunction addWeeks(date, amount) {\n  const d = new Date(date);\n  d.setDate(d.getDate() + amount * 7);\n  return d;\n}\nfunction addMonths(date, amount) {\n  const d = new Date(date);\n  d.setDate(1);\n  d.setMonth(d.getMonth() + amount);\n  return d;\n}\nfunction getYear(date) {\n  return date.getFullYear();\n}\nfunction getMonth(date) {\n  return date.getMonth();\n}\nfunction getWeek(date, locale, firstDayOfWeek, firstWeekMinSize) {\n  const weekInfoFromLocale = weekInfo(locale);\n  const weekStart = firstDayOfWeek ?? weekInfoFromLocale?.firstDay ?? 0;\n  const minWeekSize = firstWeekMinSize ?? weekInfoFromLocale?.firstWeekSize ?? 1;\n  function firstWeekSize(year) {\n    const yearStart = new Date(year, 0, 1);\n    return 7 - getDiff(yearStart, startOfWeek(yearStart, locale, weekStart), 'days');\n  }\n  let year = getYear(date);\n  const currentWeekEnd = addDays(startOfWeek(date, locale, weekStart), 6);\n  if (year < getYear(currentWeekEnd) && firstWeekSize(year + 1) >= minWeekSize) {\n    year++;\n  }\n  const yearStart = new Date(year, 0, 1);\n  const size = firstWeekSize(year);\n  const d1w1 = size >= minWeekSize ? addDays(yearStart, size - 7) : addDays(yearStart, size);\n  return 1 + getDiff(date, d1w1, 'weeks');\n}\nfunction getDate(date) {\n  return date.getDate();\n}\nfunction getNextMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() + 1, 1);\n}\nfunction getPreviousMonth(date) {\n  return new Date(date.getFullYear(), date.getMonth() - 1, 1);\n}\nfunction getHours(date) {\n  return date.getHours();\n}\nfunction getMinutes(date) {\n  return date.getMinutes();\n}\nfunction startOfYear(date) {\n  return new Date(date.getFullYear(), 0, 1);\n}\nfunction endOfYear(date) {\n  return new Date(date.getFullYear(), 11, 31);\n}\nfunction isWithinRange(date, range) {\n  return isAfter(date, range[0]) && isBefore(date, range[1]);\n}\nfunction isValid(date) {\n  const d = new Date(date);\n  return d instanceof Date && !isNaN(d.getTime());\n}\nfunction isAfter(date, comparing) {\n  return date.getTime() > comparing.getTime();\n}\nfunction isAfterDay(date, comparing) {\n  return isAfter(startOfDay(date), startOfDay(comparing));\n}\nfunction isBefore(date, comparing) {\n  return date.getTime() < comparing.getTime();\n}\nfunction isEqual(date, comparing) {\n  return date.getTime() === comparing.getTime();\n}\nfunction isSameDay(date, comparing) {\n  return date.getDate() === comparing.getDate() && date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction isSameMonth(date, comparing) {\n  return date.getMonth() === comparing.getMonth() && date.getFullYear() === comparing.getFullYear();\n}\nfunction isSameYear(date, comparing) {\n  return date.getFullYear() === comparing.getFullYear();\n}\nfunction getDiff(date, comparing, unit) {\n  const d = new Date(date);\n  const c = new Date(comparing);\n  switch (unit) {\n    case 'years':\n      return d.getFullYear() - c.getFullYear();\n    case 'quarters':\n      return Math.floor((d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12) / 4);\n    case 'months':\n      return d.getMonth() - c.getMonth() + (d.getFullYear() - c.getFullYear()) * 12;\n    case 'weeks':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24 * 7));\n    case 'days':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60 * 24));\n    case 'hours':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60 * 60));\n    case 'minutes':\n      return Math.floor((d.getTime() - c.getTime()) / (1000 * 60));\n    case 'seconds':\n      return Math.floor((d.getTime() - c.getTime()) / 1000);\n    default:\n      {\n        return d.getTime() - c.getTime();\n      }\n  }\n}\nfunction setHours(date, count) {\n  const d = new Date(date);\n  d.setHours(count);\n  return d;\n}\nfunction setMinutes(date, count) {\n  const d = new Date(date);\n  d.setMinutes(count);\n  return d;\n}\nfunction setMonth(date, count) {\n  const d = new Date(date);\n  d.setMonth(count);\n  return d;\n}\nfunction setDate(date, day) {\n  const d = new Date(date);\n  d.setDate(day);\n  return d;\n}\nfunction setYear(date, year) {\n  const d = new Date(date);\n  d.setFullYear(year);\n  return d;\n}\nfunction startOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n}\nfunction endOfDay(date) {\n  return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 23, 59, 59, 999);\n}\nexport class VuetifyDateAdapter {\n  constructor(options) {\n    this.locale = options.locale;\n    this.formats = options.formats;\n  }\n  date(value) {\n    return date(value);\n  }\n  toJsDate(date) {\n    return date;\n  }\n  toISO(date) {\n    return toISO(this, date);\n  }\n  parseISO(date) {\n    return parseISO(date);\n  }\n  addMinutes(date, amount) {\n    return addMinutes(date, amount);\n  }\n  addHours(date, amount) {\n    return addHours(date, amount);\n  }\n  addDays(date, amount) {\n    return addDays(date, amount);\n  }\n  addWeeks(date, amount) {\n    return addWeeks(date, amount);\n  }\n  addMonths(date, amount) {\n    return addMonths(date, amount);\n  }\n  getWeekArray(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekArray(date, this.locale, firstDay);\n  }\n  startOfWeek(date, firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return startOfWeek(date, this.locale, firstDay);\n  }\n  endOfWeek(date) {\n    return endOfWeek(date, this.locale);\n  }\n  startOfMonth(date) {\n    return startOfMonth(date);\n  }\n  endOfMonth(date) {\n    return endOfMonth(date);\n  }\n  format(date, formatString) {\n    return format(date, formatString, this.locale, this.formats);\n  }\n  isEqual(date, comparing) {\n    return isEqual(date, comparing);\n  }\n  isValid(date) {\n    return isValid(date);\n  }\n  isWithinRange(date, range) {\n    return isWithinRange(date, range);\n  }\n  isAfter(date, comparing) {\n    return isAfter(date, comparing);\n  }\n  isAfterDay(date, comparing) {\n    return isAfterDay(date, comparing);\n  }\n  isBefore(date, comparing) {\n    return !isAfter(date, comparing) && !isEqual(date, comparing);\n  }\n  isSameDay(date, comparing) {\n    return isSameDay(date, comparing);\n  }\n  isSameMonth(date, comparing) {\n    return isSameMonth(date, comparing);\n  }\n  isSameYear(date, comparing) {\n    return isSameYear(date, comparing);\n  }\n  setMinutes(date, count) {\n    return setMinutes(date, count);\n  }\n  setHours(date, count) {\n    return setHours(date, count);\n  }\n  setMonth(date, count) {\n    return setMonth(date, count);\n  }\n  setDate(date, day) {\n    return setDate(date, day);\n  }\n  setYear(date, year) {\n    return setYear(date, year);\n  }\n  getDiff(date, comparing, unit) {\n    return getDiff(date, comparing, unit);\n  }\n  getWeekdays(firstDayOfWeek) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeekdays(this.locale, firstDay);\n  }\n  getYear(date) {\n    return getYear(date);\n  }\n  getMonth(date) {\n    return getMonth(date);\n  }\n  getWeek(date, firstDayOfWeek, firstWeekMinSize) {\n    const firstDay = firstDayOfWeek !== undefined ? Number(firstDayOfWeek) : undefined;\n    return getWeek(date, this.locale, firstDay, firstWeekMinSize);\n  }\n  getDate(date) {\n    return getDate(date);\n  }\n  getNextMonth(date) {\n    return getNextMonth(date);\n  }\n  getPreviousMonth(date) {\n    return getPreviousMonth(date);\n  }\n  getHours(date) {\n    return getHours(date);\n  }\n  getMinutes(date) {\n    return getMinutes(date);\n  }\n  startOfDay(date) {\n    return startOfDay(date);\n  }\n  endOfDay(date) {\n    return endOfDay(date);\n  }\n  startOfYear(date) {\n    return startOfYear(date);\n  }\n  endOfYear(date) {\n    return endOfYear(date);\n  }\n}\n//# sourceMappingURL=vuetify.js.map","// Composables\nimport { useLocale } from \"../locale.js\"; // Utilities\nimport { inject, reactive, watch } from 'vue';\nimport { mergeDeep } from \"../../util/index.js\"; // Types\n// Adapters\nimport { VuetifyDateAdapter } from \"./adapters/vuetify.js\";\n/** Supports module augmentation to specify date adapter types */\nexport let DateModule;\nexport const DateOptionsSymbol = Symbol.for('vuetify:date-options');\nexport const DateAdapterSymbol = Symbol.for('vuetify:date-adapter');\nexport function createDate(options, locale) {\n  const _options = mergeDeep({\n    adapter: VuetifyDateAdapter,\n    locale: {\n      af: 'af-ZA',\n      // ar: '', # not the same value for all variants\n      bg: 'bg-BG',\n      ca: 'ca-ES',\n      ckb: '',\n      cs: 'cs-CZ',\n      de: 'de-DE',\n      el: 'el-GR',\n      en: 'en-US',\n      // es: '', # not the same value for all variants\n      et: 'et-EE',\n      fa: 'fa-IR',\n      fi: 'fi-FI',\n      // fr: '', #not the same value for all variants\n      hr: 'hr-HR',\n      hu: 'hu-HU',\n      he: 'he-IL',\n      id: 'id-ID',\n      it: 'it-IT',\n      ja: 'ja-JP',\n      ko: 'ko-KR',\n      lv: 'lv-LV',\n      lt: 'lt-LT',\n      nl: 'nl-NL',\n      no: 'no-NO',\n      pl: 'pl-PL',\n      pt: 'pt-PT',\n      ro: 'ro-RO',\n      ru: 'ru-RU',\n      sk: 'sk-SK',\n      sl: 'sl-SI',\n      srCyrl: 'sr-SP',\n      srLatn: 'sr-SP',\n      sv: 'sv-SE',\n      th: 'th-TH',\n      tr: 'tr-TR',\n      az: 'az-AZ',\n      uk: 'uk-UA',\n      vi: 'vi-VN',\n      zhHans: 'zh-CN',\n      zhHant: 'zh-TW'\n    }\n  }, options);\n  return {\n    options: _options,\n    instance: createInstance(_options, locale)\n  };\n}\nfunction createInstance(options, locale) {\n  const instance = reactive(typeof options.adapter === 'function'\n  // eslint-disable-next-line new-cap\n  ? new options.adapter({\n    locale: options.locale[locale.current.value] ?? locale.current.value,\n    formats: options.formats\n  }) : options.adapter);\n  watch(locale.current, value => {\n    instance.locale = options.locale[value] ?? value ?? instance.locale;\n  });\n  return instance;\n}\nexport function useDate() {\n  const options = inject(DateOptionsSymbol);\n  if (!options) throw new Error('[Vuetify] Could not find injected date options');\n  const locale = useLocale();\n  return createInstance(options, locale);\n}\n//# sourceMappingURL=date.js.map","// Composables\nimport { createDate, DateAdapterSymbol, DateOptionsSymbol } from \"./composables/date/date.js\";\nimport { createDefaults, DefaultsSymbol } from \"./composables/defaults.js\";\nimport { createDisplay, DisplaySymbol } from \"./composables/display.js\";\nimport { createGoTo, GoToSymbol } from \"./composables/goto.js\";\nimport { createIcons, IconSymbol } from \"./composables/icons.js\";\nimport { createLocale, LocaleSymbol } from \"./composables/locale.js\";\nimport { createTheme, ThemeSymbol } from \"./composables/theme.js\"; // Utilities\nimport { effectScope, nextTick, reactive } from 'vue';\nimport { defineComponent, IN_BROWSER, mergeDeep } from \"./util/index.js\"; // Types\n// Exports\nexport * from \"./composables/index.js\";\nexport * from \"./types.js\";\nexport function createVuetify() {\n  let vuetify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    blueprint,\n    ...rest\n  } = vuetify;\n  const options = mergeDeep(blueprint, rest);\n  const {\n    aliases = {},\n    components = {},\n    directives = {}\n  } = options;\n  const scope = effectScope();\n  return scope.run(() => {\n    const defaults = createDefaults(options.defaults);\n    const display = createDisplay(options.display, options.ssr);\n    const theme = createTheme(options.theme);\n    const icons = createIcons(options.icons);\n    const locale = createLocale(options.locale);\n    const date = createDate(options.date, locale);\n    const goTo = createGoTo(options.goTo, locale);\n    function install(app) {\n      for (const key in directives) {\n        app.directive(key, directives[key]);\n      }\n      for (const key in components) {\n        app.component(key, components[key]);\n      }\n      for (const key in aliases) {\n        app.component(key, defineComponent({\n          ...aliases[key],\n          name: key,\n          aliasName: aliases[key].name\n        }));\n      }\n      const appScope = effectScope();\n      appScope.run(() => {\n        theme.install(app);\n      });\n      app.onUnmount(() => appScope.stop());\n      app.provide(DefaultsSymbol, defaults);\n      app.provide(DisplaySymbol, display);\n      app.provide(ThemeSymbol, theme);\n      app.provide(IconSymbol, icons);\n      app.provide(LocaleSymbol, locale);\n      app.provide(DateOptionsSymbol, date.options);\n      app.provide(DateAdapterSymbol, date.instance);\n      app.provide(GoToSymbol, goTo);\n      if (IN_BROWSER && options.ssr) {\n        if (app.$nuxt) {\n          app.$nuxt.hook('app:suspense:resolve', () => {\n            display.update();\n          });\n        } else {\n          const {\n            mount\n          } = app;\n          app.mount = function () {\n            const vm = mount(...arguments);\n            nextTick(() => display.update());\n            app.mount = mount;\n            return vm;\n          };\n        }\n      }\n      if (typeof __VUE_OPTIONS_API__ !== 'boolean' || __VUE_OPTIONS_API__) {\n        app.mixin({\n          computed: {\n            $vuetify() {\n              return reactive({\n                defaults: inject.call(this, DefaultsSymbol),\n                display: inject.call(this, DisplaySymbol),\n                theme: inject.call(this, ThemeSymbol),\n                icons: inject.call(this, IconSymbol),\n                locale: inject.call(this, LocaleSymbol),\n                date: inject.call(this, DateAdapterSymbol)\n              });\n            }\n          }\n        });\n      }\n    }\n    function unmount() {\n      scope.stop();\n    }\n    return {\n      install,\n      unmount,\n      defaults,\n      display,\n      theme,\n      icons,\n      locale,\n      date,\n      goTo\n    };\n  });\n}\nexport const version = \"3.8.4\";\ncreateVuetify.version = version;\n\n// Vue's inject() can only be used in setup\nfunction inject(key) {\n  const vm = this.$;\n  const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides;\n  if (provides && key in provides) {\n    return provides[key];\n  }\n}\n//# sourceMappingURL=framework.js.map","// Icons\nimport { mdi } from \"../iconsets/mdi.js\"; // Types\nexport const md3 = {\n  defaults: {\n    VAppBar: {\n      flat: true\n    },\n    VAutocomplete: {\n      variant: 'outlined'\n    },\n    VBanner: {\n      color: 'primary'\n    },\n    VBottomSheet: {\n      contentClass: 'rounded-t-xl overflow-hidden'\n    },\n    VBtn: {\n      color: 'primary',\n      rounded: 'xl'\n    },\n    VBtnGroup: {\n      rounded: 'xl',\n      VBtn: {\n        rounded: null\n      }\n    },\n    VCard: {\n      rounded: 'lg'\n    },\n    VCheckbox: {\n      color: 'secondary',\n      inset: true\n    },\n    VChip: {\n      rounded: 'sm'\n    },\n    VCombobox: {\n      variant: 'outlined'\n    },\n    VDateInput: {\n      variant: 'outlined'\n    },\n    VDatePicker: {\n      controlHeight: 48,\n      color: 'primary',\n      divided: true,\n      headerColor: '',\n      elevation: 3,\n      rounded: 'xl',\n      VBtn: {\n        color: 'high-emphasis',\n        rounded: 'circle'\n      }\n    },\n    VFileInput: {\n      variant: 'outlined'\n    },\n    VNavigationDrawer: {\n      // VList: {\n      //   nav: true,\n      //   VListItem: {\n      //     rounded: 'xl',\n      //   },\n      // },\n    },\n    VNumberInput: {\n      variant: 'outlined',\n      VBtn: {\n        color: undefined,\n        rounded: undefined\n      }\n    },\n    VSelect: {\n      variant: 'outlined'\n    },\n    VSlider: {\n      color: 'primary'\n    },\n    VTabs: {\n      color: 'primary'\n    },\n    VTextarea: {\n      variant: 'outlined'\n    },\n    VTextField: {\n      variant: 'outlined'\n    },\n    VToolbar: {\n      VBtn: {\n        color: null\n      }\n    }\n  },\n  icons: {\n    defaultSet: 'mdi',\n    sets: {\n      mdi\n    }\n  },\n  theme: {\n    themes: {\n      light: {\n        colors: {\n          primary: '#6750a4',\n          secondary: '#b4b0bb',\n          tertiary: '#7d5260',\n          error: '#b3261e',\n          surface: '#fffbfe'\n        }\n      }\n    }\n  }\n};\n//# sourceMappingURL=md3.js.map","export const red = {\n  base: '#f44336',\n  lighten5: '#ffebee',\n  lighten4: '#ffcdd2',\n  lighten3: '#ef9a9a',\n  lighten2: '#e57373',\n  lighten1: '#ef5350',\n  darken1: '#e53935',\n  darken2: '#d32f2f',\n  darken3: '#c62828',\n  darken4: '#b71c1c',\n  accent1: '#ff8a80',\n  accent2: '#ff5252',\n  accent3: '#ff1744',\n  accent4: '#d50000'\n};\nexport const pink = {\n  base: '#e91e63',\n  lighten5: '#fce4ec',\n  lighten4: '#f8bbd0',\n  lighten3: '#f48fb1',\n  lighten2: '#f06292',\n  lighten1: '#ec407a',\n  darken1: '#d81b60',\n  darken2: '#c2185b',\n  darken3: '#ad1457',\n  darken4: '#880e4f',\n  accent1: '#ff80ab',\n  accent2: '#ff4081',\n  accent3: '#f50057',\n  accent4: '#c51162'\n};\nexport const purple = {\n  base: '#9c27b0',\n  lighten5: '#f3e5f5',\n  lighten4: '#e1bee7',\n  lighten3: '#ce93d8',\n  lighten2: '#ba68c8',\n  lighten1: '#ab47bc',\n  darken1: '#8e24aa',\n  darken2: '#7b1fa2',\n  darken3: '#6a1b9a',\n  darken4: '#4a148c',\n  accent1: '#ea80fc',\n  accent2: '#e040fb',\n  accent3: '#d500f9',\n  accent4: '#aa00ff'\n};\nexport const deepPurple = {\n  base: '#673ab7',\n  lighten5: '#ede7f6',\n  lighten4: '#d1c4e9',\n  lighten3: '#b39ddb',\n  lighten2: '#9575cd',\n  lighten1: '#7e57c2',\n  darken1: '#5e35b1',\n  darken2: '#512da8',\n  darken3: '#4527a0',\n  darken4: '#311b92',\n  accent1: '#b388ff',\n  accent2: '#7c4dff',\n  accent3: '#651fff',\n  accent4: '#6200ea'\n};\nexport const indigo = {\n  base: '#3f51b5',\n  lighten5: '#e8eaf6',\n  lighten4: '#c5cae9',\n  lighten3: '#9fa8da',\n  lighten2: '#7986cb',\n  lighten1: '#5c6bc0',\n  darken1: '#3949ab',\n  darken2: '#303f9f',\n  darken3: '#283593',\n  darken4: '#1a237e',\n  accent1: '#8c9eff',\n  accent2: '#536dfe',\n  accent3: '#3d5afe',\n  accent4: '#304ffe'\n};\nexport const blue = {\n  base: '#2196f3',\n  lighten5: '#e3f2fd',\n  lighten4: '#bbdefb',\n  lighten3: '#90caf9',\n  lighten2: '#64b5f6',\n  lighten1: '#42a5f5',\n  darken1: '#1e88e5',\n  darken2: '#1976d2',\n  darken3: '#1565c0',\n  darken4: '#0d47a1',\n  accent1: '#82b1ff',\n  accent2: '#448aff',\n  accent3: '#2979ff',\n  accent4: '#2962ff'\n};\nexport const lightBlue = {\n  base: '#03a9f4',\n  lighten5: '#e1f5fe',\n  lighten4: '#b3e5fc',\n  lighten3: '#81d4fa',\n  lighten2: '#4fc3f7',\n  lighten1: '#29b6f6',\n  darken1: '#039be5',\n  darken2: '#0288d1',\n  darken3: '#0277bd',\n  darken4: '#01579b',\n  accent1: '#80d8ff',\n  accent2: '#40c4ff',\n  accent3: '#00b0ff',\n  accent4: '#0091ea'\n};\nexport const cyan = {\n  base: '#00bcd4',\n  lighten5: '#e0f7fa',\n  lighten4: '#b2ebf2',\n  lighten3: '#80deea',\n  lighten2: '#4dd0e1',\n  lighten1: '#26c6da',\n  darken1: '#00acc1',\n  darken2: '#0097a7',\n  darken3: '#00838f',\n  darken4: '#006064',\n  accent1: '#84ffff',\n  accent2: '#18ffff',\n  accent3: '#00e5ff',\n  accent4: '#00b8d4'\n};\nexport const teal = {\n  base: '#009688',\n  lighten5: '#e0f2f1',\n  lighten4: '#b2dfdb',\n  lighten3: '#80cbc4',\n  lighten2: '#4db6ac',\n  lighten1: '#26a69a',\n  darken1: '#00897b',\n  darken2: '#00796b',\n  darken3: '#00695c',\n  darken4: '#004d40',\n  accent1: '#a7ffeb',\n  accent2: '#64ffda',\n  accent3: '#1de9b6',\n  accent4: '#00bfa5'\n};\nexport const green = {\n  base: '#4caf50',\n  lighten5: '#e8f5e9',\n  lighten4: '#c8e6c9',\n  lighten3: '#a5d6a7',\n  lighten2: '#81c784',\n  lighten1: '#66bb6a',\n  darken1: '#43a047',\n  darken2: '#388e3c',\n  darken3: '#2e7d32',\n  darken4: '#1b5e20',\n  accent1: '#b9f6ca',\n  accent2: '#69f0ae',\n  accent3: '#00e676',\n  accent4: '#00c853'\n};\nexport const lightGreen = {\n  base: '#8bc34a',\n  lighten5: '#f1f8e9',\n  lighten4: '#dcedc8',\n  lighten3: '#c5e1a5',\n  lighten2: '#aed581',\n  lighten1: '#9ccc65',\n  darken1: '#7cb342',\n  darken2: '#689f38',\n  darken3: '#558b2f',\n  darken4: '#33691e',\n  accent1: '#ccff90',\n  accent2: '#b2ff59',\n  accent3: '#76ff03',\n  accent4: '#64dd17'\n};\nexport const lime = {\n  base: '#cddc39',\n  lighten5: '#f9fbe7',\n  lighten4: '#f0f4c3',\n  lighten3: '#e6ee9c',\n  lighten2: '#dce775',\n  lighten1: '#d4e157',\n  darken1: '#c0ca33',\n  darken2: '#afb42b',\n  darken3: '#9e9d24',\n  darken4: '#827717',\n  accent1: '#f4ff81',\n  accent2: '#eeff41',\n  accent3: '#c6ff00',\n  accent4: '#aeea00'\n};\nexport const yellow = {\n  base: '#ffeb3b',\n  lighten5: '#fffde7',\n  lighten4: '#fff9c4',\n  lighten3: '#fff59d',\n  lighten2: '#fff176',\n  lighten1: '#ffee58',\n  darken1: '#fdd835',\n  darken2: '#fbc02d',\n  darken3: '#f9a825',\n  darken4: '#f57f17',\n  accent1: '#ffff8d',\n  accent2: '#ffff00',\n  accent3: '#ffea00',\n  accent4: '#ffd600'\n};\nexport const amber = {\n  base: '#ffc107',\n  lighten5: '#fff8e1',\n  lighten4: '#ffecb3',\n  lighten3: '#ffe082',\n  lighten2: '#ffd54f',\n  lighten1: '#ffca28',\n  darken1: '#ffb300',\n  darken2: '#ffa000',\n  darken3: '#ff8f00',\n  darken4: '#ff6f00',\n  accent1: '#ffe57f',\n  accent2: '#ffd740',\n  accent3: '#ffc400',\n  accent4: '#ffab00'\n};\nexport const orange = {\n  base: '#ff9800',\n  lighten5: '#fff3e0',\n  lighten4: '#ffe0b2',\n  lighten3: '#ffcc80',\n  lighten2: '#ffb74d',\n  lighten1: '#ffa726',\n  darken1: '#fb8c00',\n  darken2: '#f57c00',\n  darken3: '#ef6c00',\n  darken4: '#e65100',\n  accent1: '#ffd180',\n  accent2: '#ffab40',\n  accent3: '#ff9100',\n  accent4: '#ff6d00'\n};\nexport const deepOrange = {\n  base: '#ff5722',\n  lighten5: '#fbe9e7',\n  lighten4: '#ffccbc',\n  lighten3: '#ffab91',\n  lighten2: '#ff8a65',\n  lighten1: '#ff7043',\n  darken1: '#f4511e',\n  darken2: '#e64a19',\n  darken3: '#d84315',\n  darken4: '#bf360c',\n  accent1: '#ff9e80',\n  accent2: '#ff6e40',\n  accent3: '#ff3d00',\n  accent4: '#dd2c00'\n};\nexport const brown = {\n  base: '#795548',\n  lighten5: '#efebe9',\n  lighten4: '#d7ccc8',\n  lighten3: '#bcaaa4',\n  lighten2: '#a1887f',\n  lighten1: '#8d6e63',\n  darken1: '#6d4c41',\n  darken2: '#5d4037',\n  darken3: '#4e342e',\n  darken4: '#3e2723'\n};\nexport const blueGrey = {\n  base: '#607d8b',\n  lighten5: '#eceff1',\n  lighten4: '#cfd8dc',\n  lighten3: '#b0bec5',\n  lighten2: '#90a4ae',\n  lighten1: '#78909c',\n  darken1: '#546e7a',\n  darken2: '#455a64',\n  darken3: '#37474f',\n  darken4: '#263238'\n};\nexport const grey = {\n  base: '#9e9e9e',\n  lighten5: '#fafafa',\n  lighten4: '#f5f5f5',\n  lighten3: '#eeeeee',\n  lighten2: '#e0e0e0',\n  lighten1: '#bdbdbd',\n  darken1: '#757575',\n  darken2: '#616161',\n  darken3: '#424242',\n  darken4: '#212121'\n};\nexport const shades = {\n  black: '#000000',\n  white: '#ffffff',\n  transparent: '#ffffff00'\n};\nexport default {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n  brown,\n  blueGrey,\n  grey,\n  shades\n};\n//# sourceMappingURL=colors.js.map","import { createApp as $createApp, reactive, watch } from 'vue'\nimport { createVuetify as $createVuetify } from 'vuetify'\nimport { md3 } from 'vuetify/blueprints'\nimport colors from 'vuetify/util/colors'\n\nimport { createPinia as $createPinia, setActivePinia } from 'pinia'\nimport { createORM } from 'pinia-orm'\nimport { createPiniaOrmAxios } from '@pinia-orm/axios'\nimport axios from 'axios'\n\nimport '../styles/index.scss'\nimport * as vendorComponents from 'ox/vendor'\nimport config from '../config'\nimport {i18n, useI18n} from './i18n'\n\nimport type {IObject} from '../utils'\n\n\n/**\n * {@link createVuetify} parameters. Theses are passed down to Vuetify's\n * plugin initialization.\n */\nexport interface ICreateVuetifyOpts extends IObject {\n    components?: Record<string,any>\n}\n\n\n/**\n * Options passed to {@link createApp}.\n */\nexport interface ICreateAppOpts {\n    /**\n     * Vue's `createApp` `props` arguments\n     */\n    props?: IObject\n    /**\n     *  Vuetify plugin's parameters (passed to {@link createVuetify})\n     */\n    vuetify?: ICreateVuetifyOpts\n    /**\n     * Plugins to add to Vue application.\n     */\n    plugins?: IObject[]\n}\n\nexport interface IInitOpts extends ICreateAppOpts {\n    /** Vue's App config. */\n    App?: IObject\n    /** Element selector to mount application on. */\n    el?: string\n    /**\n     * If True (default), defer application creation after page has been\n     * loaded (on `window.load` event)\n     */\n    onLoad?: boolean\n}\n\n\n/**\n * Main entry point to initialize and mount an application.\n *\n * The base `App` config is provided by `ox/components` modules.\n */\nexport function init({App=null, el='#app', onLoad=true, ...options}: IInitOpts={}) {\n    function initApp() {\n        const app = createApp(App, options)\n        const vm = el ? app.mount(el) : null\n        document.body.classList.remove('loading')\n        return {app, el, vm}\n    }\n\n    return new Promise((resolve) => {\n        if(onLoad)\n            return window.addEventListener(\n                'load', () => resolve(initApp())\n            )\n        resolve(initApp())\n    })\n}\n\n\n/**\n * Create Oxerp application (including Vuetify).\n * It also provide app's global property `window` in order to allow components\n * access to this object.\n */\nexport function createApp(app: IObject, {props={}, vuetify={}, plugins=null}: ICreateAppOpts={}) {\n    app = $createApp(app, props)\n    app.config.globalProperties.window = window\n\n    app.use(createVuetify(vuetify))\n    app.use(i18n)\n    useI18n()\n\n    plugins && plugins.forEach(plugin => app.use(plugin))\n    return app\n}\n\n\n\n/**\n * Create and return vuetify plugin with default components set.\n * This is called by `createApp`.\n */\nexport function createVuetify({components={}, defaults={}, ...opts}: ICreateVuetifyOpts) {\n    opts.components = {\n        ...vendorComponents,\n        ...components\n    }\n    return $createVuetify({\n        blueprint: md3,\n        theme: {\n            themes: {\n                light: {\n                    dark: false,\n                    colors: {\n                        primary: colors.green.darken1,\n                        secondary: colors.green.lighten4\n                    }\n                }\n            }\n        },\n        defaults: {\n            ...defaults,\n            VTextField: { variant: 'underlined', },\n            VSelect: { variant: 'underlined', },\n            VTextarea: { variant: 'outlined', },\n            VCombobox: { variant: 'underlined', },\n            VAutocomplete: { variant: 'underlined', },\n        },\n        ...opts\n    })\n}\n\n\n\n/**\n * Create Pinia and PiniaOrm plugins instances.\n * If no `baseURL` is provided, get it from `document.body.dataset.apiUrl`.\n */\nexport function createPinia({axiosConfig=null, baseURL=null}: IObject={}) {\n    if(!baseURL)\n        baseURL = document.body.dataset.apiUrl\n\n    const pinia = $createPinia()\n    const piniaOrm = createORM({\n        plugins: [\n            createPiniaOrmAxios({\n                axios,\n                ...(axiosConfig || config.axiosConfig),\n                baseURL,\n            })\n        ]\n    })\n    setActivePinia(pinia)\n    return pinia.use(piniaOrm)\n}\n","import {Repository, Relation} from 'pinia-orm'\nimport type {Model} from 'pinia-orm'\nimport type {Response} from '@pinia-orm/axios'\n\nimport {collectAttr} from '../utils'\nimport type {IObject} from '../utils'\nimport {asRelation, getSourceKey} from '../models'\nimport type {Repos} from '../models'\n\n\n/** Interface of {@link Query} class. */\nexport interface IQuery<M extends Model> {\n    /** Model repository used to store results. */\n    repo: Repository<M>\n    /**\n     * Repositories used to store relations.\n     *\n     * This argument may be ignored if there is no need to fetch\n     * relations.\n     */\n    repos: Repos\n}\n\n/** {@link Query.fetch} parameters. */\nexport interface IQueryFetch<M extends Model> extends Partial<object> {\n    /**\n     * Fetch from this url.\n     * Usage of this argument is exclusive from {@link IQueryFetch.id} and {@link IQueryFetch.path}.\n     */\n    url?: string\n    /**\n     * Fetch item of this id.\n     * Usage of this argument is exclusive from {@link IQueryFetch.ids}\n     */\n    id?: number,\n    /** Fetch items with this id. */\n    ids?: number[] | Set<number>\n    /** Extra path to append on url. */\n    path?: string,\n    /** Model repository (instead of `Query.repo`'s one). */\n    repo?: Repository<M>\n    /** Lookup field for ids (default: `id__in`). */\n    lookup?: string\n    /** Extra GET parameters. */\n    params?: IObject\n    /** Fetch items from thoses relations. */\n    relations?: string[]\n    /** If true (default value), save items in Pinia repository */\n    save: boolean\n}\n\n/**\n * {@link Query.all} parameters.\n */\nexport interface IQueryAll<M extends Model> extends IQueryFetch<M> {\n    /**\n     * Key of object returned by server that provide url to next items.\n     */\n    nextKey?: string\n    /**\n     * Provide a limit to the number of request to do consecutivelly.\n     * If `-1`, no limit (**use with caution!**).\n     */\n    limit?: number\n}\n\n\n/**\n * This class allows to fetch objects from api, and their relations.\n *\n * It is a utility class built around ``pinia-orm/axios``, using\n * repositories' ``api().get`` method.\n *\n * It allows:\n *\n * - to fetch a model list or all values (using `next` key);\n * - to fetch relations of objects based on fields names;\n *\n * When fetching relations, please ensure that {@link Query.repos} is provided.\n *\n * @example\n * const query = new Query(repos.users, repos)\n *\n * // this fetch User model objects from API, then the related groups.\n * const result = await query.fetch({url: '/users', relations: ['groups']})\n */\nexport default class Query<M extends Model> {\n    /**\n    * @param {Repos} [repos] all models repositories\n    * @param {Repository<M>} [repo] the main repository\n    */\n    constructor(repo: Repository<M>, repos: Repos|null=null) {\n        this.repo = repo\n        this.repos = repos\n    }\n\n    /**\n     * Fetch items from api.\n     *\n     * @param [options.ids] select by ids\n     * @param {Repository} [options.repo] use this repository instead of \\\n     * ``Query.repo``.\n     * @param [options.url] use this url instead of repository's one.\n     * @param [options.id] fetch element with this id.\n     * @param [options.ids] fetch elements with those ids\n     * @param [options.lookup] query GET parameters used to get ids.\n     * @param [options.params] extra GET parameters\n     * @param [options.opts] options passed down to ``repo.api.get``\n     */\n    async fetch({url, id=null, ids=null, repo=null, lookup=\"id__in\", params=undefined, relations=null, path=null, ...opts}: IQueryFetch<M> = {}) : Promise<Response> {\n        repo ??= this.repo\n\n        if(ids?.length === 1) {\n            id = ids[0]\n            ids = null\n        }\n\n        if(!url)\n            url = repo.use?.meta?.getUrl({path, id})\n\n        if(!id)\n            opts.dataKey ??= repo.use?.config?.axiosApi?.dataKey\n        else\n            opts.dataKey = null\n\n        if(ids && lookup !== undefined) {\n            if(id)\n                throw Error(\"Both `ids` and `id` are provided while only one of those arguments is accepted.\")\n            params = {...(params || {})}\n            params[lookup] = [...ids]\n        }\n        const response = await repo.api().get(url, {...opts, params})\n\n        if(relations)\n            response.relations = await this.relations(response.entities, relations, {...opts, params: {}})\n        return response\n    }\n\n    /**\n     * Fetch all items from api.\n     *\n     * @param [options.nextKey] response object key to get next url\n     * @param [options.limit] max count of consecutive requests\n     * @return Response of the first request, whoses ``entities`` has \\\n     * model instances of all requests.\n     */\n    async all({nextKey='next', limit=-1, ...opts} : IQueryAll<M> ={}) : Promise<Response> {\n        const result = await this.fetch(opts)\n\n        let url = result.response.data[nextKey]\n        while(url) {\n            const result2 = await this.fetch({...opts, url})\n            if(result2.entities)\n                result.entities = result.entities !== null ? result.entities.concat(result2.entities) : result2.entities\n            url = result2.response.data[nextKey]\n            if(limit>0) limit--\n            if(!limit) break\n        }\n        return result\n    }\n\n    /**\n     * Fetch all from API if repository is empty (see {@link Query.all}).\n     *\n     * For arguments see {@link Query.all}.\n     *\n     * Return null if no request has been made.\n     */\n    async allOnce(options: IQueryAll<M> = {}) : Promise<Reponse|null> {\n        const repo = options.repo ?? this.repo\n        if(!repo.first())\n            return await this.all(options)\n        return null\n    }\n\n    /**\n     * Fetch related objects for the provided list and field names.\n     *\n     * @param objs - the objects to get related ids from.\n     * @param options.fields - list of field names.\n     * @param options.opts - options to pass down to {@link Quey.relation}.\n     * @return the resulting entities.\n     */\n    async relations(objs: M[], fields: string[], opts = {}) : Promise<{[s: string]: Response}>\n    {\n        this._ensureRepos(\"relations\")\n        const entities: {[s: string]: Response} = {}\n        const relations = this.repo.use?.fields()\n        if(relations)\n            for(const field of fields) {\n                const relation = relations[field]\n                if(relation instanceof Relation)\n                    entities[field] = await this.relation(objs, relation, opts)\n                else\n                    throw Error(`Field ${field} is not a relation`)\n            }\n        return entities\n    }\n\n    protected _ensureRepos(funcName: string) {\n        if(!this.repos)\n            throw Error(`Query.repos is not provided although it is mandatory to call ${funcName}.`)\n    }\n\n    /**\n     * Fetch related objects for the provided object list and field name.\n     * It uses {@link Query.all} in order to fetch all items.\n     *\n     * @param objs - the objects to get ids from.\n     * @param relation - objects' field or field name.\n     * @param options - options to pass down to `all()`.\n     */\n    async relation(objs: Array<M>, relation: string | Relation, options: IQueryAll<M> ={}) : Promise<Response> {\n        this._ensureRepos(\"relations\")\n\n        const rel = asRelation(this.repo, relation)\n        if(!rel)\n            throw Error(`No Relation found for field ${relation}.`)\n\n        const key = (<typeof Model>rel.related.constructor).entity\n        const repo2 = this.repos[key]\n        if(!repo2)\n            throw Error(`No repository \"${key}\" found.`)\n\n        const fk = getSourceKey(rel)\n        if(!fk)\n            throw Error(`No source ids attributes for ${relation}.`)\n        const ids = [... new Set(collectAttr(objs, fk))]\n        const query = new Query(repo2, this.repos)\n        return query.all({...options, ids, repo: repo2})\n    }\n\n}\nexport default interface Query<M extends Model> extends IQuery<M> {}\n\n\n/** Return a new {@link Query} based on repo's entity. */\nexport function query<M extends Model>(repo: string|Repository<M>, repos?: Repos): Query<M> {\n    if(typeof repo == \"string\") {\n        if(!(repo in repos))\n            throw Error(`Repository \"${repo}\" is not present in provided repositories.`)\n        return new Query(repos[repo] as unknown as Repository<M>, repos)\n    }\n    return new Query(repo, repos)\n}\n","import { cloneDeep, isEqual, pick } from 'lodash'\nimport type { Attribute, Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\n\nimport Config from '../config'\nimport { assignNonEmpty, reset, State } from '../utils'\nimport type { Model } from '../models'\n\n\nexport interface IEditorProps<T> {\n    /**\n     * @property initial - initial value provided to the editor\n     */\n    initial: T & {[k: string]: any}\n    /**\n     * @property name - editor name\n     */\n    name?: string\n    /**\n     * @property url - url to send value to\n     */\n    url?: string\n    /**\n     * @property saved - callback to run after object has been saved\n     */\n    saved?: (item: T, editor: IEditor<T,IEditorProps<T>>) => void\n}\n\n\n/**\n * Editor class interface.\n */\nexport interface IEditor<T,P extends IEditorProps<T>> extends IEditorProps<T> {\n    [index: string]: any\n\n    props: P\n    /**\n     * @property value - current edited value\n     */\n    value: T & Record<string, any>\n    /** Empty value, if not provided generated */\n    empty: T\n    /**\n    * @property state - current editor state. Set to `State.PROCESSING` when\n    * saving instance.\n    */\n    state: State\n}\n\n\n/**\n * An Editor handles data edition without changing original value.\n * It provides utilities in order to:\n * - detect if changes have been made;\n * - reset edited values to initial state;\n * - save data to server;\n *\n * Default implementation handles raw Object edition, but not saving data to the server.\n * Note: this might lead to errors due to reactivity when returned from composable.\n */\nexport default class Editor<T extends Record, P extends IEditorProps<T>> {\n    state = State.none()\n    value: T & Record<string, any> = {} as T\n\n    constructor(options: IEditor<T,P>)\n    {\n        options && assignNonEmpty(this, options)\n        if(!this.state)\n            this.state = new State()\n\n        this.value ??= {} as T\n        this.empty ??= {} as T\n        this.initial ??= this.props.initial || this.empty\n        this.valid = true\n        this.reset(this.initial)\n    }\n\n    get name(): string { return this.props.name }\n    get url(): string|null { return this.props.url }\n\n    get errors() : any {\n        return this.state.isError && this.state.data || null\n    }\n\n    /** Discard changes, resetting to initial value. */\n    discard() {\n        this.reset(this.initial)\n    }\n\n    /**\n     * Reset editor data to provided value.\n     * When value is provided, reset initial to this value.\n     */\n    reset(value: T|null = null) {\n        reset(this.value, value ?? this.empty)\n        this.state.none()\n    }\n\n    /** Return wether value has been edited or not */\n    isEdited(): boolean {\n        return !isEqual(this.value, this.initial)\n    }\n\n    /**\n     * Save data. It will `serialize()` value then `send()` it.\n     *\n     * Note: default implementation does not provide `send()` method\n     * and thus will raise an error.\n     *\n     * @param [value] if provided use this instead of `this.value`. When a form is provided, it will get\n     * @return state.\n     */\n    async save(value: T|FormData|null = null, params:Record={}): Promise<State> {\n        this.state.processing()\n\n        if(this.valid === false)\n            return this.state.error({\n                \"_\": \"Some of the input values are invalid\"\n            })\n\n        value ??= this.value\n        if(value instanceof FormData)\n            params.headers = {\n                ...Config.axiosConfig.headers,\n                'Content-Type': 'multipart/form-data',\n                ...params.headers,\n            }\n        else\n            value = this.serialize(value)\n\n        const state = await this.send(value, params)\n        if(state.isOk) {\n            this.reset(state.data as T, true)\n            // this.initial = cloneDeep(this.value)\n            this.saved?.(this.value)\n        }\n        else\n            this.state = state\n        return this.state\n    }\n\n    /**\n     * This method is called when editor successfully saved the\n     * edited item to the server.\n     *\n     * By default, it will call {@link Editor.props.saved} if provided.\n     */\n    saved(item: T) {\n        this.props.saved?.(item, this)\n    }\n\n    /** Serialize value before sending. */\n    serialize<R>(value: T): any { return value }\n\n    /** Send value (not implemented, MUST BE in subclasses). */\n    send(_: Record|FormData, params: Record): Promise<State> {\n        throw \"not implemented\"\n    }\n}\nexport default interface Editor<T,P extends IEditorProps<T>> extends IEditor<T,P> {\n    // Whether edited data are valid. Default to `true`.\n    valid: boolean\n}\n","import {computed, watch} from 'vue'\nimport type {WatchHandle, Reactive} from 'vue'\n\nimport {t} from '../composables'\nimport {assignNonEmpty, State} from '../utils'\nimport type Panels from './panels'\n\n\nexport interface IPanelInfo {\n    /** The view title displayed to user. */\n    title?: string\n    /** The view's icon displayed to user. */\n    icon?: string\n}\n\n\n/** Properties of OxPanel **/\nexport interface IPanelProps extends IPanelInfo {\n    /** Panel's name */\n    name: string\n    /** Index view name **/\n    index: string\n    /** Panel's view */\n    view: string\n    /** Current value */\n    value?: any\n    /** Optional state (used with `ox-state-alert`). */\n    state?: State\n    /** Url to related help page */\n    help?: string\n}\n\n/** Component properties used by OxPanelNav */\nexport type IPanelNavProps = IPanelInfo & {\n    /** Panel's name */\n    name: string\n    /** Panels page **/\n    url?: string\n    /** Required permission */\n    permissions?: string|string[]\n    /** Item type: subheader, divider, (item by default) */\n    type?: string,\n    /** Nested items */\n    items?: Record[]\n    /** Order */\n    order: number\n}\n\nexport interface IPanel<P> extends IPanelInfo {\n    /** Panel's name */\n    readonly name: string\n    /** Panel component properties. */\n    props: P\n    /**\n    * {@link Panels} used to specify current view and value.\n    *\n    * This element may be shared among multiple panels.\n    */\n    panels: Panels\n    /**\n     * Current unsaved changes. This can be updated by component in order\n     * to prevent data loss when changing panels.\n     */\n    editions: Set<string>\n}\n\n\n/**\n * This is the base class used by panels.\n */\nexport default class Panel<P extends IPanelProps = IPanelProps>\n{\n    index: string = 'list.table'\n    view: string = ''\n    value: any = null\n    item: any = null\n    editions: Set<string> = new Set()\n\n    /**\n     * Translation key for message displayed on `confirm()` to leave unsaved\n     * changes.\n     */\n    confirmTKey = \"panel.confirm\"\n\n    /** Panel name (based on props) **/\n    get name(): string { return this.props?.name || '' }\n\n    /** Wether there are still edited items on current view. */\n    get edited(): boolean { return !!this.editions?.size }\n\n    /** Return adequate icon based on props and model **/\n    get icon(): string { return this.props?.icon || null }\n\n    /** Return panel's title based on props. */\n    get title(): string { return this.props?.title }\n\n    constructor(options: IPanel<P>|null = null) {\n        options && assignNonEmpty(this, options)\n        this.view ??= this.index || ''\n    }\n\n    /** Return URL GET parameters for the current view */\n    getUrlParams(): IObject {\n        const params = {panel: this.name}\n        if(this.view != this.index)\n            params.view = this.view\n        if(this.view.startsWith('detail.') && this.value)\n            params.value = this.value\n        return params\n    }\n\n\n    /** Set or remove an edition by name. */\n    setEdition(name: string, edited: boolean) {\n        if(edited) this.editions.add(name)\n        else this.editions.delete(name)\n    }\n\n    /**\n     * Show a view, providing optional value.\n     * @return - true if view changed\n     */\n    show({view=null, value=null, silent=false, force=false}: {view?: string, value?: any, silent?: boolean, force?: boolean}={}) {\n        if((view != this.view || value != this.value) && (force || this.onLeave())) {\n            this.view = view || this.index\n            this.value = value\n            !silent && this.updateLocation()\n            return true\n        }\n        return false\n    }\n\n    /** Update current location using History api */\n    updateLocation() {\n        const params = this.getUrlParams()\n        if(params) {\n            const url = (new URLSearchParams(params)).toString()\n            history.pushState(params, \"\", `?${url}`)\n        }\n    }\n\n    /**\n     * Called when view or panel changes. It returns `true` if view/panel can be changed.\n     *\n     * Ask user for confirmation if there is unsaved changes (aka editions).\n     *\n     * @return true if we can proceed to view/panel change.\n     */\n    onLeave() {\n        if(!this.edited)\n            return true\n\n        const msg = t(this.confirmTKey)\n        return confirm(msg)\n    }\n\n    onViewChange(val: string) {\n        console.log('onViewChange', val)\n        if(!val)\n            this.view = this.index\n    }\n    onValueChange(val: string) {}\n}\nexport default interface Panel<P extends IPanelProps=IPanelProps> extends IPanel<P> {}\n","import {provide} from 'vue'\nimport {assignNonEmpty} from '../utils'\nimport type Panel from './panel'\n\n\nexport interface IPanels {\n    /** Current panel's name. **/\n    panel: string\n    /** Display/GET parameters for the current panel. */\n    params: Record\n    silent: boolean\n}\n\n\nexport interface IPanelShow extends IPanels {\n    force?: boolean\n    href?: string\n}\n\n/**\n * This class is used to panels a panel, providing extra information such\n * as value and view. It is shared among panels.\n *\n * Use it as this provides utilities to avoid data loss and allow current\n * panel to have control over leaving it.\n */\nexport default class Panels {\n    panel: string = \"\"\n    params: Record<string, any> = {}\n    paramsString: string = ''\n    children: {[k: string]: Panel} = {}\n    current: Panel|null\n\n    constructor(options: IPanels|null = null) {\n        options && assignNonEmpty(this, options)\n    }\n\n    /**\n     * Set {@link Panels.params based on current document location.\n     */\n    readDocumentLocation() {\n        this.paramsString = document.location.search.substring(1)\n        const search = new URLSearchParams(this.paramsString)\n        const {panel, ...params} = Object.fromEntries(search.entries())\n        this.panel = panel\n        this.params = params || {}\n    }\n\n    /** Read provided path and return current panel and view */\n    static readPath(path: string) : IPanels {\n        if(!path)\n            return {panel: \"\", view: \"\"}\n\n        const idx = path.indexOf('.')\n        if(idx < 0)\n            return {panel: path, view: ''}\n        return {panel: path.substring(0, idx), view: path.substring(idx+1)}\n    }\n\n    /** Register a panel */\n    register(name: string, child: Panel) {\n        if(!this.children[name]) {\n            this.children[name] = child\n\n            // Set current to child if required\n            if(this.panel == child.name) {\n                this.current = child\n                child.show(this.params)\n            }\n        }\n    }\n\n    /** Unregister a panel */\n    unregister(name: string) {\n        delete this.children[name]\n    }\n\n    /**\n     * Show a panel, loading page provided by href if required.\n     * When there is already a panel displayed, it will call {@link Panel.onLeave} in order to eventually prevent\n     * unwanted page change.\n     */\n    show({force=false, href=null, ...options}: IPanelShow) {\n        const proceed = force || !this.current || this.current.onLeave()\n        if(!proceed)\n            return\n\n        if(href && window.location.pathname != href) {\n            if(!options.panel)\n                throw Error(\"The attribute `href` requires`panel`.\")\n\n            href = `${href}?panel=${options.panel}`\n            if(options.view)\n                href = `${href}&view=${options.view || ''}`\n            window.location.href = href\n            return\n        }\n\n        this.reset(options)\n    }\n\n    reset({panel, silent=false, ...params}: IPanels) {\n        const panelChanged = (panel && panel != this.panel)\n        if(panelChanged && this.current) {\n            if(!this.current.onLeave())\n                return\n        }\n\n        this.panel = panel || this.panel\n        this.params = params\n\n        // Set current and if yet registered, show it.\n        this.current = this.children[this.panel]\n        this.current?.show({...this.params, silent})\n    }\n}\nexport default interface Panels extends IPanels {\n    /** Current panel (set by panels) **/\n    current: Panel|null\n}\n","import type {Repository, Query as $Query} from 'pinia-orm'\nimport type {Response} from '@pinia-orm/axios'\n\nimport {State, assignNonEmpty} from '../utils'\nimport type {Model} from '../models'\n\nimport Query from './query'\nimport type {IQueryFetch} from './query'\n\n\nexport interface IModelController<M extends Model> {\n    /** Response's key used to return data */\n    dataKey: string\n    /** {@link Query} used to fetch list items. */\n    query: Query<M>\n    /** Related fields to get from pinia orm's database and eventually fetch when items are retrieved from API.  */\n    relations?: string[]\n    /** Use this URL instead of model's defined one. */\n    url?: string\n    /** Fetch related fields from API when queried */\n    fetchRelations: boolean\n    /** If true (default value), save items in Pinia repository */\n    save: boolean\n}\n\nexport interface IModelFetch<M extends Model> extends IQueryFetch<M> {\n    /** Response's key used to return data */\n    dataKey?: string\n}\n\n\n/**\n * Base controller class that handles model fetching from the server in conjunction\n * with ORM framework.\n *\n * This provides:\n * - load items from the server and manage state accordingly (using {@link Query});\n * - items are retrieved from ORM store with specified relations;\n *\n * It does not:\n * - fetch items' related objects.\n *\n * This is used for {@link ModelDetail} and {@link ModelList}.\n */\nexport default class ModelController<M extends Model, O=IModelController<M>> {\n    state = State.none()\n    save = true\n\n    /** The repository of contained items. */\n    get repo(): Repository<M> { return this.query.repo }\n\n    /** Current model. */\n    get model(): typeof Model { return (this.repo.use as typeof Model) }\n\n    constructor(options: IModelController<M>|null = null) {\n        options && assignNonEmpty(this, options)\n    }\n\n    /** Return orm's query to object. This will includes declared {@link List.relations}.\n     *\n     *   @param ids - optional id lookup\n     *   @param first - if true, return the first item\n     *   @return orm's query\n     */\n    queryset(ids: number|number[]|null=null, first=false) : $Query<M> {\n        let query = this.repo.query()\n        if(this.relations)\n            for(const relation of this.relations)\n                query = query.with(relation)\n\n        return ids ? query.whereId(ids) : query\n    }\n\n    /**\n     * Fetch model instance from the server and select them.\n     *\n     * Calling this method updates state to:\n     * - `PROCESSING`: request is being made;\n     * - `NONE`: request has been done without error;\n     * - `ERROR`: if an error happened;\n     *\n     * Flowchart:\n     * - {@link ModelController.fetch}\n     * - {@link ModelController.handleResponse}\n     */\n    async load(options: IModelFetch<M> = {}): Promise<Response|null> {\n        this.state.processing()\n        let response = null\n        try {\n            response = await this.fetch(options)\n            response = await this.handleResponse(options, response)\n        }\n        catch(error) {\n            this.state.error(error)\n        }\n        if(!this.state.isError)\n            this.state.none()\n        return response\n    }\n\n    /** Fetch model instance from the server.\n     *\n     * Flowchart:\n     * - {@link ModelController.getQueryParams}\n     * - {@link Query.fetch}\n     */\n    async fetch(options: IModelFetch<M> = {}) : Promise<Response> {\n        const opts = this.getQueryOptions(options)\n        return await this.query.fetch(opts)\n    }\n\n    /** Handle response from the {@link ModelContainer.fetch}'s request. */\n    async handleResponse(options: IModelFetch<M>, response: Response): Promise<Response> {\n        // TODO: handle status code\n        return response\n    }\n\n    /** Get {@link Query.fetch} options. */\n    protected getQueryOptions(options: IModelFetch<M>): IQueryFetch<M> {\n        if(!options.relations && this.relations && this.fetchRelations)\n            options.relations = this.relations\n        // if(!(\"dataKey\" in options))\n        //    options.dataKey = this.dataKey\n        if(!options.url)\n            options.url = this.url\n        if(!(\"save\" in options))\n            options.save = this.save\n        return options\n    }\n}\nexport default interface ModelController<M extends Model, O> extends IModelController<M> {\n    /** Current request's state. */\n    state: State\n}\n","import {uniqWith} from 'lodash'\nimport {unref} from 'vue'\nimport type {Ref} from 'vue'\nimport type {Response} from '@pinia-orm/axios'\n\nimport {collectAttr} from '../utils'\nimport type {Model} from '../models'\nimport type {IObject} from '../utils'\n\nimport Query from './query'\nimport ModelController from './modelController'\nimport type {IQueryFetch} from './query'\nimport type {IModelController, IModelFetch} from './modelController'\n\n\nexport type FilterValue = number | string\nexport type Filters = IObject<FilterValue>\n\n\n/** Base interface of a ModelList */\nexport interface IModelList<M extends Model> extends IModelController<M> {\n    /** Provide extra GET parameters. */\n    filters?: Filters\n    /** Response's key used to return URL to previous paginated items. */\n    prevKey: string\n    /** Response's key used to return URL to next paginated items.  */\n    nextKey: string\n    /** Response's key used to return total items count. */\n    countKey: string\n}\n\n/**\n * Arguments of {@link ModelList.fetch}. It is passed down to {@link Query.fetch}.\n */\nexport interface IModelListFetch<M extends Model> extends IModelFetch<M> {\n    /** Query's GET parameters used to filter the list. */\n    filters?: Filters\n    /**\n     * Append items to list. If `false` (default), fetch results will replace\n     * current list items.\n     */\n    append?: boolean | number\n}\n\n\n\n/**\n * Handle a list of model instances fetched using Rest Api. It is\n * used in model's panels.\n *\n * It uses {@link Query} object in order to fetch items and relations.\n *\n *\n * @example\n * const value = ref(null)\n * const list = new ModelList.reactive({\n *     query: new Query(repos.users, repos),\n *     relations: ['groups'],\n *     value,\n * })\n *\n * await list.load({url: '/users'})\n */\nexport default class ModelList<M extends Model> extends ModelController<M, IModelList<M>> {\n    // ids: number[] = []\n    items: M[] = []\n    filters: Filters = {}\n    nextUrl: string|null = null\n    prevUrl: string|null = null\n    count: number|null = null\n\n    dataKey = \"results\"\n    nextKey = \"next\"\n    prevKey = \"previous\"\n    countKey = \"count\"\n\n    /** Get items count. */\n    get length(): number { return this.items.length }\n\n    /** Get ids **/\n    get ids(): number[] { return this.items.map(v => v.id) }\n\n    /** Get item by list index */\n    get(index: number): number { return index < this.items.length ? this.items[index] : null }\n\n    /** Reset list */\n    reset(items: M[] = []) {\n        this.items = items\n        this.nextUrl = null\n        this.prevUrl = null\n    }\n\n    /** Get item index by id */\n    findIndex(id: number): number { return this.items.findIndex((v) => v.id == id) }\n\n    /** Return True if item is in list */\n    contains(id: number): boolean { return this.findIndex(id) != -1 }\n\n    /** Add item if not present in list.\n    *\n    * @param item - item to insert\n    * @param index - if provided insert at this position\n    * @return item index if already in the list, else insertion one\n    */\n    add(item: M, index?: number = null): boolean {\n        const idx = this.findIndex(item.id)\n        if(idx != -1)\n            return idx\n\n        if(index !== null) {\n            this.items.splice(index, 1, item)\n            return index\n        }\n        this.items.push(item)\n        return this.items.length-1\n    }\n\n    /**\n     * Get item id next to provided one at the specified direction.\n     *\n     * @param item - reference item\n     * @param step - increment or decrement item index by this value.\n     * @return the target item id or null if not found.\n     */\n    getSiblingIndex(item: M|null, step: number): number {\n        if(item === null)\n            return -1\n\n        const index = this.findIndex(item.id)\n        const sibling = index >= 0 ? index+step : -1\n        return sibling >= 0 && sibling < this.items.length ? sibling : -1\n    }\n\n    /**\n     * Fetch next items from API, override `url` using {@link ModelList.nextUrl}.\n     */\n    async loadNext(options: IModelListFetch<M>): Promise<Response> {\n        return await this.load({...options, url: this.nextUrl})\n    }\n\n    /**\n     * Fetch previous items from API, override `url` using {@link ModelList.prevUrl}.\n     */\n    async loadPrev(options: IModelListFetch<M>): Promise<Response> {\n        return await this.load({...options, url: this.prevUrl})\n    }\n\n    protected getQueryOptions(options: IModelFetch<M>): IQueryFetch<M> {\n        if(this.filters)\n            options.params = {...this.filters, ...(options.params ?? [])}\n        return super.getQueryOptions(options)\n    }\n\n    /**\n     * Handle response from API.\n     * Reset list and context information such as next/prev url, total count.\n     */\n    async handleResponse({append=false, ...options}: IModelListFetch<M>, response: Response): Promise<Response> {\n        response = await super.handleResponse(options, response)\n        if(!this.state.isError) {\n            /*const ids = [...collectAttr(response.entities, 'id')]\n            if(typeof append == \"number\")\n                this.ids.splice(append, 0, ...ids)\n            else\n                this.ids = append ? this.ids.concat(ids) : ids\n                */\n            if(typeof append == \"number\")\n                this.items.splice(append, 0, ...response.entities)\n            else\n                this.items = append ? this.items.concat(response.entities) : response.entities\n\n            this.items = uniqWith(this.items, (a, b) => a.id == b.id)\n            this.nextUrl = response.response.data[this.nextKey] || null\n            this.prevUrl = response.response.data[this.prevKey] || null\n            this.count = response.response.data[this.countKey] || this.length\n        }\n        return response\n    }\n}\n\nexport default interface ModelList<M extends Model> extends IModelList<M> {\n    //ids: number[]\n    items: M[]\n    nextUrl: string|null\n    prevUrl: string|null\n    count: number|null\n}\n","import { cloneDeep, isEqual, pick } from 'lodash'\nimport type { Attribute, Repository } from 'pinia-orm'\nimport type { Response } from '@pinia-orm/axios'\nimport {toRaw} from 'vue'\n\nimport { reset, State } from '../utils'\nimport Editor from './editor'\nimport type { IObject } from '../utils'\nimport type { Model } from '../models'\nimport type {IEditor, IEditorProps, IEditorSend} from './editor'\n\n\n/**\n * ModelEditor properties (as passed down to {@link OxModelEdit} component).\n */\nexport interface IModelEditorProps<T extends Model> extends IEditorProps<T> {\n    /** Related repository */\n    repo: Repository<T>\n}\n\nexport interface IModelEditorSend extends Record {\n    id: number\n}\n\n\n/**\n * Editor sub-class used to edit model instances.\n *\n * Regarding properties ({@link IModelEditorProps}):\n * - `name` defaults to `{model.entity}-edit`.\n * - `repo` is mandatory\n *\n */\nexport default class ModelEditor<T extends Model, P extends IModelEditorProps<T>> extends Editor<T,P> {\n    constructor(options : IEditor<T,P>) {\n        options.fields = Object.keys((options.props.repo.use as typeof Model).fields())\n        options.empty ??= new options.props.repo.use()\n        super(options)\n    }\n\n    get repo() { return this.props.repo }\n    get name() { return this.props.name || `${this.repo.use.entity}-edit` }\n    isEdited(): boolean {\n        return !isEqual(pick(this.value, this.fields), pick(this.initial, this.fields))\n    }\n\n    get url(): string {\n        const url = super.url || (this.repo.use as typeof Model)?.meta?.url\n        if(!url)\n            throw Error(\"No url specified as parameter or in Model.meta.\")\n        return url\n    }\n\n    reset(value: T|null): void {\n        if(!value || !Object.keys(value).length)\n            value = this.empty\n\n        const fields = this.fields.filter(k => k in value)\n        this.value = cloneDeep(pick(value, fields)) || {}\n        this.state.none()\n    }\n\n    serialize(value: T): {[k: string]: any} {\n        const cls = this.repo.use\n        const obj = new cls({...this.value})\n        return obj.$toJson(null, {relations: false})\n    }\n\n    send(value: IModelEditorSend|FormData, params: Record = {}) : Promise<State> {\n        let [func, url] = [\"post\", this.url]\n        if(value.id) {\n            url = `${url}${value.id}/`\n            func = \"put\"\n        }\n        return this.repo.api()[func](url, value, params).then(\n            (result: Response) => State.ok(result.entities[0]),\n            (error: Response) => State.error(error.response.data)\n        )\n    }\n}\nexport default interface ModelEditor<T extends Model, P extends IModelEditorProps<T>> extends Editor<T,P> {\n    fields: string[]\n}\n","import {computed, reactive, toRefs} from 'vue'\nimport type {Reactive} from 'vue'\nimport type {Repository} from 'pinia-orm'\n\nimport {Model} from '../models'\nimport {mapToObject} from '../utils'\nimport {t, tKeys} from '../composables/i18n'\n\nimport type ModelList from './modelList'\nimport type Query from './query'\nimport type {Repos} from '../models'\n\nimport type {IPanel, IPanelProps} from './panel'\nimport type Panels from './panels'\n\nimport Panel from './panel'\nimport {query} from './query'\n\n\n/** Model panel component properties. */\nexport interface IModelPanelProps<M extends Model> extends IPanelProps {\n    /** Current repository */\n    repo: Repository<M>\n    // search: string\n    /** Current view */\n    view: string\n    /** List table headers */\n    headers?: string[]\n    /** Related fields to get from pinia orm's database and eventually fetch when items are retrieved from API.  */\n    relations?: string[]\n    /** Show filters */\n    showFilters?: boolean\n    /** Fetch related fields from API when queried */\n    fetchRelations: boolean\n    /** Search filter lookup */\n    search: string\n\n    /**\n     * Display this warning on the top of the panel.\n     */\n    warning?: string\n}\n\n/** Model panel interface. */\nexport interface IModelPanel<\n    M extends Model,\n    P extends IModelPanelProps<M> = IModelPanelProps<M>\n> extends IPanel<P>\n{\n    /** List controller used to load and handle multiple items from the server. */\n    list: ModelList<M>\n    /** Detail controller used to load and handle a single item from the server. */\n    //detail: ModelListDetail<M>\n}\n\n\n/** This class handles model panel (used by {@link OxModelPanel}. */\nexport default class ModelPanel<\n    M extends Model,\n    P extends IModelPanelProps<M> = IModelPanelProps<M>,\n> extends Panel<P>\n{\n    showFilters: boolean = false\n\n    constructor(options: IModelPanel<M,P>) {\n        super(options)\n        this.showFilters = this.props?.showFilters || false\n    }\n\n    /** Current model's repository. */\n    get repo(): Repository<M> { return this.props.repo }\n\n    /** Current model. */\n    get model(): typeof Model { return (this.repo.use as typeof Model) }\n\n    /** Query (shortcut to `this.list.query`). **/\n    get query(): Query<M> { return this.list.query }\n\n    /** Return icon based on props and model **/\n    get icon(): string { return super.icon || this.model.meta?.icon }\n\n    /** Return panel's title based on view and current item. */\n    get title(): string {\n        const {props, list} = this\n        const model = this.repo.use\n        if(model) {\n            // many items\n            if(this.view?.startsWith('list.'))\n                return t(tKeys.model(model), 3)\n\n            if(this.view?.startsWith('detail.')) {\n                if(this.value?.$title)\n                    return this.value.$title\n\n                const name = t(tKeys.model(model))\n                return this.value?.id\n                    ? t(`models._.title`, {model: name, id: this.value.id})\n                    : t(`models._.title.new`, {model: name})\n            }\n        }\n        return super.title\n    }\n\n    getUrlParams() {\n        const {value=null, ...params} = super.getUrlParams()\n        if(value?.id)\n            params.id = value.id\n        return params\n    }\n\n    /**\n     * Edit a new item.\n     *\n     * @param view - edit view.\n     */\n    create(view: string='detail.edit') {\n        this.show({view, value: null})\n    }\n\n    /** Called when an item has been created. By default, show edit view. */\n    created(value: M, view: string=\"detail.edit\") {\n        // this.list.load()\n        this.show({view, value})\n    }\n\n    show({id=null, ...params}: {view?: string, value?: M, id: number}) {\n        if(id) {\n            query(this.repo).fetch({id, relations: this.relations}).then(r => {\n                super.show({...params, value: r.entities[0]})\n                return r\n            })\n        }\n        else\n            return super.show(params)\n    }\n\n    onViewChange(val: string) {\n        super.onViewChange(val)\n        if(val.startsWith('list.'))\n            this.list.load()\n        //if(val.startsWith('detail.'))\n        //    this.detail.load()\n    }\n    onValueChange(val: string) {\n        //val && this.detail.load({id: val})\n    }\n}\n\n\nexport default interface ModelPanel<M extends Model,P extends IModelPanelProps<M>=IModelPanelProps<M>,O=IModelPanel<M>> extends IModelPanel<M,P> {\n    showFilters: boolean\n}\n","import {\n    computed, inject, isRef, toRefs, unref, watch,\n    onMounted, onUnmounted, provide, reactive,\n} from 'vue'\n\nimport type {ComputedRef, Reactive, Ref, WatchHandle} from 'vue'\nimport type {Repository} from 'pinia-orm'\n\nimport {injectOrProvide} from '../utils'\nimport type {IObject} from '../utils'\nimport type {Repos, Model} from '../models'\n\nimport {\n    Panels, Panel, ModelPanel,\n    Query, ModelList,\n    Editor, ModelEditor\n} from '../controllers'\n\nimport type {\n    IPanels, IPanel, IPanelProps,\n    IModelPanel, IModelPanelProps,\n    IModelList,\n    IEditor, IEditorProps, IModelEditorProps,\n} from '../controllers'\n\n\n//---- Panels\n/**\n * Create a new reactive {@link Panels} and provide it as `panels`.\n *\n * It also creates watchers in order to:\n * - update document title based on current panel's view\n * - keep track of current view's url: when a panels' getUrlParams changes, it will `History.pushState` storing those params;\n *\n * @return the reactive Panels.\n */\nexport function usePanels(options: IPanels) {\n    const panels = reactive(new Panels(options))\n    provide('panels', panels)\n\n    onMounted(() => {\n        panels.readDocumentLocation()\n        panels.panel && panels.show({\n            panel: panels.panel, silent: true,\n            ...panels.params\n        })\n    })\n\n    window.addEventListener(\"popstate\", (event) => {\n        if(event.state)\n            panels.show({...event.state, silent: true})\n    })\n\n    // we update title after history state\n    const initialTitle = document.title\n    watch(() => panels.current?.title, (val) => {\n        if(val)\n            document.title = `${val} | ${initialTitle}`\n        else\n            document.title = initialTitle\n    })\n\n    return panels\n}\n\n/** Create a new {@link Panel}.\n*\n* - (un)register the panel to object's `panels` on (un)mount.\n* - provide `panel`;\n* - watch on {@link Panel.view} calling {@link Panel.onViewChange}\n*/\nexport function usePanel<P extends IPanelProps>(options: IPanel<P>, cls: typeof Panel<P>) {\n    const panel = reactive(new cls(options))\n\n    provide('panel', panel)\n    onMounted(() => panel.panels.register(panel.name, panel))\n    onUnmounted(() => panel.panels.unregister(panel.name))\n\n    // watch(() => panel.view, (val, old) => val != old && panel.onViewChange(val))\n    return {panel}\n}\n\n/** Create a new {@link ModelPanel}. */\n// TODO: allow to pass list down\nexport function useModelPanel<M extends Model, P extends IModelPanelProps<M>>(\n    {query, repos, ...options}: IModelPanel<M,P>\n)\n{\n    repos ??= inject('repos')\n    query ??= useQuery(options.props.repo, inject('repos'))\n    options.panels ??= inject('panels')\n\n    const {list, items} = useModelList({\n        query,\n        relations: options.props.relations,\n        fetchRelations: options.props.fetchRelations\n    })\n    const {panel} = usePanel({list, ...options}, ModelPanel)\n\n    const next = computed(() => {\n        const index = list.getSiblingIndex(unref(panel.value), 1)\n        return items.value[index] ?? null\n    })\n    const prev = computed(() => {\n        const index = list.getSiblingIndex(unref(panel.value), -1)\n        return items.value[index] ?? null\n    })\n\n    return {panels: panel.panels, panel, list, items, next, prev}\n}\n\n\n//---- Controllers\n/** Create a new {@link List} and provide it as `list`. */\nexport function useModelList<M extends Model>(options : IModelList<M>, cls: typeof ModelList = ModelList)\n{\n    const list = reactive(new cls(options))\n    const items = computed(() =>\n        list.save && list.relations && list.length ?\n            list.queryset(list.ids).orderBy((item) => list.ids.indexOf(item)).get() :\n            list.items\n    )\n\n    provide('list', list)\n    provide('items', items)\n    return {list, items}\n}\n\n/** This composable return a new query from provided arguments. */\nexport function useQuery<M extends Model>(repo: Repository<M>, repos: Repos|null=null): Query<M> {\n    const query = new Query(repo, repos)\n    provide('query', query)\n    return query\n}\n\n\n/**\n * This composable create an new Editor and returns it as reactive object.\n *\n * - provide `editor`\n * - set default `saved` method if emits is provided\n * - watch on edition to update panel's editions\n */\nexport function useEditor<\n    T extends Record<string,any>,\n    P extends IEditorProps<T>,\n>(\n    options: IEditor<T,P>,\n    cls: typeof Editor<T,P>=Editor<T,P>\n)\n{\n    const initial = options.initial || options.props.initial\n    const editor = reactive(new cls(options))\n\n    provide('editor', editor)\n\n    const edited = computed(() => editor.isEdited())\n    watch(() => editor.props.initial, (val) => {\n        editor.initial = val || editor.empty\n        editor.reset(val || editor.empty)\n    })\n\n    const panel = inject('panel') as Panel\n    if(panel)\n        watch(() => editor.edited, (val: boolean) => panel.setEdition(editor.name, val))\n\n    return {editor, edited}\n}\n\n/** Return a new reactive {@link ModelEditor} */\nexport function useModelEditor<\n    T extends Model,\n    P extends IModelEditorProps<T>\n>(\n    options: IEditor<T,P>,\n    cls: typeof ModelEditor<T,P> = ModelEditor<T,P>\n)\n{\n    return useEditor(options, cls)\n}\n","import {t} from '../composables'\n\n/**\n * This object provide commonly used validation rules to use with form fields.\n */\nexport default {\n    /** Field is required */\n    required(value) {\n        return value ? true : t('fields._.required')\n    },\n\n    /**\n     * Validate field errors returned from the server.\n     */\n    errors(errorList) {\n        return () => (errorList?.length ? errorList.join('<br>') || false : true)\n    },\n\n    /**\n     * Return a rule whose validating value is optional.\n     *\n     * By default rules require value to be provided. This returns a new\n     * rule whose value can either be empty or must match provided rule.\n     */\n    optional(rule) {\n        return (value) => {\n            return !value || rule(value)\n        }\n    },\n\n    /** Rule validating email */\n    email(value) {\n        const allowed = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n        return allowed.test(value) || t(\"fields.email.rule\")\n    },\n\n    /** Rule validating username */\n    username(value) {\n        const allowed = /^[A-Za-z0-9@.+\\-_]+$/\n        return allowed.test(value) || \"Username must not be empty. It only can contain letters, numbers and @/+/./- special characters\"\n    },\n}\n","import { defineAsyncComponent as $defineAsyncComponent } from 'vue'\n\nexport * from './app'\nexport * from './actions'\nexport * from './init'\nexport * from './i18n'\nexport * from './models'\nexport * from './controllers'\nexport {default as rules} from './rules'\n\n\n/**\n * Similar to `defineAsyncComponent` allowing to load a component\n * by name from a provided module url.\n */\nexport function defineAsyncComponent(url: string, name: string) {\n    return $defineAsyncComponent(() => {\n        return import(url).then(mod => {\n            if(!name)\n                return mod\n            console.log(mod, mod.components, Object.keys(mod))\n            const obj = Object.values(mod).filter((y: {[k: string]: any}) => y.__name == name)[0]\n            return obj\n        })\n    })\n}\n\n\n/**\n * This exception is used in order to display the message to user\n * when it is raised.\n */\nclass UserError extends Error {}\n"],"names":["asRelation","repo","relation","fields","_a","field","Relation","getSourceKey","HasMany","HasManyBy","HasOne","BelongsTo","Response","repository","config","response","__publicField","data","method","result","action","Request","actions","_c","_b","name","url","requestConfig","axiosResponse","AxiosRepository","Repository","database","pinia","useAxiosApi","axios","useAxiosRepo","model","getActivePinia","useRepo","createPiniaOrmAxios","axiosConfig","definePiniaOrmPlugin","context","useModels","models","useInject","useDefaults","repos","inject","injected","User","provide","usePermissionsProps","usePermissions","user","perms","value","permissions","Permissions","allowed","computed","unref","AppContext","opts","obj","reactive","State","dataEl","el","useAppContext","load","useAction","props","emits","processing","ref","args","weekInfo","locale","code","getWeekArray","date","firstDayOfWeek","weeks","currentWeek","firstDayOfMonth","startOfMonth","lastDayOfMonth","endOfMonth","first","firstDayWeekIndex","lastDayWeekIndex","i","adjacentDay","day","startOfWeek","d","endOfWeek","lastDay","parseLocalDate","parts","_YYYMMDD","parsed","sundayJanuarySecond2000","getWeekdays","daysFromSunday","createRange","weekday","format","formatString","formats","newDate","customFormat","options","month","toISO","adapter","year","padStart","parseISO","addMinutes","amount","addHours","addDays","addWeeks","addMonths","getYear","getMonth","getWeek","firstWeekMinSize","weekInfoFromLocale","weekStart","minWeekSize","firstWeekSize","yearStart","getDiff","currentWeekEnd","size","d1w1","getDate","getNextMonth","getPreviousMonth","getHours","getMinutes","startOfYear","endOfYear","isWithinRange","range","isAfter","isBefore","isValid","comparing","isAfterDay","startOfDay","isEqual","isSameDay","isSameMonth","isSameYear","unit","c","setHours","count","setMinutes","setMonth","setDate","setYear","endOfDay","VuetifyDateAdapter","firstDay","DateOptionsSymbol","DateAdapterSymbol","createDate","_options","mergeDeep","createInstance","instance","watch","createVuetify","vuetify","blueprint","rest","aliases","components","directives","scope","effectScope","defaults","createDefaults","display","createDisplay","theme","createTheme","icons","createIcons","createLocale","goTo","createGoTo","install","app","key","defineComponent","appScope","DefaultsSymbol","DisplaySymbol","ThemeSymbol","IconSymbol","LocaleSymbol","GoToSymbol","IN_BROWSER","mount","vm","nextTick","unmount","version","provides","md3","mdi","green","colors","init","App","onLoad","initApp","createApp","resolve","plugins","$createApp","i18n","useI18n","plugin","vendorComponents","$createVuetify","createPinia","baseURL","$createPinia","piniaOrm","createORM","setActivePinia","Query","id","ids","lookup","params","relations","path","_e","_d","nextKey","limit","result2","objs","entities","funcName","rel","repo2","fk","collectAttr","query","Editor","assignNonEmpty","reset","Config","state","item","_","Panel","edited","view","silent","force","msg","t","val","Panels","search","panel","idx","child","href","ModelController","error","ModelList","v","index","items","step","sibling","append","uniqWith","a","b","ModelEditor","pick","k","cloneDeep","cls","func","ModelPanel","list","tKeys","r","usePanels","panels","onMounted","event","initialTitle","usePanel","onUnmounted","useModelPanel","useQuery","useModelList","next","prev","useEditor","editor","useModelEditor","rules","errorList","rule","defineAsyncComponent","$defineAsyncComponent","mod","y"],"mappings":"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","x_google_ignoreList":[1,5,6,7,8,9]}
