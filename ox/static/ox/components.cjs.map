{"version":3,"file":"components.cjs","sources":["../../../assets/ox/src/components/OxAction.vue","../../../assets/ox/src/components/OxActionModelDelete.vue","../../../assets/ox/src/components/OxActions.vue","../../../assets/ox/node_modules/vuetify/lib/components/VSnackbar/VSnackbar.mjs","../../../assets/ox/src/components/OxApp.vue","../../../assets/ox/src/components/OxComponent.vue","../../../assets/ox/src/components/OxFieldDetails.vue","../../../assets/ox/src/components/OxListFilters.vue","../../../assets/ox/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroupItem.mjs","../../../assets/ox/src/components/OxListKanban.vue","../../../assets/ox/src/components/OxListTable.vue","../../../assets/ox/src/components/OxStateAlert.vue","../../../assets/ox/src/components/OxValidationBtn.vue","../../../assets/ox/src/components/OxLogin.vue","../../../assets/ox/src/components/OxPanel.vue","../../../assets/ox/src/components/OxModelEdit.vue","../../../assets/ox/src/components/OxModelPanel.vue","../../../assets/ox/src/components/OxPanelNav.vue","../../../assets/ox/src/components/index.ts"],"sourcesContent":["<template>\n    <template v-if=\"action.allowed\">\n        <v-btn v-if=\"props.button\" variant=\"text\"\n            :color=\"props.color\" :icon=\"props.icon\"\n            :title=\"props.title\" :aria-label=\"props.title\"\n            @click.stop=\"run\">\n        </v-btn>\n        <v-list-item v-else\n            :title=\"props.title\" :base-color=\"props.color\" :prepend-icon=\"props.icon\"\n            @click.stop=\"run\"/>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport {computed, defineProps, defineEmits, inject, toRefs} from 'vue'\nimport {useAction} from 'ox'\n\nimport type {IPermission, Model} from 'ox'\nimport type {ActionRun, ActionCompleted} from 'ox'\nimport type {ActionProps} from '../composables/actions'\n\nconst props = defineProps<ActionProps>()\n\nconst emits = defineEmits<{\n    completed: ActionCompleted\n}>()\nconst context = inject('context')\nconst action = useAction({user: context.user, emits}, props)\n\nasync function run(...args) {\n    await action.run(...args)\n}\n</script>\n","<template>\n    <ox-action\n        :item=\"props.item\" :button=\"props.button\"\n        icon=\"mdi-delete\" color=\"error\"\n        :title=\"t('actions.delete')\" :confirm=\"t('actions.delete.confirm')\"\n        :permissions=\"['delete', (u, o) => o.id]\"\n        :run=\"run\" @completed=\"panel?.show()\"\n    />\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject } from 'vue'\nimport { useI18n } from 'vue-i18n'\n\nimport OxAction from './OxAction.vue'\n\nconst { t } = useI18n()\nconst panel = inject('panel')\nconst repos = inject('repos')\n\nconst props = defineProps<{\n    item: Object\n    button?: boolean\n}>()\n\nasync function run(user, item) {\n    const repo = repos[item.constructor.entity]\n    return await repo.api().delete(item.$url(), {delete: props.item.id})\n}\n</script>\n","<template>\n    <slot name=\"before\" v-bind=\"props\"></slot>\n    <slot name=\"default\" v-bind=\"props\"></slot>\n    <slot name=\"after\" v-bind=\"props\"></slot>\n</template>\n<script setup>\nimport {computed, defineProps, inject, toRefs, useSlots} from 'vue'\n\nconst slots = useSlots()\nconst props = defineProps({\n    // Action's Props\n    value: Object,\n    dense: {type: Boolean, default: false},\n    button: {type: Boolean, default: false},\n    exclude: {type: Array},\n})\n</script>\n","import { mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VSnackbar.css\";\n\n// Components\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { VProgressLinear } from \"../VProgressLinear/index.mjs\"; // Composables\nimport { useLayout } from \"../../composables/index.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { VuetifyLayoutKey } from \"../../composables/layout.mjs\";\nimport { makeLocationProps } from \"../../composables/location.mjs\";\nimport { makePositionProps, usePosition } from \"../../composables/position.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Utilities\nimport { computed, inject, mergeProps, nextTick, onMounted, onScopeDispose, ref, shallowRef, watch, watchEffect } from 'vue';\nimport { genericComponent, omit, propsFactory, refElement, useRender } from \"../../util/index.mjs\"; // Types\nfunction useCountdown(milliseconds) {\n  const time = shallowRef(milliseconds());\n  let timer = -1;\n  function clear() {\n    clearInterval(timer);\n  }\n  function reset() {\n    clear();\n    nextTick(() => time.value = milliseconds());\n  }\n  function start(el) {\n    const style = el ? getComputedStyle(el) : {\n      transitionDuration: 0.2\n    };\n    const interval = parseFloat(style.transitionDuration) * 1000 || 200;\n    clear();\n    if (time.value <= 0) return;\n    const startTime = performance.now();\n    timer = window.setInterval(() => {\n      const elapsed = performance.now() - startTime + interval;\n      time.value = Math.max(milliseconds() - elapsed, 0);\n      if (time.value <= 0) clear();\n    }, interval);\n  }\n  onScopeDispose(clear);\n  return {\n    clear,\n    time,\n    start,\n    reset\n  };\n}\nexport const makeVSnackbarProps = propsFactory({\n  multiLine: Boolean,\n  text: String,\n  timer: [Boolean, String],\n  timeout: {\n    type: [Number, String],\n    default: 5000\n  },\n  vertical: Boolean,\n  ...makeLocationProps({\n    location: 'bottom'\n  }),\n  ...makePositionProps(),\n  ...makeRoundedProps(),\n  ...makeVariantProps(),\n  ...makeThemeProps(),\n  ...omit(makeVOverlayProps({\n    transition: 'v-snackbar-transition'\n  }), ['persistent', 'noClickAnimation', 'scrim', 'scrollStrategy'])\n}, 'VSnackbar');\nexport const VSnackbar = genericComponent()({\n  name: 'VSnackbar',\n  props: makeVSnackbarProps(),\n  emits: {\n    'update:modelValue': v => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      positionClasses\n    } = usePosition(props);\n    const {\n      scopeId\n    } = useScopeId();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const countdown = useCountdown(() => Number(props.timeout));\n    const overlay = ref();\n    const timerRef = ref();\n    const isHovering = shallowRef(false);\n    const startY = shallowRef(0);\n    const mainStyles = ref();\n    const hasLayout = inject(VuetifyLayoutKey, undefined);\n    useToggleScope(() => !!hasLayout, () => {\n      const layout = useLayout();\n      watchEffect(() => {\n        mainStyles.value = layout.mainStyles.value;\n      });\n    });\n    watch(isActive, startTimeout);\n    watch(() => props.timeout, startTimeout);\n    onMounted(() => {\n      if (isActive.value) startTimeout();\n    });\n    let activeTimeout = -1;\n    function startTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n      const timeout = Number(props.timeout);\n      if (!isActive.value || timeout === -1) return;\n      const element = refElement(timerRef.value);\n      countdown.start(element);\n      activeTimeout = window.setTimeout(() => {\n        isActive.value = false;\n      }, timeout);\n    }\n    function clearTimeout() {\n      countdown.reset();\n      window.clearTimeout(activeTimeout);\n    }\n    function onPointerenter() {\n      isHovering.value = true;\n      clearTimeout();\n    }\n    function onPointerleave() {\n      isHovering.value = false;\n      startTimeout();\n    }\n    function onTouchstart(event) {\n      startY.value = event.touches[0].clientY;\n    }\n    function onTouchend(event) {\n      if (Math.abs(startY.value - event.changedTouches[0].clientY) > 50) {\n        isActive.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isHovering.value) onPointerleave();\n    }\n    const locationClasses = computed(() => {\n      return props.location.split(' ').reduce((acc, loc) => {\n        acc[`v-snackbar--${loc}`] = true;\n        return acc;\n      }, {});\n    });\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      const hasContent = !!(slots.default || slots.text || props.text);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-snackbar', {\n          'v-snackbar--active': isActive.value,\n          'v-snackbar--multi-line': props.multiLine && !props.vertical,\n          'v-snackbar--timer': !!props.timer,\n          'v-snackbar--vertical': props.vertical\n        }, locationClasses.value, positionClasses.value, props.class],\n        \"style\": [mainStyles.value, props.style]\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"contentProps\": mergeProps({\n          class: ['v-snackbar__wrapper', themeClasses.value, colorClasses.value, roundedClasses.value, variantClasses.value],\n          style: [colorStyles.value],\n          onPointerenter,\n          onPointerleave\n        }, overlayProps.contentProps),\n        \"persistent\": true,\n        \"noClickAnimation\": true,\n        \"scrim\": false,\n        \"scrollStrategy\": \"none\",\n        \"_disableGlobalStack\": true,\n        \"onTouchstartPassive\": onTouchstart,\n        \"onTouchend\": onTouchend,\n        \"onAfterLeave\": onAfterLeave\n      }, scopeId), {\n        default: () => [genOverlays(false, 'v-snackbar'), props.timer && !isHovering.value && _createVNode(\"div\", {\n          \"key\": \"timer\",\n          \"class\": \"v-snackbar__timer\"\n        }, [_createVNode(VProgressLinear, {\n          \"ref\": timerRef,\n          \"color\": typeof props.timer === 'string' ? props.timer : 'info',\n          \"max\": props.timeout,\n          \"model-value\": countdown.time.value\n        }, null)]), hasContent && _createVNode(\"div\", {\n          \"key\": \"content\",\n          \"class\": \"v-snackbar__content\",\n          \"role\": \"status\",\n          \"aria-live\": \"polite\"\n        }, [slots.text?.() ?? props.text, slots.default?.()]), slots.actions && _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VBtn: {\n              variant: 'text',\n              ripple: false,\n              slim: true\n            }\n          }\n        }, {\n          default: () => [_createVNode(\"div\", {\n            \"class\": \"v-snackbar__actions\"\n          }, [slots.actions({\n            isActive\n          })])]\n        })],\n        activator: slots.activator\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VSnackbar.mjs.map","<template>\n    <v-app>\n        <v-snackbar v-model=\"context.showState\" :color=\"context.state.color\" multi-line>\n            {{ context.state.data }}\n        </v-snackbar>\n        <v-app-bar color=\"primary\">\n            <template v-slot:prepend>\n                <v-app-bar-nav-icon icon=\"mdi-apps\"\n                    :title=\"t('nav.panels')\" :aria-label=\"t('nav.panels')\"\n                    @click.stop=\"nav.drawer = !nav.drawer\"/>\n                <v-app-bar-nav-icon v-if=\"slots['app-nav'] && !nav.drawer2\"\n                    icon=\"mdi-menu\"\n                    @click=\"nav.drawer2 = true; nav.drawer = false\"/>\n            </template>\n            <v-app-bar-title id=\"app-bar-sheet-title\"/>\n            <v-app-bar-title id=\"app-bar-title\">\n                <slot name=\"title\" :context=\"context\"/>\n            </v-app-bar-title>\n            <v-spacer/>\n            <div id=\"app-bar-right\" class=\"mr-3\"></div>\n            <slot name=\"app-bar-right\" :context=\"context\"></slot>\n        </v-app-bar>\n        <v-navigation-drawer theme=\"dark\" v-model=\"nav.drawer\">\n            <a class=\"nav-home\">\n                <img v-if=\"logo\" :src=\"logo\" class=\"logo\"/>\n            </a>\n            <slot name=\"nav-start\" :context=\"context\"></slot>\n            <slot name=\"nav-list\" :context=\"context\"></slot>\n            <template #append v-if=\"slots['nav-end']\">\n                <slot name=\"nav-end\" :context=\"context\"></slot>\n            </template>\n        </v-navigation-drawer>\n        <v-main>\n            <slot name=\"main\">\n                <v-tabs-window v-model=\"panels.panel\">\n                    <template #default=\"bind\">\n                        <slot name=\"default\" v-bind=\"bind\" :context=\"context\"></slot>\n                    </template>\n                </v-tabs-window>\n            </slot>\n        </v-main>\n    </v-app>\n</template>\n<style>\n.nav-home {\n    display: block;\n    text-align: left;\n}\n.nav-home .logo {\n    max-height: 4em;\n    margin: 1em 1em 0.4em 1em;\n}\n</style>\n<script setup lang=\"ts\">\nimport { useSlots, withDefaults, onErrorCaptured } from 'vue'\nimport { computed, defineProps, inject, provide, reactive, watch } from 'vue'\n\nimport {useAppContext, usePanels} from 'ox'\nimport type {Model} from '../models'\n\n// we force ox_core locales to be loaded\nimport { useI18n } from 'ox'\nconst { t } = useI18n()\n\nconst slots = useSlots()\n\ninterface Props {\n    apiUrl?: string\n    logo?: string\n    dataEl?: string\n    models?: Model[]\n    data?: object\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n    dataEl: document.body.dataset?.appData\n})\n\nconst nav = reactive({drawer: true})\n\nconst context = useAppContext(props)\nconst panels = usePanels()\n\nwatch(() => [context.state.state, context.state.data], () => {\n    context.showState = true\n})\n\nonErrorCaptured((err, instance, info) => {\n    context.state.error(`${err}`)\n})\n</script>\n","<script>\nimport { h, computed, shallowRef, watch } from 'vue'\nimport { defineAsyncComponent } from 'ox'\n\nexport default {\n    props: {\n        src: String,\n        is: String,\n    },\n\n    setup(props) {\n        const component = shallowRef(null)\n\n        const is = computed(() => {\n            if(props.is)\n                return props.is\n\n            let name = props.src.substring(props.src.lastIndexOf('/')+1)\n            if(name)\n                name = name.substring(0, name.indexOf('.'))\n            if(!name)\n                throw Error(\n                    \"`is` not provided and could not be deducted from `src`.\"\n                )\n            return name\n        })\n\n        function reset() {\n            component.value = defineAsyncComponent(props.src, is.value)\n        }\n\n        watch(() => props.src, reset)\n\n        reset()\n        return () => h(component.value, props)\n    },\n}\n</script>\n","<template>\n    <template v-if=\"props.errors\">\n        <div class=\"password-error\" v-for=\"error in props.errors\">\n            <v-icon icon=\"mdi-alert-circle-outline\"/>\n            {{ error }}\n        </div>\n    </template>\n</template>\n<script setup>\nimport {defineProps} from 'vue'\n\nconst props = defineProps({\n    state: Object,\n    errors: Array\n})\n</script>\n","<template>\n    <form @submit.prevent=\"list.fetch()\" class=\"width-full\">\n        <v-toolbar dense color=\"transparent\">\n            <v-app-bar-nav-icon :icon=\"icon\" readonly/>\n            <v-text-field v-if=\"props.search && list.filters\"\n                :label=\"t('filters.search')\" density=\"compact\" class=\"ml-2\"\n                v-model=\"list.filters[props.search]\"\n                hide-details/>\n            <slot :list=\"list\" :filters=\"list.filters\"/>\n            <v-btn @click.stop=\"list.load()\" class=\"ml-2\" icon=\"mdi-check\"\n                :aria-label=\"$t('filters.apply')\"\n                :title=\"t('filters.apply')\"\n            />\n            <v-btn v-if=\"hasFilters\" @click.stop=\"reset\" icon=\"mdi-backspace\"\n                :aria-label=\"t('filters.reset')\"\n                :title=\"t('filters.reset')\"\n            />\n        </v-toolbar>\n    </form>\n</template>\n<script setup>\nimport { computed, defineProps, defineExpose, inject } from 'vue'\nimport { useI18n } from 'ox'\nconst { t } = useI18n()\n\nconst list = inject('list')\nconst props = defineProps({\n    search: String,\n})\n\nconst hasFilters = computed(() => {\n    const filters = list.filters\n    return filters && Object.entries(filters).some(\n        ([k,v]) => !k.startsWith('page') && !k.startsWith('ordering') && !!v\n    )\n})\nconst icon = computed(() => hasFilters.value ? 'mdi-filter-check' : 'mdi-filter-outline')\n\nfunction reset() {\n    list.filters = {}\n    list.load()\n}\n\ndefineExpose({ icon, hasFilters, reset})\n</script>\n","// Composables\nimport { makeGroupItemProps, useGroupItem } from \"../../composables/group.mjs\"; // Utilities\nimport { VSlideGroupSymbol } from \"./VSlideGroup.mjs\";\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\nexport const VSlideGroupItem = genericComponent()({\n  name: 'VSlideGroupItem',\n  props: makeGroupItemProps(),\n  emits: {\n    'group:selected': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const slideGroupItem = useGroupItem(props, VSlideGroupSymbol);\n    return () => slots.default?.({\n      isSelected: slideGroupItem.isSelected.value,\n      select: slideGroupItem.select,\n      toggle: slideGroupItem.toggle,\n      selectedClass: slideGroupItem.selectedClass.value\n    });\n  }\n});\n//# sourceMappingURL=VSlideGroupItem.mjs.map","<template>\n    <v-sheet>\n    <v-slide-group>\n        <v-slide-group-item v-for=\"(header, idx) in props.headers\" :key=\"header.value\"\n            v-slot=\"{selectedClass}\">\n            <v-card width=\"400\" :class=\"['ma-3', selectedClass]\"\n                    :color=\"color(idx)\" lines=\"two\">\n                <v-card-title>{{ header.title }}</v-card-title>\n                <v-list :bg-color=\"color(idx)\">\n                    <template v-if=\"sorted && sorted[header.value]\">\n                        <template v-for=\"item in sorted[header.value]\" :key=\"item.id\">\n                            <slot name=\"item\" :header=\"header\" :item=\"item\">\n                                <v-list-item :title=\"item[props.itemTitle]\"\n                                        :value=\"props.itemValue && item[props.itemValue]\"\n                                        @click=\"emits('click', item)\">\n                                    <template #append>\n                                        <slot name=\"item.action\"></slot>\n                                    </template>\n                                </v-list-item>\n                            </slot>\n                        </template>\n                    </template>\n                </v-list>\n            </v-card>\n        </v-slide-group-item>\n    </v-slide-group>\n    </v-sheet>\n</template>\n<script setup>\nimport { computed, defineEmits, defineProps, inject } from 'vue'\n\nconst emits = defineEmits(['click'])\nconst list = inject('list')\n\nconst props = defineProps({\n    itemTitle: String,\n    itemValue: String,\n    field: String,\n    headers: Array,\n    colors: {type: Array, default: () => [\n        'purple', 'blue', 'teal', 'lime', 'orange', 'blue-gray',\n        'pink', 'indigo', 'cyan', 'light-green', 'amber', 'brown',\n        'red', 'deep-purple', 'light-blue', 'green', 'yellow', 'deep-orange'\n    ]},\n    colorVariant: {type: String, default: 'lighten-2'},\n})\n\nconst items = computed(() => list.items)\n\nfunction color(idx) {\n    idx = idx % props.colors.length\n    if(props.colorVariant)\n        return props.colors[idx] + '-' + props.colorVariant\n    return props.colors[idx]\n}\n\n\nfunction assign(result, item, val) {\n    if(result[val])\n        !result[val].includes(item) && result[val].push(item)\n    else\n        result[val] = [item]\n}\n\nconst sorted = computed(() => {\n    const result = {}\n    if(items.value)\n        for(var item of items.value) {\n            const vals = item[props.field]\n            if(Array.isArray(vals)) {\n                if(vals.length)\n                    for(var val of vals)\n                        assign(result, item, val)\n                else\n                    assign(result, item, null)\n            }\n            else\n                assign(result, item, vals)\n        }\n    return result\n})\n</script>\n","<template>\n    <v-data-table-server\n            :items=\"list.items\" item-index=\"id\" :items-length=\"list.count || list.items.length\"\n            :loading=\"list.state?.isProcessing\"\n            :headers=\"headers\"\n            @update:options=\"updateOptions\">\n        <template v-slot:loading>\n            <v-skeleton-loader type=\"table-row@10\"></v-skeleton-loader>\n        </template>\n\n        <template v-for=\"(_, name) in itemSlots\" :key=\"name\" v-slot:[name]=\"bind\">\n            <slot :name=\"name\" v-bind=\"bind\"/>\n        </template>\n\n        <template #item.actions=\"{item}\">\n            <ox-action v-if=\"edit\"\n                icon=\"mdi-pencil\" button\n                :title=\"t('actions.edit')\"\n                :permissions=\"permissions\"\n                :item=\"item\"\n                :run=\"runEdit\"/>\n            <slot name=\"item.actions\" :value=\"item\" :dense=\"true\" :button=\"true\"/>\n        </template>\n    </v-data-table-server>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, useSlots } from 'vue'\n\nimport { useI18n, tKeys } from 'ox'\nimport { Permissions } from '../models'\nimport { filterSlots } from '../utils'\nimport OxAction from './OxAction.vue'\n\nconst { t } = useI18n()\nconst slots = useSlots()\nconst itemSlots = filterSlots(slots, 'item.', {exclude: ['item.actions']})\n\nconst panel = inject('panel')\nconst list = inject('list')\nconst permissions = new Permissions('change')\nconst props = defineProps({\n    // list: Object,\n    headers: Array,\n    edit: Boolean,\n})\n\n\nconst headers = computed(() => {\n    return props.headers.reduce((dst, field) => {\n        dst.push(\n            (typeof(field) == 'string') ?\n            {key: field, title: t(tKeys.field(field))} : field\n        )\n        return dst\n    }, [])\n})\n\n\nfunction updateOptions(event) {\n    return list.fetch({\n        filters: {\n            \"page\": event.page,\n            \"page_size\": event.itemsPerPage,\n            \"ordering\": event.sortBy.map(({key, order}) => order == 'asc' ? key : `-${key}`)\n        }\n    })\n}\n\nfunction runEdit(user, item) {\n    panel.show({view: 'detail.edit', value: item})\n}\n</script>\n","<template>\n    <v-alert v-if=\"props.state.isNone && slots.none\" type=\"info\" variant=\"tonal\" class=\"mb-3\"\n            :state=\"state\" :title=\"noneTitle\">\n        <slot name=\"none\" :state=\"state\"></slot>\n    </v-alert>\n    <v-alert v-else-if=\"displayProcessing\" type=\"info\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"processingTitle\">\n        <slot name=\"processing\" :state=\"state\">\n            Data are being sent to server, please be patient. If this message persist you might wan't to retry.\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isError\" type=\"error\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"errorTitle\" >\n        <slot name=\"error\" :state=\"state\">\n            Oups... something wrong happened.\n        </slot>\n        <slot name=\"error-detail\" :state=\"state\">\n        </slot>\n    </v-alert>\n    <v-alert v-else-if=\"props.state.isOk\" type=\"success\" variant=\"tonal\" class=\"mb-3\" closable\n            :state=\"state\" :title=\"okTitle\">\n        <slot name=\"ok\" :state=\"state\">\n            <p>Congrats! Data have been updated.</p>\n        </slot>\n        <template v-if=\"messages\">\n            <v-divider/>\n            <p v-for=\"message in messages\">{{ message }}</p>\n        </template>\n        <slot name=\"ok-detail\" :state=\"state\"></slot>\n    </v-alert>\n    <slot :state=\"props.state\"></slot>\n</template>\n<script setup>\n// TODO: expandable detail error\nimport {defineProps, useSlots, computed, ref, watch} from 'vue'\nimport {VAlert} from 'vuetify/components/VAlert'\nimport {States} from '../utils/state'\n\nconst slots = useSlots()\nconst props = defineProps({\n    state: Object,\n    delay: {type: Boolean, default: false},\n    okTitle: {type: String, default: \"\"},\n    noneTitle: {type: String, default: \"\"},\n    errorTitle: {type: String, default: \"Oups...\"},\n    processingTitle: {type: String, default: \"Processing...\"},\n})\n\n\nlet timeoutId = null\nlet expired = ref(false)\n\nwatch(() => props.state.state, (val) => {\n    if(timeoutId !== null)\n        window.clearTimeout(timeoutId)\n\n    if(!props.delay)\n        return\n\n    if(val == States.PROCESSING) {\n        expired.value = false\n        window.setTimeout(() => { expired.value = true }, 5000)\n    }\n})\n\nconst displayProcessing = computed(() => props.state?.isProcessing && (!props.delay || expired.value))\nconst messages = computed(() => props.state?.data?.messages)\n\n\n\n</script>\n","<template>\n    <div class=\"text-right\">\n        <v-btn color=\"error\" class=\"me-2\" :prepend-icon=\"props.resetIcon\"\n                @click=\"emit('reset')\"\n                :disabled=\"props.disabled\">\n            <slot name=\"reset\">{{ props.resetLabel }}</slot>\n        </v-btn>\n        <v-btn v-if=\"props.state.isSending\"\n                color=\"primary\" prepend-icon=\"mdi-content-save\" disabled>\n            Saving\n        </v-btn>\n        <v-btn v-else color=\"primary\" :prepend-icon=\"props.validateIcon\"\n                @click=\"emit('validate')\"\n                :disabled=\"props.disabled || props.validateDisabled\">\n            <slot name=\"validate\">{{ props.validateLabel }}</slot>\n        </v-btn>\n        </div>\n</template>\n<script setup>\nimport {defineEmits, defineProps} from 'vue'\nimport {VBtn} from 'vuetify/components/VBtn'\n\nconst emit = defineEmits(['validate', 'reset'])\nconst props = defineProps({\n    resetLabel: {type: String, default: \"Reset\"},\n    resetIcon: {type: String, default: \"mdi-close-circle\"},\n    validateLabel: {type: String, default: \"Save\"},\n    validateIcon: {type: String, default: \"mdi-content-save\"},\n    disabled: {type: Boolean, default: false},\n    state: {type: Object, default: () => State.none()},\n    validateDisabled: {type: Boolean, default: false},\n})\n</script>\n","<template>\n    <ox-state-alert :state=\"state\">\n        <template #none=\"{state}\">\n            <p>Please enter your credentials in order too proceed...</p>\n        </template>\n        <template #ok-detail=\"{state}\">\n            <p v-if=\"props.next\">You soon will be redirected to <i>{{ props.next }}</i></p>\n        </template>\n        <template #error=\"{state}\">\n            <ox-field-details :errors=\"state.data?.username\"/>\n            <ox-field-details :errors=\"state.data?.password\"/>\n        </template>\n    </ox-state-alert>\n    <template v-if=\"!state.isOk\">\n        <v-text-field variant=\"underlined\"\n                label=\"Enter login\" v-model=\"credentials.username\"\n                @keyup.enter.stop=\"passwordInput.focus()\"\n                >\n        </v-text-field>\n        <v-text-field variant=\"underlined\" ref=\"password\"\n                label=\"Enter password\" v-model=\"credentials.password\"\n                :type=\"showPassword ? 'text' : 'password'\"\n                :append-icon=\"showPassword ? 'mdi-eye' : 'mdi-eye-off'\"\n                @click:append=\"showPassword = !showPassword\"\n                @keyup.enter.stop=\"login()\"\n                >\n        </v-text-field>\n        <div class=\"text-right mt-3\">\n            <slot name=\"default\" :value=\"credentials.password\">\n                <ox-validation-btn v-if=\"credentials.username && credentials.password\"\n                    validate-label=\"Login!\"\n                    @validate=\"login()\" @reset=\"reset()\"\n                    :state=\"state\"/>\n            </slot>\n        </div>\n    </template>\n</template>\n<script setup>\nimport {computed, inject, ref, reactive, defineModel, defineProps, useTemplateRef} from 'vue'\n\nimport OxStateAlert from './OxStateAlert'\nimport OxValidationBtn from './OxValidationBtn.vue'\nimport OxFieldDetails from './OxFieldDetails.vue'\nimport config from '../config'\n\nimport State from '../utils/state'\nimport {reset as $reset} from '../utils'\nimport {User} from '../models/auth'\n\n\nconst passwordInput = useTemplateRef('password')\n\nconst props = defineProps({\n    next: {type: String},\n    url: {type: String},\n})\n\nconst emit = defineEmits(['save', 'saved'])\nconst credentials = reactive({\n    username: '',\n    password: '',\n})\nconst showPassword = ref(false)\nconst state = reactive(new State())\n\nfunction reset(resetState=true) {\n    $reset(credentials, {\"username\": \"\", password: \"\"})\n    resetState && state.none()\n}\n\nasync function login() {\n    state.processing()\n\n    try {\n        const resp = await fetch(props.url, {\n            method: \"POST\",\n            headers: config.axiosConfig.headers,\n            body: JSON.stringify(credentials),\n        })\n        if(resp.status == 200) {\n            credentials.credentials = \"\"\n            credentials.password = \"\"\n            state.ok(await resp.json())\n\n            if(props.next)\n                window.location.href = props.next\n        }\n        else\n            state.error(await resp.json())\n    }\n    catch(error) {\n        state.ok(error?.message || error)\n    }\n}\n</script>\n","<template>\n    <v-tabs-window-item :value=\"props.name\">\n        <ox-state-alert v-if=\"props.state\" :state=\"props.state\" delay/>\n        <v-sheet class=\"ma-4\">\n            <Teleport to=\"#app-bar-sheet-title\" :disabled=\"!mounted || panels.panel != props.name\">\n                <v-icon v-if=\"props.icon\" :icon=\"props.icon\"/>\n                {{ props.title }}\n            </Teleport>\n\n            <Teleport to=\"#app-bar-right\" :disabled=\"!mounted || panels.panel != props.name\">\n                <slot name=\"append-title\"/>\n                <v-btn v-if=\"props.help\" class=\"ml-3\"\n                    :href=\"props.help\" panels=\"new\"\n                    icon=\"mdi-information-outline\" />\n            </Teleport>\n\n            <slot name=\"top\"></slot>\n\n            <slot name=\"default\">\n                <template v-if=\"views\">\n                    <v-window v-model=\"panel.view\">\n                        <template v-for=\"(name, slot) in views\" :key=\"name\">\n                            <v-window-item :value=\"name\">\n                                <slot :name=\"slot\"></slot>\n                            </v-window-item>\n                        </template>\n                    </v-window>\n                </template>\n            </slot>\n\n            <slot name=\"bottom\"></slot>\n        </v-sheet>\n    </v-tabs-window-item>\n</template>\n<script setup lang=\"ts\">\nimport { defineProps, inject, onMounted, onUnmounted, ref, useSlots, watch } from 'vue'\nimport {filterSlots} from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport type {IPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst props = defineProps<IPanelProps>()\nconst views = filterSlots(slots, 'views.')\n\n// ensure teleport will be set after component has been mounted\nconst mounted = ref(false)\nonMounted(() => { mounted.value = true })\nonUnmounted(() => { mounted.value = false })\n\nconst panels = inject('panels')\nconst panel = inject('panel')\n</script>\n","<template>\n    <ox-state-alert :state=\"editor.state\"/>\n    <div class=\"mb-3\">\n        <ox-validation-btn v-if=\"edited\"\n            @validate=\"editor.save()\" @reset=\"editor.discard()\" :state=\"editor.state\" :validate-disabled=\"!editor.valid\"/>\n    </div>\n    <template v-if=\"tabs && Object.keys(tabs).length\">\n        <v-tabs v-model=\"tab\">\n            <slot name=\"tab.default\" v-bind=\"bind\">\n                <v-tab :text=\"t(`models.${model.entity}`)\" value=\"model\"/>\n            </slot>\n            <template v-for=\"(_, name) in tabs\">\n                <slot :name=\"name\" v-bind=\"bind\"></slot>\n            </template>\n        </v-tabs>\n        <v-tabs-window v-model=\"tab\">\n            <v-tabs-window-item value=\"model\">\n                <slot name=\"window.default\" v-bind=\"bind\"></slot>\n            </v-tabs-window-item>\n            <template v-for=\"(value, name) in windows\">\n                <v-tabs-window-item :value=\"value\">\n                    <slot :name=\"name\" v-bind=\"bind\"></slot>\n                </v-tabs-window-item>\n            </template>\n        </v-tabs-window>\n    </template>\n    <template v-else>\n        <slot name=\"window.default\" v-bind=\"bind\"></slot>\n    </template>\n</template>\n<script setup lang=\"ts\">\nimport { computed, ref, defineProps, inject, toRefs, useSlots, watch } from 'vue'\nimport { useI18n, filterSlots, useModelEditor } from 'ox'\n\nimport OxStateAlert from './OxStateAlert.vue'\nimport OxValidationBtn from './OxValidationBtn.vue'\n\nimport type {IModelEditorProps} from '../controllers/modelEditor'\n\nconst { t } = useI18n()\n\nconst props = defineProps<IModelEditorProps>()\nconst editor = useModelEditor({props})\nconst model = computed(() => editor.repo.model)\nconst {value, edited} = toRefs(editor)\n\n// ---- Slots & tabs\nconst tab = ref(null)\nconst slots = useSlots()\n\nconst tabs = filterSlots(slots, \"tab.\", {exclude: \"tab.default\"})\nconst windows = filterSlots(slots, \"window.\", {exclude: \"window.default\"})\n\nconst bind = computed(() => {\n    return {\n        value: value.value,\n        model: model.value,\n    }\n})\n</script>\n","<template>\n    <ox-panel :name=\"props.name\" :title=\"panel.title\" :icon=\"panel.icon\"\n            :state=\"list.state\" :index=\"props.index\">\n        <template #append-title>\n            <slot name=\"append-title\" v-bind=\"bind\"/>\n\n            <template v-if=\"panel.view.startsWith('list.')\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\"\n                        density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.list\" v-bind=\"bind\"/>\n                    <v-btn v-if=\"filters\"\n                        :title=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        :aria-label=\"showFilters ? t('filters.hide') : t('filters.show')\"\n                        @click=\"showFilters = !showFilters\" :active=\"showFilters\">\n                        <v-icon :icon=\"filters.icon\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n            <template v-else-if=\"panel.view.startsWith('detail.') && panel.value\">\n                <v-btn-group class=\"ml-3\" color=\"secondary\" density=\"compact\" variant=\"tonal\">\n                    <slot name=\"nav.detail\" v-bind=\"bind\"/>\n\n                    <template v-if=\"panel.view == 'detail.edit' && panel.value\">\n                        <v-menu>\n                            <template #activator=\"{props}\">\n                                <v-btn prepend-icon=\"mdi-dots-vertical\" v-bind=\"props\">\n                                    {{ t('actions') }}\n                                </v-btn>\n                            </template>\n                            <v-list>\n                                <slot name=\"item.actions\" :value=\"panel.value\"/>\n                            </v-list>\n                        </v-menu>\n                    </template>\n\n                    <v-btn :disabled=\"!panel.prev\"\n                            :title=\"t('prev')\" :aria-label=\"t('prev')\"\n                            @click.stop=\"panel.show({value: panel.prev})\">\n                        <v-icon icon=\"mdi-chevron-left\"/>\n                    </v-btn>\n                    <v-btn :disabled=\"!panel.next\"\n                            :title=\"t('next')\" :aria-label=\"t('next')\"\n                            @click.stop=\"panel.show({value: panel.next})\">\n                        <v-icon icon=\"mdi-chevron-right\"/>\n                    </v-btn>\n                </v-btn-group>\n            </template>\n\n            <v-btn-toggle class=\"ml-3\" color=\"secondary\" v-model=\"panel.view\" density=\"compact\" variant=\"tonal\">\n                <!-- TODO: permission check -->\n                <v-btn value=\"list.table\"\n                        :title=\"t('panels.nav.table')\"\n                        :aria-label=\"t('panels.nav.table')\">\n                    <v-icon>mdi-table</v-icon>\n                </v-btn>\n                <v-btn value=\"list.cards\" v-if=\"slots['views.list.cards']\"\n                        :title=\"t('panels.nav.cards')\"\n                        :aria-label=\"t('panels.nav.cards')\">\n                    <v-icon>mdi-card-account-details</v-icon>\n                </v-btn>\n                <v-btn value=\"list.kanban\" v-if=\"slots['views.list.kanban']\"\n                        :title=\"t('panels.nav.kanban')\"\n                        :aria-label=\"t('panels.nav.kanban')\">\n                    <v-icon>mdi-view-column</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.add\" v-if=\"editSlots\"\n                        @click.stop=\"panel.create()\"\n                        :title=\"t('panels.nav.add')\"\n                        :aria-label=\"t('panels.nav.add')\">\n                    <v-icon>mdi-plus-box</v-icon>\n                </v-btn>\n                <v-btn value=\"detail.edit\" v-if=\"slots['views.detail.edit'] || editSlots\"\n                        :disabled=\"!panel.value?.id\"\n                        :title=\"t('panels.nav.edit')\"\n                        :aria-label=\"t('panels.nav.edit')\">\n                    <v-icon>mdi-pencil</v-icon>\n                </v-btn>\n                <slot name=\"nav.views\" v-bind=\"bind\"/>\n            </v-btn-toggle>\n        </template>\n\n        <template #top>\n            <ox-list-filters ref=\"filters\"\n                    v-show=\"panel.view.startsWith('list.') && showFilters\"\n                    :search=\"props.search\"\n                    teleport-to=\"#panel-list-actions\">\n                <template #default=\"bind\">\n                    <slot name=\"list.filters\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-filters>\n        </template>\n\n        <!-- list.table is always provided -->\n        <template #views.list.table v-if=\"!slots['views.list.table']\">\n            <ox-list-table :headers=\"headers\" edit>\n                <template v-for=\"(_, name) in itemSlots\" v-slot:[name]=\"bind\" :key=\"name\">\n                    <slot :name=\"name\" v-bind=\"bind\"/>\n                </template>\n            </ox-list-table>\n        </template>\n\n        <template v-for=\"(name, slot) in viewsListSlots\" v-slot:[slot]>\n            <slot :name=\"slot\" v-bind=\"bind\"/>\n        </template>\n\n        <template #views.detail.edit v-if=\"slots['views.detail.edit'] || editSlots\">\n            <ox-model-edit\n                :repo=\"panel.repo\" :initial=\"panel.value\"\n                :name=\"`${panel.model.entity}-edit`\"\n                :saved=\"(item) => panel.value = item\">\n                <template v-for=\"(name, slot) in editSlots\" #[name]=\"bind\">\n                    <slot :name=\"slot\" v-bind=\"bind\"/>\n                </template>\n            </ox-model-edit>\n        </template>\n    </ox-panel>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject, useTemplateRef, useSlots, toRefs, withDefaults } from 'vue'\nimport { Teleport } from 'vue'\n\nimport OxAction from './OxAction.vue'\nimport OxListFilters from './OxListFilters.vue'\nimport OxListTable from './OxListTable.vue'\nimport OxPanel from './OxPanel.vue'\nimport OxModelEdit from './OxModelEdit.vue'\n\nimport {t, filterSlots, useModelPanel, useModelDetail, useModelList} from 'ox'\nimport type {IModelPanelProps} from '../controllers'\n\nconst slots = useSlots()\nconst viewsListSlots = filterSlots(slots, 'views.list.')\nconst itemSlots = filterSlots(slots, 'item.')\nconst editSlots = filterSlots(slots, 'views.detail.edit.')\n\nconst filters = useTemplateRef('filters')\nconst props = withDefaults(defineProps<IModelPanelProps>(), {\n    index: 'list.table'\n})\n\nconst panel = inject('panel') ?? useModelPanel({props})\nconst panels = panel.panels\nconst list = panel.list\n\nconst {showFilters} = toRefs(panel)\nconst headers = computed(() => [\n    ...props.headers,\n    {key: 'actions', title: t('actions')},\n])\n\nconst bind = computed(() => {\n    return ({\n        panel,\n        panels,\n        list,\n        value: panel.value\n    })\n})\n</script>\n","<template>\n    <v-list-item\n        :active=\"panels.panel == props.name\"\n        :prepend-icon=\"props.icon\" :title=\"props.title\"\n        @click.stop=\"panels.show(props)\"/>\n</template>\n<script setup lang=\"ts\">\nimport { computed, defineProps, inject } from 'vue'\nimport type {IPanelNavProps} from '../controllers'\n\nconst props = defineProps<IPanelNavProps>()\n\nconst panels = inject('panels')\nconst visible = computed(() => !props.auto || panel.name == props.name)\n</script>\n","import * as ox from './ox'\nimport {components as vendor} from 'ox/vendor'\n\nexport * from './ox'\n\n\n/**\n * This is the base app config used for Oxylus' Vue based applicationns.\n *\n * It includes Oxylus components and some Vuetify's ones.\n *\n *\n * @example\n * // Example app.ts for another application.\n *\n * import {App} from 'ox/components'\n * import * as components from './components'\n *\n * export default {\n *     extends: App,\n *     components,\n * }\n */\nexport const App = {\n    el: \"#app\",\n    delimiters: ['[[', ']]'],\n    components: {...ox, ...vendor},\n}\n"],"names":["props","__props","emits","__emit","context","inject","action","useAction","run","args","t","useI18n","panel","repos","user","item","useSlots","useCountdown","milliseconds","time","shallowRef","timer","clear","reset","nextTick","start","el","style","interval","startTime","elapsed","onScopeDispose","makeVSnackbarProps","propsFactory","makeLocationProps","makePositionProps","makeRoundedProps","makeVariantProps","makeThemeProps","omit","makeVOverlayProps","VSnackbar","genericComponent","v","_ref","slots","isActive","useProxiedModel","positionClasses","usePosition","scopeId","useScopeId","themeClasses","provideTheme","colorClasses","colorStyles","variantClasses","useVariant","roundedClasses","useRounded","countdown","overlay","ref","timerRef","isHovering","startY","mainStyles","hasLayout","VuetifyLayoutKey","useToggleScope","layout","useLayout","watchEffect","watch","startTimeout","onMounted","activeTimeout","timeout","element","refElement","clearTimeout","onPointerenter","onPointerleave","onTouchstart","event","onTouchend","onAfterLeave","locationClasses","computed","acc","loc","useRender","overlayProps","VOverlay","hasContent","_createVNode","_mergeProps","$event","mergeProps","genOverlays","VProgressLinear","_a","_b","VDefaultsProvider","forwardRefs","nav","reactive","useAppContext","panels","usePanels","onErrorCaptured","err","instance","info","_sfc_main","component","is","name","defineAsyncComponent","h","list","hasFilters","filters","k","icon","__expose","VSlideGroupItem","makeGroupItemProps","val","slideGroupItem","useGroupItem","VSlideGroupSymbol","items","color","idx","assign","result","sorted","vals","itemSlots","filterSlots","permissions","Permissions","headers","dst","field","tKeys","updateOptions","key","order","runEdit","expired","States","displayProcessing","messages","emit","passwordInput","useTemplateRef","credentials","showPassword","state","State","resetState","$reset","login","resp","config","error","views","mounted","onUnmounted","editor","useModelEditor","model","value","edited","toRefs","tab","tabs","windows","bind","viewsListSlots","editSlots","useModelPanel","showFilters","App","ox","vendor"],"mappings":"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","x_google_ignoreList":[3,8]}
